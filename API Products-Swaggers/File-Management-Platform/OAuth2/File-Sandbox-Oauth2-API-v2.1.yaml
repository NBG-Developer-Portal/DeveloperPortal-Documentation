swagger: '2.0'
info:
  version: v2.1
  title: File Sandbox OAuth2 API
  description: >
    Start integrating your application with our Bank and give your clients the
    options upload and download files without any restriction, neither size nor
    file type.


    ## How to upload

    There are only 2 steps in order to upload a file.


    1. Initiate an upload request in order to be informed of the size and the
    number of the chunks that the initial file should be seperated. You can use
    our own console application which takes over the seperation/upload process
    and the download process as well. Initiation could be invoke by typing **PUT
    /files/upload-initiation**

    2. Upload the chunks one by one in a chronologically and incremental way as
    they seperated. Upload can be invoked by typing **POST
    /files/{fileId}/upload**. The File identifier is retrieved from the previous
    step. Let's say there are 3 chunks, the first two chunks return an HTTP
    Status Code 308 Range and the final one returns HTTP Status Code 200 OK
    which indicates that the operation ended successfully.


    Between and after the above steps you can be informed about the status of
    the operation by invoking **GET /files/{fileId}**.


    ## How to download

    A file can be downloaded by providing the file identifier and the chunk
    number one by one. Let's say a file is seperated in 3 chunks, the download
    action **GET /files/{fileId}/{chunkPart}** should be invoked 3 times by
    specifying the same fileId and chunk parts one by one (first 1 then 2 and
    lastly 3). The total chunks of an file can be retrieved from GET
    /files/{fileId} action.


    ## File API Command Line Interface (CLI)


    As stated above, you can use this API from your console application by
    utilizing the FileAPI_CLI tool. FileAPI_CLI tool is a complete command-line
    interface that enables you to configure or execute commands from your
    command-line environment.  

    By utilizing the File API CLI you enable a machine-to-machine connection and
    communication. You can integrate the CLI to your systems and use the File
    API through your software and applications.

    ### Running the CLI

    The application leverages the .Net Core Runtime library to be able to
    conform to the multiplatform requirements. In order to run the application
    the current .Net Core Runtime for your environment must be downloaded and
    installed (https://dotnet.microsoft.com/download).


    The application is run through CMD by navigating to the location of the
    exported  "FIleAPI_CLI.dll" file (in most cases the bin file of the project
    will contain said .dll)  and using the command 'dotnet' followed by the .dll
    of the app and the accompanying  parameters as described further below in
    these instructions (Examples Section). (the location needs to include the
    configuration files "appSettings.json" and "inputData.json" also by default
    contained in the project's bin file )


    ### Configuration

    The FileAPI_CLI tool enables you to configure (.json) files necessary for
    setting up authorization or proxy for application endpoints or the parameter
    values used in each command. 

    1. **appSettings.json** Within the "appSettings.json" file, the information
    about authorization and proxy application endpoints are configured.
         
         "Password" grant type is used for the **authorization**.
         You will need to **contact us** to provide you access for the "Password" grant type authorization.
         By providing the client_id and client_secret of the APP that you created and subscribed to the FILE MANAGEMENT PLATFORM, and your own credentials (username, password) that you use to sign in the NBG Technology HUB, the CLI will authorize you and perform the required operation.
         
         "client_id": "client_id_guid" 
         "client_secret": "client_secret_guid" 
         "username": "your_portal_username" 
         "password": "your_portal_password"
         
         For users using Developer Portal credentials:
         arc_provider=1
         
         For users using iBank credentials:
         arc_provider=5
         
         It is suggested to use arc_provider=1 for sandbox calls and arc_provider=5 for production calls.
         
         For sandbox calls your sandbox_id also needs to be provided here."ethnofiles_sandbox_id": "MyUniqueSandbox"


    2. **inputData.json** Within the "inputData.json" file, the default
    parameter values used in each command, are configured. In order for these
    values to be used in a command, the argument "--completefromconfig" must
    also be used. This makes every argument missing from the command to be
    completed from the value set in the inputData.json file.
         
         If the "--completefromconfig" argument is not used this file will be ignored during the operation and only the arguments you provide in the command will be used.



    ### Commands


    The FileAPI_CLI offers a set of different commands that you can utilize:


    1. Upload: Upload a file from a specified path


    2. Download: Download a file by its GUID, in a specified directory


    3. Add user tags: Add user tags to a file 


    4. Remove user tags: Remove user tags from a file


    5. Send a file to ethnofiels: Send a file to Ethnofiles


    For the better understanding of the FileAPI_CLI we will go through some
    examples of the commands and how you can utilize them. 


    **Upload Example**

    *> dotnet FIleAPICLI.dll --u --user MyUser --registry MyRegistry --inputfile
    "../Files/smallfile.txt" --filedescription "Example Uploaded from cli tool"*


    **Download Example**

    *> dotnet FIleAPICLI.dll --d --user MyUser --registry MyRegistry --fileid 
    aa7429d0-19ad-4efd-b1ac-02e42f128cd7 --downloadfolder C:\OutputFile*


    For **more inforamtion** on how to use FileAPI_CLI please visit:
    https://github.com/myNBGcode/Files_Ethnofiles_CLI_EXAMPLE/blob/master/BasicInstructions.md

    ## How To Get Started 


    1. Login/Register to the NBG Technology HUB

    2. Go to **"APPS"**
    
    3. Select your Organization and go to step 4. If you want to create a new Organization click **\"CREATE AN ORGANIZATION\"** and follow the steps below:
        1. Enter the title of your Organization
        2. Enter a short description of your Organization (optional)
        3. Click **"SUBMIT"**

    4. Select the Organization of choice and click **"ADD AN APPLICATION"** 
          1. Fill in the forms (title and short description)
          2. Check **\"Authorization Code\" and \"Client Credentials\"** 
          3. Enter the **OAuth Redirect and Post Logout URIs** (these are the URIs that we will redirect the user upon logging in and logging out respectively)
              
              You can use the following redirect URL to easily test the API through the portal: *https://developer.nbg.gr/oauth2/redoc-callback*
          4. Click **"SUBMIT"**
          5. Store the APPs **"Client ID"** and **"Client Secret"**
          
    5. Go to **"API PRODUCTS"** and select the **FILE MANAGEMENT PLATFORM API**

    6. Click **\"START USING THIS API\"**, choose your app and click
    **"SUBSCRIBE"**

      ### Sandbox Flow

      1. Get an **Access Token** using the **Authorization Code Flow** (with the credentials that you used to sign in as a developer) and the **API scopes** provided in the Authentication and Authorization (OAuth2) section below
      2. Create a **Sandbox**
     
      3. Get an **Access Token** using the Client Credentials flow and the API scopes provided in the Authentication and Authorization (OAuth2) section below
       
      4. Use the credentials you signed in as a developer to give your consent
      5. Play with the API


    ## Authentication and Authorization (OAuth2) 


    This API version uses the OAuth2 protocol for redirection based on
    **authentication** and **authorization**, which means that a Bearer (access
    token) should be acquired. 


    An **access token** can be retrieved using the **client_id** and
    **client_secret** of the APP that you created and subscribed in this API,
    and your **own credentials** (username, password) that you use to sign in
    the NBG Technology HUB. 


    The scopes and endpoints are defined below:


    ### *SCOPES*


    For the ***Authorization*** Code:


    **Sandbox Scopes**: 
        
        openid profile role sandbox-file-api-v2-1

    **Production Scopes**: 
        
        openid profile ibank_profile role file-api-v2

    For the ***Client Credentials***:


    **Sandbox Scopes**: 

        sandbox-file-api-v2-1

    **Production Scopes**: 
        
        file-api-v2

    ### *ENDPOINTS*


    **Authorization Endpoint**: https://my.nbg.gr/identity/connect/authorize


    **Token  Endpoint**: https://my.nbg.gr/identity/connect/token


    See more [here](https://developer.nbg.gr/oauth-document)


    ## Create your Sandbox


    Sandboxes are self - contained testing environments that provide a simple
    way of testing the API without any real impact, meaning that no personal or
    financial data is used.


    You can create **your Sandbox** by invoking the **POST** /api/sandbox call
    by simply providing an “id” as your sandbox id and naming it almost anything
    you like. **Moreover you should provide the name (userId) of the user that
    is going to be created in the default data. The 'userId' must be the same as
    the username of the logged in user in the NBG Technology Hub.**


    **_Important!_** Don't lose your sandbox_id, since you will need it for all
    the API calls. Sandbox endpoints are not included in the production version
    API.


    ## Start Testing


    Once you have your sandbox_id, you can start invoking the rest of the
    operations by providing the mandatory http header **sandbox_id** and the
    other required information on the “_request body payload_” (e.g. “userId”).


    ## Important notes


    Request headers

    1. Each request **_MUST_** have a new GUID passed to request.header.ID

    2. Pass your client_id to request.header.application

    ## Feedback and Questions


    We would love to hear your feedback and answer your questions. Send us at
    [developer@nbg.gr](developer@nbg.gr)


    [Sandbox Postman
    Collection](https://github.com/NBG-Developer-Portal/File-API)



    ------------------------------------------------------------------------



    Created by **NBG**. 


    See more at [https://www.nbg.gr/](https://www.nbg.gr/) 




     # Entities 

     Below, the main entities are documented.
     <a name=UploadInitiationRequest></a> 
    ## UploadInitiationRequest 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | folderId| Folder identifier| string|

    | fileName| File name| string|

    | fileDescription| File description| string|

    | userTags| User custom tag e.g. hashtag| array|

    | fileSize| File size in MB| integer|

    | metadata| File custom metadata| string|

    | fileIcon| File image| string|

    | requester| Request entity details e.g. id and registry| object|

    | subject| Request entity details e.g. id and registry| object|

     <a name=RequestEntity></a> 
    ## RequestEntity 

    Request entity details e.g. id and registry 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | id| Id e.g. IBank User Identifier| string|

    | registry| Registry e.g. IBank| string|

     <a name=UploadRequest></a> 
    ## UploadRequest 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | fileContent| File content| string|

    | chunkPart| File Chunk part| integer|

    | requester| Request entity details e.g. id and registry| object|

    | subject| Request entity details e.g. id and registry| object|

     <a name=UpdateFileRequest></a> 
    ## UpdateFileRequest 

    Update file details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | fileName| File name| string|

    | userTags| User custom tag, used like a hashtag| array|

    | fileDescription| File description| string|

    | fileIcon| File image| string|

    | folderId| folderId can be used in order to move the specific file inside
    the folder with id folderId| string|

    | useFolderId| True  : If folderId is null set it null False : If folderId
    is null ignore it| boolean|

    | requester| Request entity details e.g. id and registry| object|

    | subject| Request entity details e.g. id and registry| object|

     <a name=UpdateStatusRequest></a> 
    ## UpdateStatusRequest 

    Update file status 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | fileStatus| File Status| string|

    | requester| Request entity details e.g. id and registry| object|

    | subject| Request entity details e.g. id and registry| object|

     <a name=ShareFileRequest></a> 
    ## ShareFileRequest 

    Share File 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | permissions| User file permission| object|

    | requester| Request entity details e.g. id and registry| object|

    | subject| Request entity details e.g. id and registry| object|

     <a name=UserPermissions></a> 
    ## UserPermissions 

    User file permission 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | canAdd| add capability| boolean|

    | canView| view capability| boolean|

    | canEditMetadata| edit capability| boolean|

    | canMove| move capability| boolean|

    | canDelete| delete capability| boolean|

    | canShare| share capability| boolean|

     <a name=PopulateFileTypesRequest></a> 
    ## PopulateFileTypesRequest 

    Populate File Types Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| Request body Header| object|

    | payload| Populate File types Request Payload| object|

     <a name=RequestHeader></a> 
    ## RequestHeader 

    Request body Header 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | ID| Request header id| string|

    | application| Application / client id| string|

    | channel| Channel| string|

     <a name=PopulateFiletypesRequestPayload></a> 
    ## PopulateFiletypesRequestPayload 

    Populate File types Request Payload 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | userId| User id| string|

     <a name=SendFileToEthnofilesRequest></a> 
    ## SendFileToEthnofilesRequest 

    Send File To Ethnofiles Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| Request body Header| object|

    | payload| Send File To Ethnofiles Request Payload| object|

     <a name=SendFileToEthnofilesRequestPayload></a> 
    ## SendFileToEthnofilesRequestPayload 

    Send File To Ethnofiles Request Payload 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | fileApiFileId| The file guid from the file api| string|

    | userId| User id| string|

    | fileTypeId| File Type id from ethnofiles| string|

    | rowCount| The count of the rows in the file| integer|

    | totalSum| The total sum of the file| number|

    | tanNumber| Tan Number| string|

    | locale| Locale| string|

    | inboxId| Inbox id| string|

    | xactionId| Xaction Id| string|

    | isSmsOtp| Flag that indicates if is SmsOtp| boolean|

    | convId| Ethnofiles id for file formatting (it is filled automatically from
    ethnofiles api)| string|

    | xmlFileField| Flag that indicates if it is an xml file| boolean|

    | debtorName| Debtor name| string|

    | debtorIBAN| Debtor IBAN| string|

    | fileId| File id (it is filled automatically from ethnofiles api)| string|

    | acceptTerms| Accept terms flag| boolean|

    | acceptTrnTerms| Accept Ttn Terms flag| boolean|

     <a name=FolderRequest></a> 
    ## FolderRequest 

    Folder details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | folderName| Folder name| string|

    | folderDescription| Folder description| string|

    | folderIcon| Folder image| string|

    | parentFolderId| ParentFolderId can be used in order to move the specific
    folder inside the folder with id parentFolderId| string|

    | requester| Request entity details e.g. id and registry| object|

    | subject| Request entity details e.g. id and registry| object|

     <a name=ShareFolderRequest></a> 
    ## ShareFolderRequest 

    Share Folder 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | permissions| User file permission| object|

    | requester| Request entity details e.g. id and registry| object|

    | subject| Request entity details e.g. id and registry| object|

     <a name=SandboxRequest></a> 
    ## SandboxRequest 

    Sandbox Request Type 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | sandboxId| The unique name of your Sandbox| string|

    | userId| User identifier| string|

     <a name=SandboxDataModel></a> 
    ## SandboxDataModel 

    Sandbox Data Model 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | SandboxID| Sandbox unique identifier. E.g MySandbox| string|

    | Users| Sandbox users.| array|

    | Folders| Sandbox folders.| array|

    | Files| Sandbox files.| array|

     <a name=SandboxUser></a> 
    ## SandboxUser 

    Sandbox User 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Username| Sandbox username| string|

    | Folders| Gets or Sets Folders| array|

    | Files| Gets or Sets Files| array|

     <a name=SandboxFolder></a> 
    ## SandboxFolder 

    Sandbox folder 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FolderId| Folder Identifier| string|

    | FolderName| Folder name| string|

    | FolderDescription| Folder description| string|

    | FolderIcon| Folder image| string|

    | SubFolders| Gets or Sets SubFolders| undefined|

    | createdByUserId| user id of the creator| string|

    | createdByUserRegistry| user registry of the creator| string|

    | updatedByUserId| user id of the person tho made the update| string|

    | updatedByUserRegistry| user registry of the person tho made the update|
    string|

    | createdOn| Folder creation timestamp (Format yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | updatedOn| Folder updated timestamp (Format yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

     <a name=SandboxFile></a> 
    ## SandboxFile 

    Sandbox File 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FolderId| Folder Identifier| string|

    | FileId| File Identifier| string|

    | FileContent| File Content at upload| string|

    | FileName| File Name| string|

    | FileDescription| File description| string|

    | FileIcon| File image| string|

    | FileSize| File Size| integer|

    | TotalChunks| File chunks| integer|

    | FileStatus| File Status| string|

    | Metadata| File custom metadata| string|

    | UserTags| User defined custom tag| array|

    | SystemTags| System defined tag| array|

    | createdByUserId| user id of the creator| string|

    | createdByUserRegistry| user registry of the creator| string|

    | updatedByUserId| user id of the person tho made the update| string|

    | updatedByUserRegistry| user registry of the person tho made the update|
    string|

    | createdOn| Folder creation timestamp (Format yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | updatedOn| Folder updated timestamp (Format yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

     <a name=SandboxUserFolder></a> 
    ## SandboxUserFolder 

    Sandbox user folder access 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FolderId| Folder identifier| string|

    | Permissions| User file permission| object|

     <a name=SandboxUserFile></a> 
    ## SandboxUserFile 

    Sandbox user file access 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FileId| File identifier| string|

    | Permissions| User file permission| object|
  contact:
    email: developer@nbg.gr
host: apis.nbg.gr
basePath: /sandbox/file/oauth2/v2.1
schemes:
  - https
paths:
  /Files/upload-initiation:
    post:
      tags:
        - Files
      summary: Initiates upload request.
      description: >-
        Initiates upload request. The response object contains information about
        the chunks (and their size) that the initial file should be seperated.
        Moreover the file identifier is returned.
      operationId: InitiateUpload
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/UploadInitiationRequest'
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '201':
          description: Created
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/upload-initiation");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"folderId\":\"<ADD
            STRING VALUE>\",\"fileName\":\"<ADD STRING
            VALUE>\",\"fileDescription\":\"<ADD STRING
            VALUE>\",\"userTags\":[\"<ADD STRING
            VALUE>\"],\"fileSize\":0,\"metadata\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/upload-initiation");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined", "{\"folderId\":\"<ADD STRING
            VALUE>\",\"fileName\":\"<ADD STRING
            VALUE>\",\"fileDescription\":\"<ADD STRING
            VALUE>\",\"userTags\":[\"<ADD STRING
            VALUE>\"],\"fileSize\":0,\"metadata\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/upload-initiation\"\n\n\tpayload := strings.NewReader(\"{\\\"folderId\\\":\\\"<ADD STRING VALUE>\\\",\\\"fileName\\\":\\\"<ADD STRING VALUE>\\\",\\\"fileDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"userTags\\\":[\\\"<ADD STRING VALUE>\\\"],\\\"fileSize\\\":0,\\\"metadata\\\":\\\"<ADD STRING VALUE>\\\",\\\"fileIcon\\\":\\\"<ADD STRING VALUE>\\\",\\\"requester\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"},\\\"subject\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"folderId\":\"<ADD STRING VALUE>\",\"fileName\":\"<ADD STRING
            VALUE>\",\"fileDescription\":\"<ADD STRING
            VALUE>\",\"userTags\":[\"<ADD STRING
            VALUE>\"],\"fileSize\":0,\"metadata\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/upload-initiation")
              .post(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/upload-initiation',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { folderId: '<ADD STRING VALUE>',
                 fileName: '<ADD STRING VALUE>',
                 fileDescription: '<ADD STRING VALUE>',
                 userTags: [ '<ADD STRING VALUE>' ],
                 fileSize: 0,
                 metadata: '<ADD STRING VALUE>',
                 fileIcon: '<ADD STRING VALUE>',
                 requester: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' },
                 subject: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/upload-initiation",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"folderId\":\"<ADD STRING VALUE>\",\"fileName\":\"<ADD STRING VALUE>\",\"fileDescription\":\"<ADD STRING VALUE>\",\"userTags\":[\"<ADD STRING VALUE>\"],\"fileSize\":0,\"metadata\":\"<ADD STRING VALUE>\",\"fileIcon\":\"<ADD STRING VALUE>\",\"requester\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"},\"subject\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"folderId\":\"<ADD STRING VALUE>\",\"fileName\":\"<ADD
            STRING VALUE>\",\"fileDescription\":\"<ADD STRING
            VALUE>\",\"userTags\":[\"<ADD STRING
            VALUE>\"],\"fileSize\":0,\"metadata\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("POST",
            "/sandbox/file/oauth2/v2.1/Files/upload-initiation", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/upload-initiation")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body = "{\"folderId\":\"<ADD STRING
            VALUE>\",\"fileName\":\"<ADD STRING
            VALUE>\",\"fileDescription\":\"<ADD STRING
            VALUE>\",\"userTags\":[\"<ADD STRING
            VALUE>\"],\"fileSize\":0,\"metadata\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/upload-initiation \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"folderId":"<ADD STRING VALUE>","fileName":"<ADD STRING VALUE>","fileDescription":"<ADD STRING VALUE>","userTags":["<ADD STRING VALUE>"],"fileSize":0,"metadata":"<ADD STRING VALUE>","fileIcon":"<ADD STRING VALUE>","requester":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"},"subject":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"}}'
  '/Files/{fileId}/upload':
    put:
      tags:
        - Files
      summary: Upload chunk.
      description: >-
        Uploads chunk. The upload action is invoked only after the
        /files/upload-initiation endpoint. The fileId and the chunk size is
        returned in the /files/upload-initiation endpoint.
      operationId: UploadChunk
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/UploadRequest'
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: fileId
          in: path
          description: File identifier
          required: true
          type: string
          format: uuid
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
        '308':
          description: Range
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/upload");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"fileContent\":\"<ADD
            STRING VALUE>\",\"chunkPart\":0,\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/upload");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined", "{\"fileContent\":\"<ADD STRING
            VALUE>\",\"chunkPart\":0,\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/upload\"\n\n\tpayload := strings.NewReader(\"{\\\"fileContent\\\":\\\"<ADD STRING VALUE>\\\",\\\"chunkPart\\\":0,\\\"requester\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"},\\\"subject\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"fileContent\":\"<ADD STRING
            VALUE>\",\"chunkPart\":0,\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/upload")
              .put(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/upload',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { fileContent: '<ADD STRING VALUE>',
                 chunkPart: 0,
                 requester: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' },
                 subject: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/upload",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"fileContent\":\"<ADD STRING VALUE>\",\"chunkPart\":0,\"requester\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"},\"subject\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"fileContent\":\"<ADD STRING
            VALUE>\",\"chunkPart\":0,\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("PUT",
            "/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/upload", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/upload")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body = "{\"fileContent\":\"<ADD STRING
            VALUE>\",\"chunkPart\":0,\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/upload \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"fileContent":"<ADD STRING VALUE>","chunkPart":0,"requester":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"},"subject":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"}}'
  '/Files/{fileId}/{chunkPart}':
    get:
      tags:
        - Files
      summary: Downloads a file.
      description: >-
        Downloads a file by specifying chunk by chunk. If the file is seperated
        only in one chunk just specify chunkPart 1. If file is seperated in more
        that one chunk, this action should be invoked multiple times.
      operationId: DownloadFile
      consumes: []
      produces: []
      parameters:
        - name: chunkPart
          in: path
          description: Chunk part
          required: true
          type: integer
          format: int32
        - name: requester
          in: header
          description: 'Requester, with format ''registry:id'''
          required: true
          type: string
        - name: subject
          in: header
          description: 'Subject, with format ''registry:id'''
          required: true
          type: string
        - name: fileId
          in: path
          description: File identifier
          required: true
          type: string
          format: uuid
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: Success
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/%7BchunkPart%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "subject: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "requester:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/%7BchunkPart%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("subject", "SOME_STRING_VALUE");

            request.AddHeader("requester", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/%7BchunkPart%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"requester\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"subject\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/%7BchunkPart%7D")
              .get()
              .addHeader("requester", "SOME_STRING_VALUE")
              .addHeader("subject", "SOME_STRING_VALUE")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/%7BchunkPart%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 subject: 'SOME_STRING_VALUE',
                 requester: 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/%7BchunkPart%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "requester: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "subject: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'requester': "SOME_STRING_VALUE",
                'subject': "SOME_STRING_VALUE",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("GET",
            "/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/%7BchunkPart%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/%7BchunkPart%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["requester"] = 'SOME_STRING_VALUE'

            request["subject"] = 'SOME_STRING_VALUE'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/%7BchunkPart%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'requester: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'subject: SOME_STRING_VALUE'
  '/Files/{fileId}':
    get:
      tags:
        - Files
      summary: Retrieves a file.
      description: >-
        Retrieves a file metadata. This action can be used in order to be
        informed of a file number of chunks that is seperated in order to
        download them.
      operationId: GetFile
      consumes: []
      produces: []
      parameters:
        - name: requester
          in: header
          description: 'Requester, with format ''registry:id'''
          required: true
          type: string
        - name: subject
          in: header
          description: 'Subject, with format ''registry:id'''
          required: true
          type: string
        - name: fileId
          in: path
          description: File identifier
          required: true
          type: string
          format: uuid
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: Success
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "subject: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "requester:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("subject", "SOME_STRING_VALUE");

            request.AddHeader("requester", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"requester\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"subject\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D")
              .get()
              .addHeader("requester", "SOME_STRING_VALUE")
              .addHeader("subject", "SOME_STRING_VALUE")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 subject: 'SOME_STRING_VALUE',
                 requester: 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "requester: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "subject: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'requester': "SOME_STRING_VALUE",
                'subject': "SOME_STRING_VALUE",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("GET", "/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["requester"] = 'SOME_STRING_VALUE'

            request["subject"] = 'SOME_STRING_VALUE'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'requester: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'subject: SOME_STRING_VALUE'
    put:
      tags:
        - Files
      summary: Updates a file.
      description: >-
        Updates a file based on the requested data, only the filled values are
        used.
      operationId: UpdateFile
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/UpdateFileRequest'
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: fileId
          in: path
          description: File identifier
          required: true
          type: string
          format: uuid
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"fileName\":\"<ADD
            STRING VALUE>\",\"userTags\":[\"<ADD STRING
            VALUE>\"],\"fileDescription\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING VALUE>\",\"folderId\":\"<ADD
            STRING VALUE>\",\"useFolderId\":false,\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined", "{\"fileName\":\"<ADD STRING
            VALUE>\",\"userTags\":[\"<ADD STRING
            VALUE>\"],\"fileDescription\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING VALUE>\",\"folderId\":\"<ADD
            STRING VALUE>\",\"useFolderId\":false,\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"fileName\\\":\\\"<ADD STRING VALUE>\\\",\\\"userTags\\\":[\\\"<ADD STRING VALUE>\\\"],\\\"fileDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"fileIcon\\\":\\\"<ADD STRING VALUE>\\\",\\\"folderId\\\":\\\"<ADD STRING VALUE>\\\",\\\"useFolderId\\\":false,\\\"requester\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"},\\\"subject\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"fileName\":\"<ADD STRING VALUE>\",\"userTags\":[\"<ADD STRING
            VALUE>\"],\"fileDescription\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING VALUE>\",\"folderId\":\"<ADD
            STRING VALUE>\",\"useFolderId\":false,\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D")
              .put(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { fileName: '<ADD STRING VALUE>',
                 userTags: [ '<ADD STRING VALUE>' ],
                 fileDescription: '<ADD STRING VALUE>',
                 fileIcon: '<ADD STRING VALUE>',
                 folderId: '<ADD STRING VALUE>',
                 useFolderId: false,
                 requester: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' },
                 subject: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"fileName\":\"<ADD STRING VALUE>\",\"userTags\":[\"<ADD STRING VALUE>\"],\"fileDescription\":\"<ADD STRING VALUE>\",\"fileIcon\":\"<ADD STRING VALUE>\",\"folderId\":\"<ADD STRING VALUE>\",\"useFolderId\":false,\"requester\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"},\"subject\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"fileName\":\"<ADD STRING VALUE>\",\"userTags\":[\"<ADD
            STRING VALUE>\"],\"fileDescription\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING VALUE>\",\"folderId\":\"<ADD
            STRING VALUE>\",\"useFolderId\":false,\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("PUT", "/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body = "{\"fileName\":\"<ADD STRING
            VALUE>\",\"userTags\":[\"<ADD STRING
            VALUE>\"],\"fileDescription\":\"<ADD STRING
            VALUE>\",\"fileIcon\":\"<ADD STRING VALUE>\",\"folderId\":\"<ADD
            STRING VALUE>\",\"useFolderId\":false,\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"fileName":"<ADD STRING VALUE>","userTags":["<ADD STRING VALUE>"],"fileDescription":"<ADD STRING VALUE>","fileIcon":"<ADD STRING VALUE>","folderId":"<ADD STRING VALUE>","useFolderId":false,"requester":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"},"subject":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"}}'
    delete:
      tags:
        - Files
      summary: Deletes a file.
      description: >-
        A file is deleted, be careful! Only user with 'canDelete' permission can
        complete this operation.
      operationId: DeleteFile
      consumes: []
      produces: []
      parameters:
        - name: requester
          in: header
          description: 'Requester, with format ''registry:id'''
          required: true
          type: string
        - name: subject
          in: header
          description: 'Subject, with format ''registry:id'''
          required: true
          type: string
        - name: fileId
          in: path
          description: The file identifier
          required: true
          type: string
          format: uuid
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '204':
          description: No Content
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "subject: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "requester:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("subject", "SOME_STRING_VALUE");

            request.AddHeader("requester", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"requester\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"subject\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D")
              .delete(null)
              .addHeader("requester", "SOME_STRING_VALUE")
              .addHeader("subject", "SOME_STRING_VALUE")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 subject: 'SOME_STRING_VALUE',
                 requester: 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "requester: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "subject: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'requester': "SOME_STRING_VALUE",
                'subject': "SOME_STRING_VALUE",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("DELETE",
            "/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["requester"] = 'SOME_STRING_VALUE'

            request["subject"] = 'SOME_STRING_VALUE'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'requester: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'subject: SOME_STRING_VALUE'
  '/Files/status/{fileId}':
    put:
      tags:
        - Files
      summary: Update file status
      operationId: UpdateStatus
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/UpdateStatusRequest'
        - name: sandbox_id
          in: header
          description: ''
          required: true
          type: string
        - name: fileId
          in: path
          description: ''
          required: true
          type: string
          format: uuid
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: Success
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/status/%7BfileId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"fileStatus\":\"WaitingForUpload\",\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/status/%7BfileId%7D");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined",
            "{\"fileStatus\":\"WaitingForUpload\",\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/status/%7BfileId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"fileStatus\\\":\\\"WaitingForUpload\\\",\\\"requester\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"},\\\"subject\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"fileStatus\":\"WaitingForUpload\",\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/status/%7BfileId%7D")
              .put(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/status/%7BfileId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { fileStatus: 'WaitingForUpload',
                 requester: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' },
                 subject: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/status/%7BfileId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"fileStatus\":\"WaitingForUpload\",\"requester\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"},\"subject\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload =
            "{\"fileStatus\":\"WaitingForUpload\",\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("PUT",
            "/sandbox/file/oauth2/v2.1/Files/status/%7BfileId%7D", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/status/%7BfileId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body =
            "{\"fileStatus\":\"WaitingForUpload\",\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/status/%7BfileId%7D \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"fileStatus":"WaitingForUpload","requester":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"},"subject":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"}}'
  /Files:
    get:
      tags:
        - Files
      summary: Gets file list.
      description: The user file list is returned alongside the files that are shared.
      operationId: GetFileList
      consumes: []
      produces: []
      parameters:
        - name: requester
          in: header
          description: 'Requester, with format ''registry:id'''
          required: true
          type: string
        - name: subject
          in: header
          description: 'Subject, with format ''registry:id'''
          required: true
          type: string
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: offset
          in: header
          description: >-
            Offset, used for pagination, indicates response items start from
            position x, default 0
          required: false
          type: integer
          format: int32
        - name: limit
          in: header
          description: 'Limit the number of response items, default 20'
          required: false
          type: integer
          format: int32
        - name: folderId
          in: header
          description: Folder identifier
          required: false
          type: string
          format: uuid
        - name: dateFrom
          in: header
          description: 'File Date criteria (Format yyyy-MM-ddTHH:mm:ss.fffZ)'
          required: false
          type: string
          format: date-time
        - name: dateTo
          in: header
          description: 'File Date criteria (Format yyyy-MM-ddTHH:mm:ss.fffZ)'
          required: false
          type: string
          format: date-time
        - name: userTags
          in: header
          description: 'User custom tag, used like a hashtag'
          required: false
          type: array
          items:
            type: string
          collectionFormat: pipes
          uniqueItems: false
        - name: systemTags
          in: header
          description: System tag e.g. EthnofileSystemResponse
          required: false
          type: array
          items:
            type: string
          collectionFormat: pipes
          uniqueItems: false
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: Success
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "systemtags:
            SOME_ARRAY_VALUE");

            headers = curl_slist_append(headers, "usertags: SOME_ARRAY_VALUE");

            headers = curl_slist_append(headers, "dateto: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "datefrom: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "folderid: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "limit: SOME_INTEGER_VALUE");

            headers = curl_slist_append(headers, "offset: SOME_INTEGER_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "subject: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "requester:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("systemtags", "SOME_ARRAY_VALUE");

            request.AddHeader("usertags", "SOME_ARRAY_VALUE");

            request.AddHeader("dateto", "SOME_STRING_VALUE");

            request.AddHeader("datefrom", "SOME_STRING_VALUE");

            request.AddHeader("folderid", "SOME_STRING_VALUE");

            request.AddHeader("limit", "SOME_INTEGER_VALUE");

            request.AddHeader("offset", "SOME_INTEGER_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("subject", "SOME_STRING_VALUE");

            request.AddHeader("requester", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"requester\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"subject\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"offset\", \"SOME_INTEGER_VALUE\")\n\treq.Header.Add(\"limit\", \"SOME_INTEGER_VALUE\")\n\treq.Header.Add(\"folderid\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"datefrom\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"dateto\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"usertags\", \"SOME_ARRAY_VALUE\")\n\treq.Header.Add(\"systemtags\", \"SOME_ARRAY_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files")
              .get()
              .addHeader("requester", "SOME_STRING_VALUE")
              .addHeader("subject", "SOME_STRING_VALUE")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("offset", "SOME_INTEGER_VALUE")
              .addHeader("limit", "SOME_INTEGER_VALUE")
              .addHeader("folderid", "SOME_STRING_VALUE")
              .addHeader("datefrom", "SOME_STRING_VALUE")
              .addHeader("dateto", "SOME_STRING_VALUE")
              .addHeader("usertags", "SOME_ARRAY_VALUE")
              .addHeader("systemtags", "SOME_ARRAY_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 systemtags: 'SOME_ARRAY_VALUE',
                 usertags: 'SOME_ARRAY_VALUE',
                 dateto: 'SOME_STRING_VALUE',
                 datefrom: 'SOME_STRING_VALUE',
                 folderid: 'SOME_STRING_VALUE',
                 limit: 'SOME_INTEGER_VALUE',
                 offset: 'SOME_INTEGER_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 subject: 'SOME_STRING_VALUE',
                 requester: 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "datefrom: SOME_STRING_VALUE",
                "dateto: SOME_STRING_VALUE",
                "folderid: SOME_STRING_VALUE",
                "limit: SOME_INTEGER_VALUE",
                "offset: SOME_INTEGER_VALUE",
                "request-id: SOME_STRING_VALUE",
                "requester: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "subject: SOME_STRING_VALUE",
                "systemtags: SOME_ARRAY_VALUE",
                "usertags: SOME_ARRAY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'requester': "SOME_STRING_VALUE",
                'subject': "SOME_STRING_VALUE",
                'sandbox_id': "SOME_STRING_VALUE",
                'offset': "SOME_INTEGER_VALUE",
                'limit': "SOME_INTEGER_VALUE",
                'folderid': "SOME_STRING_VALUE",
                'datefrom': "SOME_STRING_VALUE",
                'dateto': "SOME_STRING_VALUE",
                'usertags': "SOME_ARRAY_VALUE",
                'systemtags': "SOME_ARRAY_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("GET", "/sandbox/file/oauth2/v2.1/Files",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["requester"] = 'SOME_STRING_VALUE'
            request["subject"] = 'SOME_STRING_VALUE'
            request["sandbox_id"] = 'SOME_STRING_VALUE'
            request["offset"] = 'SOME_INTEGER_VALUE'
            request["limit"] = 'SOME_INTEGER_VALUE'
            request["folderid"] = 'SOME_STRING_VALUE'
            request["datefrom"] = 'SOME_STRING_VALUE'
            request["dateto"] = 'SOME_STRING_VALUE'
            request["usertags"] = 'SOME_ARRAY_VALUE'
            request["systemtags"] = 'SOME_ARRAY_VALUE'
            request["request-id"] = 'SOME_STRING_VALUE'
            request["authorization"] = 'SOME_STRING_VALUE'
            request["client-id"] = 'SOME_STRING_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'datefrom: SOME_STRING_VALUE' \
              --header 'dateto: SOME_STRING_VALUE' \
              --header 'folderid: SOME_STRING_VALUE' \
              --header 'limit: SOME_INTEGER_VALUE' \
              --header 'offset: SOME_INTEGER_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'requester: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'subject: SOME_STRING_VALUE' \
              --header 'systemtags: SOME_ARRAY_VALUE' \
              --header 'usertags: SOME_ARRAY_VALUE'
  '/Files/{fileId}/share/{sharedUserRegistry}/{sharedUserId}':
    put:
      tags:
        - Files
      summary: Shares a file.
      description: A file is shared to an external user.
      operationId: ShareFile
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/ShareFileRequest'
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: sharedUserRegistry
          in: path
          description: Shared user registry e.g. IBank
          required: true
          type: string
        - name: sharedUserId
          in: path
          description: Shared user id e.g. 123456
          required: true
          type: string
        - name: fileId
          in: path
          description: The file identifier
          required: true
          type: string
          format: uuid
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined",
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"permissions\\\":{\\\"canAdd\\\":false,\\\"canView\\\":false,\\\"canEditMetadata\\\":false,\\\"canMove\\\":false,\\\"canDelete\\\":false,\\\"canShare\\\":false},\\\"requester\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"},\\\"subject\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D")
              .put(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { permissions:
                  { canAdd: false,
                    canView: false,
                    canEditMetadata: false,
                    canMove: false,
                    canDelete: false,
                    canShare: false },
                 requester: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' },
                 subject: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"},\"subject\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload =
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("PUT",
            "/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body =
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"permissions":{"canAdd":false,"canView":false,"canEditMetadata":false,"canMove":false,"canDelete":false,"canShare":false},"requester":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"},"subject":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"}}'
    delete:
      tags:
        - Files
      summary: Revokes share to a file.
      description: >-
        A file share is revoked from an external user. The access cannot be
        revoked to the user that created it.
      operationId: RevokeShareFile
      consumes: []
      produces: []
      parameters:
        - name: requester
          in: header
          description: 'Requester, with format ''registry:id'''
          required: true
          type: string
        - name: subject
          in: header
          description: 'Subject, with format ''registry:id'''
          required: true
          type: string
        - name: sharedUserRegistry
          in: path
          description: Shared user registry e.g. IBank
          required: true
          type: string
        - name: sharedUserId
          in: path
          description: Shared user id e.g. 123456
          required: true
          type: string
        - name: fileId
          in: path
          description: The file identifier
          required: true
          type: string
          format: uuid
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '204':
          description: No Content
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "subject: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "requester:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("subject", "SOME_STRING_VALUE");

            request.AddHeader("requester", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"requester\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"subject\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D")
              .delete(null)
              .addHeader("requester", "SOME_STRING_VALUE")
              .addHeader("subject", "SOME_STRING_VALUE")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 subject: 'SOME_STRING_VALUE',
                 requester: 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "requester: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "subject: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'requester': "SOME_STRING_VALUE",
                'subject': "SOME_STRING_VALUE",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("DELETE",
            "/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["requester"] = 'SOME_STRING_VALUE'

            request["subject"] = 'SOME_STRING_VALUE'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/%7BfileId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'requester: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'subject: SOME_STRING_VALUE'
  /Files/populatefileTypes:
    post:
      tags:
        - Files
      summary: Returns available ethnofile types for the specified user
      operationId: PopulateFileTypes
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/PopulateFileTypesRequest'
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: Success
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/populatefileTypes");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\"},\"payload\":{\"userId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/populatefileTypes");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined", "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"userId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/populatefileTypes\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"userId\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\"},\"payload\":{\"userId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/populatefileTypes")
              .post(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/populatefileTypes',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>' },
                 payload: { userId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/populatefileTypes",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\"},\"payload\":{\"userId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"userId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("POST",
            "/sandbox/file/oauth2/v2.1/Files/populatefileTypes", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/populatefileTypes")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"userId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/populatefileTypes \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>"},"payload":{"userId":"<ADD STRING VALUE>"}}'
  /Files/sendfiletoethnofiles:
    post:
      tags:
        - Files
      summary: Sends a file to ethnofiles
      operationId: SendFileToEthnofiles
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/SendFileToEthnofilesRequest'
        - name: sandbox_id
          in: header
          description: ''
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: Success
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/sendfiletoethnofiles");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\"},\"payload\":{\"fileApiFileId\":\"<ADD STRING
            VALUE>\",\"userId\":\"<ADD STRING VALUE>\",\"fileTypeId\":\"<ADD
            STRING VALUE>\",\"rowCount\":0,\"totalSum\":0,\"tanNumber\":\"<ADD
            STRING VALUE>\",\"locale\":\"<ADD STRING VALUE>\",\"inboxId\":\"<ADD
            STRING VALUE>\",\"xactionId\":\"<ADD STRING
            VALUE>\",\"isSmsOtp\":false,\"convId\":\"<ADD STRING
            VALUE>\",\"xmlFileField\":false,\"debtorName\":\"<ADD STRING
            VALUE>\",\"debtorIBAN\":\"<ADD STRING VALUE>\",\"fileId\":\"<ADD
            STRING VALUE>\",\"acceptTerms\":false,\"acceptTrnTerms\":false}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/sendfiletoethnofiles");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined", "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"fileApiFileId\":\"<ADD STRING
            VALUE>\",\"userId\":\"<ADD STRING VALUE>\",\"fileTypeId\":\"<ADD
            STRING VALUE>\",\"rowCount\":0,\"totalSum\":0,\"tanNumber\":\"<ADD
            STRING VALUE>\",\"locale\":\"<ADD STRING VALUE>\",\"inboxId\":\"<ADD
            STRING VALUE>\",\"xactionId\":\"<ADD STRING
            VALUE>\",\"isSmsOtp\":false,\"convId\":\"<ADD STRING
            VALUE>\",\"xmlFileField\":false,\"debtorName\":\"<ADD STRING
            VALUE>\",\"debtorIBAN\":\"<ADD STRING VALUE>\",\"fileId\":\"<ADD
            STRING VALUE>\",\"acceptTerms\":false,\"acceptTrnTerms\":false}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/sendfiletoethnofiles\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"fileApiFileId\\\":\\\"<ADD STRING VALUE>\\\",\\\"userId\\\":\\\"<ADD STRING VALUE>\\\",\\\"fileTypeId\\\":\\\"<ADD STRING VALUE>\\\",\\\"rowCount\\\":0,\\\"totalSum\\\":0,\\\"tanNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"locale\\\":\\\"<ADD STRING VALUE>\\\",\\\"inboxId\\\":\\\"<ADD STRING VALUE>\\\",\\\"xactionId\\\":\\\"<ADD STRING VALUE>\\\",\\\"isSmsOtp\\\":false,\\\"convId\\\":\\\"<ADD STRING VALUE>\\\",\\\"xmlFileField\\\":false,\\\"debtorName\\\":\\\"<ADD STRING VALUE>\\\",\\\"debtorIBAN\\\":\\\"<ADD STRING VALUE>\\\",\\\"fileId\\\":\\\"<ADD STRING VALUE>\\\",\\\"acceptTerms\\\":false,\\\"acceptTrnTerms\\\":false}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\"},\"payload\":{\"fileApiFileId\":\"<ADD STRING
            VALUE>\",\"userId\":\"<ADD STRING VALUE>\",\"fileTypeId\":\"<ADD
            STRING VALUE>\",\"rowCount\":0,\"totalSum\":0,\"tanNumber\":\"<ADD
            STRING VALUE>\",\"locale\":\"<ADD STRING VALUE>\",\"inboxId\":\"<ADD
            STRING VALUE>\",\"xactionId\":\"<ADD STRING
            VALUE>\",\"isSmsOtp\":false,\"convId\":\"<ADD STRING
            VALUE>\",\"xmlFileField\":false,\"debtorName\":\"<ADD STRING
            VALUE>\",\"debtorIBAN\":\"<ADD STRING VALUE>\",\"fileId\":\"<ADD
            STRING VALUE>\",\"acceptTerms\":false,\"acceptTrnTerms\":false}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/sendfiletoethnofiles")
              .post(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/sendfiletoethnofiles',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>' },
                 payload:
                  { fileApiFileId: '<ADD STRING VALUE>',
                    userId: '<ADD STRING VALUE>',
                    fileTypeId: '<ADD STRING VALUE>',
                    rowCount: 0,
                    totalSum: 0,
                    tanNumber: '<ADD STRING VALUE>',
                    locale: '<ADD STRING VALUE>',
                    inboxId: '<ADD STRING VALUE>',
                    xactionId: '<ADD STRING VALUE>',
                    isSmsOtp: false,
                    convId: '<ADD STRING VALUE>',
                    xmlFileField: false,
                    debtorName: '<ADD STRING VALUE>',
                    debtorIBAN: '<ADD STRING VALUE>',
                    fileId: '<ADD STRING VALUE>',
                    acceptTerms: false,
                    acceptTrnTerms: false } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/sendfiletoethnofiles",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\"},\"payload\":{\"fileApiFileId\":\"<ADD STRING VALUE>\",\"userId\":\"<ADD STRING VALUE>\",\"fileTypeId\":\"<ADD STRING VALUE>\",\"rowCount\":0,\"totalSum\":0,\"tanNumber\":\"<ADD STRING VALUE>\",\"locale\":\"<ADD STRING VALUE>\",\"inboxId\":\"<ADD STRING VALUE>\",\"xactionId\":\"<ADD STRING VALUE>\",\"isSmsOtp\":false,\"convId\":\"<ADD STRING VALUE>\",\"xmlFileField\":false,\"debtorName\":\"<ADD STRING VALUE>\",\"debtorIBAN\":\"<ADD STRING VALUE>\",\"fileId\":\"<ADD STRING VALUE>\",\"acceptTerms\":false,\"acceptTrnTerms\":false}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"fileApiFileId\":\"<ADD STRING
            VALUE>\",\"userId\":\"<ADD STRING VALUE>\",\"fileTypeId\":\"<ADD
            STRING VALUE>\",\"rowCount\":0,\"totalSum\":0,\"tanNumber\":\"<ADD
            STRING VALUE>\",\"locale\":\"<ADD STRING VALUE>\",\"inboxId\":\"<ADD
            STRING VALUE>\",\"xactionId\":\"<ADD STRING
            VALUE>\",\"isSmsOtp\":false,\"convId\":\"<ADD STRING
            VALUE>\",\"xmlFileField\":false,\"debtorName\":\"<ADD STRING
            VALUE>\",\"debtorIBAN\":\"<ADD STRING VALUE>\",\"fileId\":\"<ADD
            STRING VALUE>\",\"acceptTerms\":false,\"acceptTrnTerms\":false}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("POST",
            "/sandbox/file/oauth2/v2.1/Files/sendfiletoethnofiles", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/sendfiletoethnofiles")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"fileApiFileId\":\"<ADD STRING
            VALUE>\",\"userId\":\"<ADD STRING VALUE>\",\"fileTypeId\":\"<ADD
            STRING VALUE>\",\"rowCount\":0,\"totalSum\":0,\"tanNumber\":\"<ADD
            STRING VALUE>\",\"locale\":\"<ADD STRING VALUE>\",\"inboxId\":\"<ADD
            STRING VALUE>\",\"xactionId\":\"<ADD STRING
            VALUE>\",\"isSmsOtp\":false,\"convId\":\"<ADD STRING
            VALUE>\",\"xmlFileField\":false,\"debtorName\":\"<ADD STRING
            VALUE>\",\"debtorIBAN\":\"<ADD STRING VALUE>\",\"fileId\":\"<ADD
            STRING VALUE>\",\"acceptTerms\":false,\"acceptTrnTerms\":false}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Files/sendfiletoethnofiles \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>"},"payload":{"fileApiFileId":"<ADD STRING VALUE>","userId":"<ADD STRING VALUE>","fileTypeId":"<ADD STRING VALUE>","rowCount":0,"totalSum":0,"tanNumber":"<ADD STRING VALUE>","locale":"<ADD STRING VALUE>","inboxId":"<ADD STRING VALUE>","xactionId":"<ADD STRING VALUE>","isSmsOtp":false,"convId":"<ADD STRING VALUE>","xmlFileField":false,"debtorName":"<ADD STRING VALUE>","debtorIBAN":"<ADD STRING VALUE>","fileId":"<ADD STRING VALUE>","acceptTerms":false,"acceptTrnTerms":false}}'
  /Folders:
    get:
      tags:
        - Folders
      summary: Get the folder list.
      description: The created/shared folders are returned.
      operationId: GetFolders
      consumes: []
      produces: []
      parameters:
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: requester
          in: header
          description: 'Requester, with format ''registry:id'''
          required: true
          type: string
        - name: subject
          in: header
          description: 'Subject, with format ''registry:id'''
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "subject: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "requester:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("subject", "SOME_STRING_VALUE");

            request.AddHeader("requester", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"requester\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"subject\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders")
              .get()
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("requester", "SOME_STRING_VALUE")
              .addHeader("subject", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url: 'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 subject: 'SOME_STRING_VALUE',
                 requester: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "requester: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "subject: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'sandbox_id': "SOME_STRING_VALUE",
                'requester': "SOME_STRING_VALUE",
                'subject': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("GET", "/sandbox/file/oauth2/v2.1/Folders",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: |-
            require 'uri'
            require 'net/http'

            url = URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["sandbox_id"] = 'SOME_STRING_VALUE'
            request["requester"] = 'SOME_STRING_VALUE'
            request["subject"] = 'SOME_STRING_VALUE'
            request["request-id"] = 'SOME_STRING_VALUE'
            request["authorization"] = 'SOME_STRING_VALUE'
            request["client-id"] = 'SOME_STRING_VALUE'

            response = http.request(request)
            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'requester: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'subject: SOME_STRING_VALUE'
    post:
      tags:
        - Folders
      summary: Creates a folder.
      description: >-
        A folder is created based on the requested data e.g. name, description
        e.t.c.
      operationId: CreateFolder
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/FolderRequest'
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '201':
          description: Created
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"folderName\":\"<ADD
            STRING VALUE>\",\"folderDescription\":\"<ADD STRING
            VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined", "{\"folderName\":\"<ADD STRING
            VALUE>\",\"folderDescription\":\"<ADD STRING
            VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders\"\n\n\tpayload := strings.NewReader(\"{\\\"folderName\\\":\\\"<ADD STRING VALUE>\\\",\\\"folderDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"folderIcon\\\":\\\"<ADD STRING VALUE>\\\",\\\"parentFolderId\\\":\\\"<ADD STRING VALUE>\\\",\\\"requester\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"},\\\"subject\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"folderName\":\"<ADD STRING VALUE>\",\"folderDescription\":\"<ADD
            STRING VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders")
              .post(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { folderName: '<ADD STRING VALUE>',
                 folderDescription: '<ADD STRING VALUE>',
                 folderIcon: '<ADD STRING VALUE>',
                 parentFolderId: '<ADD STRING VALUE>',
                 requester: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' },
                 subject: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"folderName\":\"<ADD STRING VALUE>\",\"folderDescription\":\"<ADD STRING VALUE>\",\"folderIcon\":\"<ADD STRING VALUE>\",\"parentFolderId\":\"<ADD STRING VALUE>\",\"requester\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"},\"subject\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"folderName\":\"<ADD STRING
            VALUE>\",\"folderDescription\":\"<ADD STRING
            VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("POST", "/sandbox/file/oauth2/v2.1/Folders", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body = "{\"folderName\":\"<ADD STRING
            VALUE>\",\"folderDescription\":\"<ADD STRING
            VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"folderName":"<ADD STRING VALUE>","folderDescription":"<ADD STRING VALUE>","folderIcon":"<ADD STRING VALUE>","parentFolderId":"<ADD STRING VALUE>","requester":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"},"subject":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"}}'
  '/Folders/{folderId}':
    put:
      tags:
        - Folders
      summary: Updates a folder.
      description: >-
        A folder is updated based on the requested data e.g. name, description
        e.t.c. Only the filled values are used.
      operationId: UpdateFolder
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/FolderRequest'
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: folderId
          in: path
          description: The folder identifier
          required: true
          type: string
          format: uuid
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"folderName\":\"<ADD
            STRING VALUE>\",\"folderDescription\":\"<ADD STRING
            VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined", "{\"folderName\":\"<ADD STRING
            VALUE>\",\"folderDescription\":\"<ADD STRING
            VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"folderName\\\":\\\"<ADD STRING VALUE>\\\",\\\"folderDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"folderIcon\\\":\\\"<ADD STRING VALUE>\\\",\\\"parentFolderId\\\":\\\"<ADD STRING VALUE>\\\",\\\"requester\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"},\\\"subject\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"folderName\":\"<ADD STRING VALUE>\",\"folderDescription\":\"<ADD
            STRING VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D")
              .put(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { folderName: '<ADD STRING VALUE>',
                 folderDescription: '<ADD STRING VALUE>',
                 folderIcon: '<ADD STRING VALUE>',
                 parentFolderId: '<ADD STRING VALUE>',
                 requester: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' },
                 subject: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"folderName\":\"<ADD STRING VALUE>\",\"folderDescription\":\"<ADD STRING VALUE>\",\"folderIcon\":\"<ADD STRING VALUE>\",\"parentFolderId\":\"<ADD STRING VALUE>\",\"requester\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"},\"subject\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"folderName\":\"<ADD STRING
            VALUE>\",\"folderDescription\":\"<ADD STRING
            VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("PUT",
            "/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body = "{\"folderName\":\"<ADD STRING
            VALUE>\",\"folderDescription\":\"<ADD STRING
            VALUE>\",\"folderIcon\":\"<ADD STRING
            VALUE>\",\"parentFolderId\":\"<ADD STRING
            VALUE>\",\"requester\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"folderName":"<ADD STRING VALUE>","folderDescription":"<ADD STRING VALUE>","folderIcon":"<ADD STRING VALUE>","parentFolderId":"<ADD STRING VALUE>","requester":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"},"subject":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"}}'
    delete:
      tags:
        - Folders
      summary: Deletes a folder.
      description: >-
        A folder is deleted. Be careful the containing files are deleted also!
        Only user with 'canDelete' permission can complete this operation.
      operationId: DeleteFolder
      consumes: []
      produces: []
      parameters:
        - name: requester
          in: header
          description: 'Requester, with format ''registry:id'''
          required: true
          type: string
        - name: subject
          in: header
          description: 'Subject, with format ''registry:id'''
          required: true
          type: string
        - name: folderId
          in: path
          description: The folder identifier
          required: true
          type: string
          format: uuid
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '204':
          description: No Content
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "subject: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "requester:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("subject", "SOME_STRING_VALUE");

            request.AddHeader("requester", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"requester\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"subject\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D")
              .delete(null)
              .addHeader("requester", "SOME_STRING_VALUE")
              .addHeader("subject", "SOME_STRING_VALUE")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 subject: 'SOME_STRING_VALUE',
                 requester: 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "requester: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "subject: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'requester': "SOME_STRING_VALUE",
                'subject': "SOME_STRING_VALUE",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("DELETE",
            "/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D", headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["requester"] = 'SOME_STRING_VALUE'

            request["subject"] = 'SOME_STRING_VALUE'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'requester: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'subject: SOME_STRING_VALUE'
  '/Folders/{folderId}/share/{sharedUserRegistry}/{sharedUserId}':
    put:
      tags:
        - Folders
      summary: Shares a folder.
      description: A folder is shared to an external user.
      operationId: ShareFolder
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/ShareFolderRequest'
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: sharedUserRegistry
          in: path
          description: Shared user registry e.g. IBank
          required: true
          type: string
        - name: sharedUserId
          in: path
          description: Shared user id e.g. 123456
          required: true
          type: string
        - name: folderId
          in: path
          description: The folder identifier
          required: true
          type: string
          format: uuid
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined",
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"permissions\\\":{\\\"canAdd\\\":false,\\\"canView\\\":false,\\\"canEditMetadata\\\":false,\\\"canMove\\\":false,\\\"canDelete\\\":false,\\\"canShare\\\":false},\\\"requester\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"},\\\"subject\\\":{\\\"id\\\":\\\"<ADD STRING VALUE>\\\",\\\"registry\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D")
              .put(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { permissions:
                  { canAdd: false,
                    canView: false,
                    canEditMetadata: false,
                    canMove: false,
                    canDelete: false,
                    canShare: false },
                 requester: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' },
                 subject: { id: '<ADD STRING VALUE>', registry: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"},\"subject\":{\"id\":\"<ADD STRING VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload =
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json-patch+json",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("PUT",
            "/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json-patch+json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body =
            "{\"permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false},\"requester\":{\"id\":\"<ADD
            STRING VALUE>\",\"registry\":\"<ADD STRING
            VALUE>\"},\"subject\":{\"id\":\"<ADD STRING
            VALUE>\",\"registry\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --data '{"permissions":{"canAdd":false,"canView":false,"canEditMetadata":false,"canMove":false,"canDelete":false,"canShare":false},"requester":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"},"subject":{"id":"<ADD STRING VALUE>","registry":"<ADD STRING VALUE>"}}'
    delete:
      tags:
        - Folders
      summary: Revoke share to a folder.
      description: >-
        A folder share is revoked from an external user. The access cannot be
        revoked to the user that created it.
      operationId: RevokeShareFolder
      consumes: []
      produces: []
      parameters:
        - name: requester
          in: header
          description: 'Requester, with format ''registry:id'''
          required: true
          type: string
        - name: subject
          in: header
          description: 'Subject, with format ''registry:id'''
          required: true
          type: string
        - name: sandbox_id
          in: header
          description: The unique name of your Sandbox
          required: true
          type: string
        - name: sharedUserRegistry
          in: path
          description: Shared user registry e.g. IBank
          required: true
          type: string
        - name: sharedUserId
          in: path
          description: Shared user id e.g. 123456
          required: true
          type: string
        - name: folderId
          in: path
          description: The folder identifier
          required: true
          type: string
          format: uuid
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '204':
          description: No Content
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "subject: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "requester:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("subject", "SOME_STRING_VALUE");

            request.AddHeader("requester", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"requester\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"subject\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D")
              .delete(null)
              .addHeader("requester", "SOME_STRING_VALUE")
              .addHeader("subject", "SOME_STRING_VALUE")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 subject: 'SOME_STRING_VALUE',
                 requester: 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE",
                "requester: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "subject: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'requester': "SOME_STRING_VALUE",
                'subject': "SOME_STRING_VALUE",
                'sandbox_id': "SOME_STRING_VALUE",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("DELETE",
            "/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["requester"] = 'SOME_STRING_VALUE'

            request["subject"] = 'SOME_STRING_VALUE'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Folders/%7BfolderId%7D/share/%7BsharedUserRegistry%7D/%7BsharedUserId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --header 'requester: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'subject: SOME_STRING_VALUE'
  /Sandbox:
    post:
      tags:
        - Sandbox
      summary: Create a sandbox.
      description: >-
        A Sandbox with default data is created. Simply call by providing an “id”
        as your sandbox id and naming it almost anything you like. Moreover you
        should provide the name (userId) of the user that is going to be created
        in the default data. The 'userId' must be the same as the username of
        the logged in user in the NBG Technology Hub.
      operationId: CreateSandbox
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/SandboxRequest'
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '201':
          description: Created
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"sandboxId\":\"<ADD
            STRING VALUE>\",\"userId\":\"<ADD STRING VALUE>\"}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined", "{\"sandboxId\":\"<ADD STRING
            VALUE>\",\"userId\":\"<ADD STRING VALUE>\"}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox\"\n\n\tpayload := strings.NewReader(\"{\\\"sandboxId\\\":\\\"<ADD STRING VALUE>\\\",\\\"userId\\\":\\\"<ADD STRING VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"sandboxId\":\"<ADD STRING VALUE>\",\"userId\":\"<ADD STRING
            VALUE>\"}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox")
              .post(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { sandboxId: '<ADD STRING VALUE>',
                 userId: '<ADD STRING VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"sandboxId\":\"<ADD STRING VALUE>\",\"userId\":\"<ADD STRING VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"sandboxId\":\"<ADD STRING VALUE>\",\"userId\":\"<ADD
            STRING VALUE>\"}"


            headers = {
                'accept': "application/json-patch+json",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("POST", "/sandbox/file/oauth2/v2.1/Sandbox", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url = URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json-patch+json'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body = "{\"sandboxId\":\"<ADD STRING
            VALUE>\",\"userId\":\"<ADD STRING VALUE>\"}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --data '{"sandboxId":"<ADD STRING VALUE>","userId":"<ADD STRING VALUE>"}'
  '/Sandbox/{sandbox_id}':
    get:
      tags:
        - Sandbox
      summary: Export Sandbox
      description: Export a sandbox
      operationId: ExportSandbox
      consumes: []
      produces: []
      parameters:
        - name: sandbox_id
          in: path
          description: ''
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: Success
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D")
              .get()
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("GET",
            "/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE'
    put:
      tags:
        - Sandbox
      summary: Import a sandbox.
      description: Import a sandbox
      operationId: ImportSandbox
      consumes:
        - application/json-patch+json
        - application/json
        - text/json
        - application/*+json
      produces: []
      parameters:
        - name: sandbox_id
          in: path
          description: ''
          required: true
          type: string
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/SandboxDataModel'
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept:
            application/json-patch+json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"SandboxID\":\"<ADD
            STRING VALUE>\",\"Users\":[{\"Username\":\"<ADD STRING
            VALUE>\",\"Folders\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}],\"Files\":[{\"FileId\":\"<ADD
            STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}]}],\"Folders\":[{\"FolderId\":\"<ADD
            STRING VALUE>\",\"FolderName\":\"<ADD STRING
            VALUE>\",\"FolderDescription\":\"<ADD STRING
            VALUE>\",\"FolderIcon\":\"<ADD STRING
            VALUE>\",\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}],\"Files\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"FileId\":\"<ADD STRING VALUE>\",\"FileContent\":\"<ADD
            STRING VALUE>\",\"FileName\":\"<ADD STRING
            VALUE>\",\"FileDescription\":\"<ADD STRING
            VALUE>\",\"FileIcon\":\"<ADD STRING
            VALUE>\",\"FileSize\":0,\"TotalChunks\":0,\"FileStatus\":\"WaitingForUpload\",\"Metadata\":\"<ADD
            STRING VALUE>\",\"UserTags\":[\"<ADD STRING
            VALUE>\"],\"SystemTags\":[\"<ADD STRING
            VALUE>\"],\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}]}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json-patch+json");

            request.AddParameter("undefined", "{\"SandboxID\":\"<ADD STRING
            VALUE>\",\"Users\":[{\"Username\":\"<ADD STRING
            VALUE>\",\"Folders\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}],\"Files\":[{\"FileId\":\"<ADD
            STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}]}],\"Folders\":[{\"FolderId\":\"<ADD
            STRING VALUE>\",\"FolderName\":\"<ADD STRING
            VALUE>\",\"FolderDescription\":\"<ADD STRING
            VALUE>\",\"FolderIcon\":\"<ADD STRING
            VALUE>\",\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}],\"Files\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"FileId\":\"<ADD STRING VALUE>\",\"FileContent\":\"<ADD
            STRING VALUE>\",\"FileName\":\"<ADD STRING
            VALUE>\",\"FileDescription\":\"<ADD STRING
            VALUE>\",\"FileIcon\":\"<ADD STRING
            VALUE>\",\"FileSize\":0,\"TotalChunks\":0,\"FileStatus\":\"WaitingForUpload\",\"Metadata\":\"<ADD
            STRING VALUE>\",\"UserTags\":[\"<ADD STRING
            VALUE>\"],\"SystemTags\":[\"<ADD STRING
            VALUE>\"],\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}]}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"SandboxID\\\":\\\"<ADD STRING VALUE>\\\",\\\"Users\\\":[{\\\"Username\\\":\\\"<ADD STRING VALUE>\\\",\\\"Folders\\\":[{\\\"FolderId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Permissions\\\":{\\\"canAdd\\\":false,\\\"canView\\\":false,\\\"canEditMetadata\\\":false,\\\"canMove\\\":false,\\\"canDelete\\\":false,\\\"canShare\\\":false}}],\\\"Files\\\":[{\\\"FileId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Permissions\\\":{\\\"canAdd\\\":false,\\\"canView\\\":false,\\\"canEditMetadata\\\":false,\\\"canMove\\\":false,\\\"canDelete\\\":false,\\\"canShare\\\":false}}]}],\\\"Folders\\\":[{\\\"FolderId\\\":\\\"<ADD STRING VALUE>\\\",\\\"FolderName\\\":\\\"<ADD STRING VALUE>\\\",\\\"FolderDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"FolderIcon\\\":\\\"<ADD STRING VALUE>\\\",\\\"createdByUserId\\\":\\\"<ADD STRING VALUE>\\\",\\\"createdByUserRegistry\\\":\\\"<ADD STRING VALUE>\\\",\\\"updatedByUserId\\\":\\\"<ADD STRING VALUE>\\\",\\\"updatedByUserRegistry\\\":\\\"<ADD STRING VALUE>\\\",\\\"createdOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"updatedOn\\\":\\\"<ADD STRING VALUE>\\\"}],\\\"Files\\\":[{\\\"FolderId\\\":\\\"<ADD STRING VALUE>\\\",\\\"FileId\\\":\\\"<ADD STRING VALUE>\\\",\\\"FileContent\\\":\\\"<ADD STRING VALUE>\\\",\\\"FileName\\\":\\\"<ADD STRING VALUE>\\\",\\\"FileDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"FileIcon\\\":\\\"<ADD STRING VALUE>\\\",\\\"FileSize\\\":0,\\\"TotalChunks\\\":0,\\\"FileStatus\\\":\\\"WaitingForUpload\\\",\\\"Metadata\\\":\\\"<ADD STRING VALUE>\\\",\\\"UserTags\\\":[\\\"<ADD STRING VALUE>\\\"],\\\"SystemTags\\\":[\\\"<ADD STRING VALUE>\\\"],\\\"createdByUserId\\\":\\\"<ADD STRING VALUE>\\\",\\\"createdByUserRegistry\\\":\\\"<ADD STRING VALUE>\\\",\\\"updatedByUserId\\\":\\\"<ADD STRING VALUE>\\\",\\\"updatedByUserRegistry\\\":\\\"<ADD STRING VALUE>\\\",\\\"createdOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"updatedOn\\\":\\\"<ADD STRING VALUE>\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json-patch+json\")\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"SandboxID\":\"<ADD STRING
            VALUE>\",\"Users\":[{\"Username\":\"<ADD STRING
            VALUE>\",\"Folders\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}],\"Files\":[{\"FileId\":\"<ADD
            STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}]}],\"Folders\":[{\"FolderId\":\"<ADD
            STRING VALUE>\",\"FolderName\":\"<ADD STRING
            VALUE>\",\"FolderDescription\":\"<ADD STRING
            VALUE>\",\"FolderIcon\":\"<ADD STRING
            VALUE>\",\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}],\"Files\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"FileId\":\"<ADD STRING VALUE>\",\"FileContent\":\"<ADD
            STRING VALUE>\",\"FileName\":\"<ADD STRING
            VALUE>\",\"FileDescription\":\"<ADD STRING
            VALUE>\",\"FileIcon\":\"<ADD STRING
            VALUE>\",\"FileSize\":0,\"TotalChunks\":0,\"FileStatus\":\"WaitingForUpload\",\"Metadata\":\"<ADD
            STRING VALUE>\",\"UserTags\":[\"<ADD STRING
            VALUE>\"],\"SystemTags\":[\"<ADD STRING
            VALUE>\"],\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}]}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D")
              .put(body)
              .addHeader("accept", "application/json-patch+json")
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE',
                 accept: 'application/json-patch+json' },
              body:
               { SandboxID: '<ADD STRING VALUE>',
                 Users:
                  [ { Username: '<ADD STRING VALUE>',
                      Folders:
                       [ { FolderId: '<ADD STRING VALUE>',
                           Permissions:
                            { canAdd: false,
                              canView: false,
                              canEditMetadata: false,
                              canMove: false,
                              canDelete: false,
                              canShare: false } } ],
                      Files:
                       [ { FileId: '<ADD STRING VALUE>',
                           Permissions:
                            { canAdd: false,
                              canView: false,
                              canEditMetadata: false,
                              canMove: false,
                              canDelete: false,
                              canShare: false } } ] } ],
                 Folders:
                  [ { FolderId: '<ADD STRING VALUE>',
                      FolderName: '<ADD STRING VALUE>',
                      FolderDescription: '<ADD STRING VALUE>',
                      FolderIcon: '<ADD STRING VALUE>',
                      createdByUserId: '<ADD STRING VALUE>',
                      createdByUserRegistry: '<ADD STRING VALUE>',
                      updatedByUserId: '<ADD STRING VALUE>',
                      updatedByUserRegistry: '<ADD STRING VALUE>',
                      createdOn: '<ADD STRING VALUE>',
                      updatedOn: '<ADD STRING VALUE>' } ],
                 Files:
                  [ { FolderId: '<ADD STRING VALUE>',
                      FileId: '<ADD STRING VALUE>',
                      FileContent: '<ADD STRING VALUE>',
                      FileName: '<ADD STRING VALUE>',
                      FileDescription: '<ADD STRING VALUE>',
                      FileIcon: '<ADD STRING VALUE>',
                      FileSize: 0,
                      TotalChunks: 0,
                      FileStatus: 'WaitingForUpload',
                      Metadata: '<ADD STRING VALUE>',
                      UserTags: [ '<ADD STRING VALUE>' ],
                      SystemTags: [ '<ADD STRING VALUE>' ],
                      createdByUserId: '<ADD STRING VALUE>',
                      createdByUserRegistry: '<ADD STRING VALUE>',
                      updatedByUserId: '<ADD STRING VALUE>',
                      updatedByUserRegistry: '<ADD STRING VALUE>',
                      createdOn: '<ADD STRING VALUE>',
                      updatedOn: '<ADD STRING VALUE>' } ] },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"SandboxID\":\"<ADD STRING VALUE>\",\"Users\":[{\"Username\":\"<ADD STRING VALUE>\",\"Folders\":[{\"FolderId\":\"<ADD STRING VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}],\"Files\":[{\"FileId\":\"<ADD STRING VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}]}],\"Folders\":[{\"FolderId\":\"<ADD STRING VALUE>\",\"FolderName\":\"<ADD STRING VALUE>\",\"FolderDescription\":\"<ADD STRING VALUE>\",\"FolderIcon\":\"<ADD STRING VALUE>\",\"createdByUserId\":\"<ADD STRING VALUE>\",\"createdByUserRegistry\":\"<ADD STRING VALUE>\",\"updatedByUserId\":\"<ADD STRING VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD STRING VALUE>\"}],\"Files\":[{\"FolderId\":\"<ADD STRING VALUE>\",\"FileId\":\"<ADD STRING VALUE>\",\"FileContent\":\"<ADD STRING VALUE>\",\"FileName\":\"<ADD STRING VALUE>\",\"FileDescription\":\"<ADD STRING VALUE>\",\"FileIcon\":\"<ADD STRING VALUE>\",\"FileSize\":0,\"TotalChunks\":0,\"FileStatus\":\"WaitingForUpload\",\"Metadata\":\"<ADD STRING VALUE>\",\"UserTags\":[\"<ADD STRING VALUE>\"],\"SystemTags\":[\"<ADD STRING VALUE>\"],\"createdByUserId\":\"<ADD STRING VALUE>\",\"createdByUserRegistry\":\"<ADD STRING VALUE>\",\"updatedByUserId\":\"<ADD STRING VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD STRING VALUE>\"}]}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json-patch+json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"SandboxID\":\"<ADD STRING
            VALUE>\",\"Users\":[{\"Username\":\"<ADD STRING
            VALUE>\",\"Folders\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}],\"Files\":[{\"FileId\":\"<ADD
            STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}]}],\"Folders\":[{\"FolderId\":\"<ADD
            STRING VALUE>\",\"FolderName\":\"<ADD STRING
            VALUE>\",\"FolderDescription\":\"<ADD STRING
            VALUE>\",\"FolderIcon\":\"<ADD STRING
            VALUE>\",\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}],\"Files\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"FileId\":\"<ADD STRING VALUE>\",\"FileContent\":\"<ADD
            STRING VALUE>\",\"FileName\":\"<ADD STRING
            VALUE>\",\"FileDescription\":\"<ADD STRING
            VALUE>\",\"FileIcon\":\"<ADD STRING
            VALUE>\",\"FileSize\":0,\"TotalChunks\":0,\"FileStatus\":\"WaitingForUpload\",\"Metadata\":\"<ADD
            STRING VALUE>\",\"UserTags\":[\"<ADD STRING
            VALUE>\"],\"SystemTags\":[\"<ADD STRING
            VALUE>\"],\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}]}"


            headers = {
                'accept': "application/json-patch+json",
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("PUT",
            "/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json-patch+json'

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'

            request.body = "{\"SandboxID\":\"<ADD STRING
            VALUE>\",\"Users\":[{\"Username\":\"<ADD STRING
            VALUE>\",\"Folders\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}],\"Files\":[{\"FileId\":\"<ADD
            STRING
            VALUE>\",\"Permissions\":{\"canAdd\":false,\"canView\":false,\"canEditMetadata\":false,\"canMove\":false,\"canDelete\":false,\"canShare\":false}}]}],\"Folders\":[{\"FolderId\":\"<ADD
            STRING VALUE>\",\"FolderName\":\"<ADD STRING
            VALUE>\",\"FolderDescription\":\"<ADD STRING
            VALUE>\",\"FolderIcon\":\"<ADD STRING
            VALUE>\",\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}],\"Files\":[{\"FolderId\":\"<ADD STRING
            VALUE>\",\"FileId\":\"<ADD STRING VALUE>\",\"FileContent\":\"<ADD
            STRING VALUE>\",\"FileName\":\"<ADD STRING
            VALUE>\",\"FileDescription\":\"<ADD STRING
            VALUE>\",\"FileIcon\":\"<ADD STRING
            VALUE>\",\"FileSize\":0,\"TotalChunks\":0,\"FileStatus\":\"WaitingForUpload\",\"Metadata\":\"<ADD
            STRING VALUE>\",\"UserTags\":[\"<ADD STRING
            VALUE>\"],\"SystemTags\":[\"<ADD STRING
            VALUE>\"],\"createdByUserId\":\"<ADD STRING
            VALUE>\",\"createdByUserRegistry\":\"<ADD STRING
            VALUE>\",\"updatedByUserId\":\"<ADD STRING
            VALUE>\",\"updatedByUserRegistry\":\"<ADD STRING
            VALUE>\",\"createdOn\":\"<ADD STRING VALUE>\",\"updatedOn\":\"<ADD
            STRING VALUE>\"}]}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D \
              --header 'accept: application/json-patch+json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE' \
              --data '{"SandboxID":"<ADD STRING VALUE>","Users":[{"Username":"<ADD STRING VALUE>","Folders":[{"FolderId":"<ADD STRING VALUE>","Permissions":{"canAdd":false,"canView":false,"canEditMetadata":false,"canMove":false,"canDelete":false,"canShare":false}}],"Files":[{"FileId":"<ADD STRING VALUE>","Permissions":{"canAdd":false,"canView":false,"canEditMetadata":false,"canMove":false,"canDelete":false,"canShare":false}}]}],"Folders":[{"FolderId":"<ADD STRING VALUE>","FolderName":"<ADD STRING VALUE>","FolderDescription":"<ADD STRING VALUE>","FolderIcon":"<ADD STRING VALUE>","createdByUserId":"<ADD STRING VALUE>","createdByUserRegistry":"<ADD STRING VALUE>","updatedByUserId":"<ADD STRING VALUE>","updatedByUserRegistry":"<ADD STRING VALUE>","createdOn":"<ADD STRING VALUE>","updatedOn":"<ADD STRING VALUE>"}],"Files":[{"FolderId":"<ADD STRING VALUE>","FileId":"<ADD STRING VALUE>","FileContent":"<ADD STRING VALUE>","FileName":"<ADD STRING VALUE>","FileDescription":"<ADD STRING VALUE>","FileIcon":"<ADD STRING VALUE>","FileSize":0,"TotalChunks":0,"FileStatus":"WaitingForUpload","Metadata":"<ADD STRING VALUE>","UserTags":["<ADD STRING VALUE>"],"SystemTags":["<ADD STRING VALUE>"],"createdByUserId":"<ADD STRING VALUE>","createdByUserRegistry":"<ADD STRING VALUE>","updatedByUserId":"<ADD STRING VALUE>","updatedByUserRegistry":"<ADD STRING VALUE>","createdOn":"<ADD STRING VALUE>","updatedOn":"<ADD STRING VALUE>"}]}'
    delete:
      tags:
        - Sandbox
      summary: Delete Sandbox
      description: Deleta a sandbox
      operationId: DeleteSandbox
      consumes: []
      produces: []
      parameters:
        - name: sandbox_id
          in: path
          description: ''
          required: true
          type: string
        - name: Request-Id
          in: header
          description: A guid that uniquely identifies your request
          required: true
          type: string
          default: 675A6656-955F-4547-AF18-F7087BA11CB7
        - name: Authorization
          in: header
          description: Authorization Bearer
          required: true
          type: string
          default: Bearer replace_this_value
        - name: client-id
          in: header
          description: Your app client-id guid
          required: true
          type: string
          default: ''
      responses:
        '204':
          description: No Content
        default:
          description: Error Response
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "request-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("request-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"request-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_STRING_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D")
              .delete(null)
              .addHeader("request-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_STRING_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'request-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_STRING_VALUE",
                "request-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'request-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_STRING_VALUE"
                }

            conn.request("DELETE",
            "/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["request-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_STRING_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/file/oauth2/v2.1/Sandbox/%7Bsandbox_id%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_STRING_VALUE' \
              --header 'request-id: SOME_STRING_VALUE'
definitions:
  UploadInitiationRequest:
    description: ''
    required:
      - fileName
      - fileSize
      - requester
      - subject
    type: object
    properties:
      folderId:
        format: uuid
        description: Folder identifier
        type: string
      fileName:
        description: File name
        type: string
      fileDescription:
        description: File description
        type: string
      userTags:
        description: User custom tag e.g. hashtag
        uniqueItems: false
        type: array
        items:
          type: string
      fileSize:
        format: int64
        description: File size in MB
        type: integer
      metadata:
        description: File custom metadata
        type: string
      fileIcon:
        format: byte
        description: File image
        type: string
      requester: &ref_0
        description: Request entity details e.g. id and registry
        required:
          - id
          - registry
        type: object
        properties:
          id:
            description: Id e.g. IBank User Identifier
            type: string
          registry:
            description: Registry e.g. IBank
            type: string
      subject: *ref_0
  RequestEntity: *ref_0
  UploadRequest:
    description: ''
    required:
      - fileContent
      - chunkPart
      - requester
      - subject
    type: object
    properties:
      fileContent:
        format: byte
        description: File content
        type: string
      chunkPart:
        format: int32
        description: File Chunk part
        type: integer
      requester: *ref_0
      subject: *ref_0
  UpdateFileRequest:
    description: Update file details
    required:
      - requester
      - subject
    type: object
    properties:
      fileName:
        description: File name
        type: string
      userTags:
        description: 'User custom tag, used like a hashtag'
        uniqueItems: false
        type: array
        items:
          type: string
      fileDescription:
        description: File description
        type: string
      fileIcon:
        format: byte
        description: File image
        type: string
      folderId:
        format: uuid
        description: >-
          folderId can be used in order to move the specific file inside the
          folder with id folderId
        type: string
      useFolderId:
        description: "True  : If folderId is null set it null\r\nFalse : If folderId is null ignore it"
        type: boolean
      requester: *ref_0
      subject: *ref_0
  UpdateStatusRequest:
    description: Update file status
    required:
      - requester
      - subject
    type: object
    properties:
      fileStatus:
        description: File Status
        enum:
          - WaitingForUpload
          - WaitingForMerge
          - MergingChunks
          - Completed
          - Deleted
          - Immutable
        type: string
      requester: *ref_0
      subject: *ref_0
  ShareFileRequest:
    description: Share File
    required:
      - permissions
      - requester
      - subject
    type: object
    properties:
      permissions: &ref_1
        description: User file permission
        type: object
        properties:
          canAdd:
            description: add capability
            type: boolean
          canView:
            description: view capability
            type: boolean
          canEditMetadata:
            description: edit capability
            type: boolean
          canMove:
            description: move capability
            type: boolean
          canDelete:
            description: delete capability
            type: boolean
          canShare:
            description: share capability
            type: boolean
      requester: *ref_0
      subject: *ref_0
  UserPermissions: *ref_1
  PopulateFileTypesRequest:
    description: Populate File Types Request
    type: object
    properties:
      header: &ref_2
        description: Request body Header
        type: object
        properties:
          ID:
            description: Request header id
            type: string
          application:
            description: Application / client id
            type: string
          channel:
            description: Channel
            type: string
      payload: &ref_3
        description: Populate File types Request Payload
        type: object
        properties:
          userId:
            description: User id
            type: string
  RequestHeader: *ref_2
  PopulateFiletypesRequestPayload: *ref_3
  SendFileToEthnofilesRequest:
    description: Send File To Ethnofiles Request
    type: object
    properties:
      header: *ref_2
      payload: &ref_4
        description: Send File To Ethnofiles Request Payload
        type: object
        properties:
          fileApiFileId:
            format: uuid
            description: The file guid from the file api
            type: string
          userId:
            description: User id
            type: string
          fileTypeId:
            description: File Type id from ethnofiles
            type: string
          rowCount:
            format: int32
            description: The count of the rows in the file
            type: integer
          totalSum:
            format: double
            description: The total sum of the file
            type: number
          tanNumber:
            description: Tan Number
            type: string
          locale:
            description: Locale
            type: string
          inboxId:
            description: Inbox id
            type: string
          xactionId:
            description: Xaction Id
            type: string
          isSmsOtp:
            description: Flag that indicates if is SmsOtp
            type: boolean
          convId:
            description: >-
              Ethnofiles id for file formatting (it is filled automatically from
              ethnofiles api)
            type: string
          xmlFileField:
            description: Flag that indicates if it is an xml file
            type: boolean
          debtorName:
            description: Debtor name
            type: string
          debtorIBAN:
            description: Debtor IBAN
            type: string
          fileId:
            description: File id (it is filled automatically from ethnofiles api)
            type: string
          acceptTerms:
            description: Accept terms flag
            type: boolean
          acceptTrnTerms:
            description: Accept Ttn Terms flag
            type: boolean
  SendFileToEthnofilesRequestPayload: *ref_4
  FolderRequest:
    description: Folder details
    required:
      - requester
      - subject
    type: object
    properties:
      folderName:
        description: Folder name
        type: string
      folderDescription:
        description: Folder description
        type: string
      folderIcon:
        format: byte
        description: Folder image
        type: string
      parentFolderId:
        format: uuid
        description: >-
          ParentFolderId can be used in order to move the specific folder inside
          the folder with id parentFolderId
        type: string
      requester: *ref_0
      subject: *ref_0
  ShareFolderRequest:
    description: Share Folder
    required:
      - permissions
      - requester
      - subject
    type: object
    properties:
      permissions: *ref_1
      requester: *ref_0
      subject: *ref_0
  SandboxRequest:
    description: Sandbox Request Type
    required:
      - sandboxId
      - userId
    type: object
    properties:
      sandboxId:
        description: The unique name of your Sandbox
        type: string
      userId:
        description: User identifier
        type: string
  SandboxDataModel:
    description: Sandbox Data Model
    type: object
    properties:
      SandboxID:
        description: Sandbox unique identifier. E.g MySandbox
        type: string
      Users:
        description: Sandbox users.
        uniqueItems: false
        type: array
        items: &ref_5
          description: Sandbox User
          type: object
          properties:
            Username:
              description: Sandbox username
              type: string
            Folders:
              description: Gets or Sets Folders
              uniqueItems: false
              type: array
              items: &ref_8
                description: Sandbox user folder access
                type: object
                properties:
                  FolderId:
                    format: uuid
                    description: Folder identifier
                    type: string
                  Permissions: *ref_1
            Files:
              description: Gets or Sets Files
              uniqueItems: false
              type: array
              items: &ref_9
                description: Sandbox user file access
                type: object
                properties:
                  FileId:
                    format: uuid
                    description: File identifier
                    type: string
                  Permissions: *ref_1
      Folders:
        description: Sandbox folders.
        uniqueItems: false
        type: array
        items: &ref_6
          description: Sandbox folder
          type: object
          properties:
            FolderId:
              format: uuid
              description: Folder Identifier
              type: string
            FolderName:
              description: Folder name
              type: string
            FolderDescription:
              description: Folder description
              type: string
            FolderIcon:
              format: byte
              description: Folder image
              type: string
            SubFolders:
              description: Gets or Sets SubFolders
              uniqueItems: false
            createdByUserId:
              description: user id of the creator
              type: string
            createdByUserRegistry:
              description: user registry of the creator
              type: string
            updatedByUserId:
              description: user id of the person tho made the update
              type: string
            updatedByUserRegistry:
              description: user registry of the person tho made the update
              type: string
            createdOn:
              format: date-time
              description: 'Folder creation timestamp (Format yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            updatedOn:
              format: date-time
              description: 'Folder updated timestamp (Format yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
      Files:
        description: Sandbox files.
        uniqueItems: false
        type: array
        items: &ref_7
          description: Sandbox File
          type: object
          properties:
            FolderId:
              format: uuid
              description: Folder Identifier
              type: string
            FileId:
              format: uuid
              description: File Identifier
              type: string
            FileContent:
              format: byte
              description: File Content at upload
              type: string
            FileName:
              description: File Name
              type: string
            FileDescription:
              description: File description
              type: string
            FileIcon:
              format: byte
              description: File image
              type: string
            FileSize:
              format: int64
              description: File Size
              type: integer
            TotalChunks:
              format: int32
              description: File chunks
              type: integer
            FileStatus:
              description: File Status
              enum:
                - WaitingForUpload
                - WaitingForMerge
                - MergingChunks
                - Completed
                - Deleted
                - Immutable
              type: string
            Metadata:
              description: File custom metadata
              type: string
            UserTags:
              description: User defined custom tag
              uniqueItems: false
              type: array
              items:
                type: string
            SystemTags:
              description: System defined tag
              uniqueItems: false
              type: array
              items:
                type: string
            createdByUserId:
              description: user id of the creator
              type: string
            createdByUserRegistry:
              description: user registry of the creator
              type: string
            updatedByUserId:
              description: user id of the person tho made the update
              type: string
            updatedByUserRegistry:
              description: user registry of the person tho made the update
              type: string
            createdOn:
              format: date-time
              description: 'Folder creation timestamp (Format yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            updatedOn:
              format: date-time
              description: 'Folder updated timestamp (Format yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
  SandboxUser: *ref_5
  SandboxFolder: *ref_6
  SandboxFile: *ref_7
  SandboxUserFolder: *ref_8
  SandboxUserFile: *ref_9