swagger: '2.0'
info:
  title: Social Network Application
  description: >
    ## Functionality at a glance


    Start integrating your application with NBG Bank and be able to:
    

    **1.** Create and administrate a social network

      1. Send announcements/promotions to all members of the network

    **2.** Give your customers the ability to:

    1. Register in the new network

    2. To upload friends/contacts or discover new ones 

    3. Check/Create/React/Reply on a post

    4. Send/React/reply on a direct message


    ## Quick Getting Started
    
    
    1. **Login/Register** to the NBG Technology HUB
    
    2. Go to **"APPS"**
    
    3. Select your Organization and go to step 4. If you want to create a new Organization click **\"CREATE AN ORGANIZATION\"** and follow the steps below:
        1. Enter the title of your Organization
        2. Enter a short description of your Organization (optional)
        3. Click **"SUBMIT"**
        
    4. Select the Organization of choice and click **"ADD AN APPLICATION"** 
          1. Fill in the forms (title and short description)
          2. Check **\"Authorization Code\" and \"Client Credentials\"** 
          3. Enter the **OAuth Redirect and Post Logout URIs** (these are the URIs that we will redirect the user upon logging in and logging out respectively)
              
              You can use the following redirect URL to easily test the API through the portal: *https://developer.nbg.gr/oauth2/redoc-callback*
          4. Click **"SUBMIT"**
          5. Store the APPs **"Client ID"** and **"Client Secret"**
    5. Go to **"API PRODUCTS"** and select the **SOCIAL NETWORK PLATFORM API**
    
    6. Click **\"START USING THIS API\"**, choose your app and click
    **"SUBSCRIBE"**
    
    7. Create a Sandbox
    
    8. Play with the API

    ## Create your Sandbox

    Sandboxes are self - contained testing environments that provide a simple
    way of testing the API without any real impact, meaning that no personal or
    financial data is used.


    You can create **your Sandbox** by invoking the **POST** /api/sandbox call.
    This call will generate a new Sandbox with a **unique sandbox_id**.


    **_Important!_** Don't lose your sandbox_id, since you will need it for all the
    API calls. Sandbox endpoints are not included in the production version API.


    When you create a sandbox, users and sandbox specific data are generated as sample data.


    The following HTTP header parameters are required for every call (except for
    sandbox operations):

    1. sandbox_id

    2. application_id

    3. user_id

    4. username

    5. provider_id

    6. provider


    Get to know the Sandbox Operations in the related section. 



    ## Start Testing

    Once you have your sandbox_id, you can start invoking the rest of the
    operations by providing all the mandatory information in the http header. 



    ## Important notes

    Request headers
    
    Each request MUST have the following info:
    

    *sandbox_id*, *application_id*, *user_id*, * username*, * provider_id*,
    *provider*



    ## Error Codes:

    * NBG-10000: Header is missing

    * NBG-10001: Invalid header parameter sandbox_id

    * NBG-10002: Invalid header parameter user_id

    * NBG-10003: Invalid header parameter provider_id

    * NBG-10004: Invalid header parameter provider

    * NBG-10005: Invalid header parameter username

    * NBG-10006: Invalid request headers

    * NBG-20001: Invalid sandboxID

    * NBG-20002: Concurrency exception. Please try again

    * NBG-20003: Incorrect Json Format

    * NBG-20004: Declaration already accepted

    * NBG-20005: Not Valid Action

    * NBG-20006: Declaration already declined

    * NBG-20007: Terms must be accepted

    * NBG-20008: Verification process did not succeed

    * NBG-20009: Registration process did not succeed

    * NBG-20010: Image dimensions must not exceed 300 * 300 pixels

    * NBG-30001: Sandbox Not Found

    * NBG-30002: Active Social Network Not Found

    * NBG-30003: Active Member Not Found

    * NBG-30004: Pending Member for Registration Not Found

    * NBG-30005: Registered Contact Not Found

    * NBG-30006: Post Not Found

    * NBG-30007: Message Not Found

    * NBG-30008: Terms Not Found

    * NBG-30009: Declaration Not Found

    * NBG-40001: Sandbox with the same sandboxID already exists!

    * NBG-40002: Member with the same identity and identityType already exists!

    * NBG-40004: User is Already Linked to a member!

    * NBG-40005: One or more Contact Already Exists

    * NBG-40006: User with the same username already exists!

    * NBG-40007: Member is banned

    * NBG-40008: Member activation is pending

    * NBG-40009: Member cannot add him/her as a contact

    * NBG-40010: Member is already Active

    * NBG-50000: User not logged in. Authentication is required

    * NBG-50001: User is not an administrator

    * NBG-50002: One or more action exist upon declaration. Please create a new one and/or deactivate the existing one.

    * NBG-60000: Cannot Create Sandbox

    * NBG-60001: Cannot Update Sandbox

    * NBG-60003: Cannot UnRegister Member

    * NBG-60004: Cannot add action

    * NBG-60005: Cannot add declaration

    * NBG-60006: Cannot add reaction

    * NBG-60007: Cannot add post

    * NBG-60008: Cannot add message

    * NBG-60009: Cannot add one or more contacts

    * NBG-60010: Cannot update declaration

    * SBX-60002: Cannot Delete Sandbox

    * NBG-60011: Cannot Register Member


    ## Feedback and Questions

    We would love to hear your feedback and answer your questions. Send us at
    [developer@nbg.gr](developer@nbg.gr)


    Check out our [Sandbox Postman
    Collection](https://github.com/NBG-Developer-Portal/Social-Network-API)!


    ------------------------------------------------------------------------------------------ 


    Created by [**NBG**](https://www.nbg.gr/).
    

    ------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------
    
  contact: {}
  version: v2.2
host: apis.nbg.gr
basePath: /sandbox/socialnetwork/headers/v2.2
schemes:
  - https
paths:
  /Administration/declarationCreation:
    post:
      tags:
        - Administration
      summary: Create Declaration
      description: "An Administrator has the ability to create a declaration.



Types of declaration are:

- Terms

- Announcement

- Promotion


Sample request:



    POST /declarationCreation

    {

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"descriptionEn\": \"Description\",

        \"descriptionEl\": \"Περιγραφή\",

        \"type\": \"Announcement\"

    }"
      operationId: Administration_declarationCreation
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BDeclarationCreationRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BGenericResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationCreation");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"descriptionEl\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationCreation");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"descriptionEl\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\"}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationCreation\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"descriptionEn\\\":\\\"<ADD STRING VALUE>\\\",\\\"descriptionEl\\\":\\\"<ADD STRING VALUE>\\\",\\\"type\\\":\\\"Terms\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"descriptionEl\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationCreation")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationCreation',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { socialNetworkId: '<ADD STRING VALUE>',
                    descriptionEn: '<ADD STRING VALUE>',
                    descriptionEl: '<ADD STRING VALUE>',
                    type: 'Terms' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationCreation",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING VALUE>\",\"descriptionEn\":\"<ADD STRING VALUE>\",\"descriptionEl\":\"<ADD STRING VALUE>\",\"type\":\"Terms\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"descriptionEl\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/Administration/declarationCreation",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationCreation")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"descriptionEl\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationCreation \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"socialNetworkId":"<ADD STRING VALUE>","descriptionEn":"<ADD STRING VALUE>","descriptionEl":"<ADD STRING VALUE>","type":"Terms"}}'
  /Administration/declarationUpdate:
    post:
      tags:
        - Administration
      summary: Update Declaration
      description: "An Administrator has the ability to update a specific declaration.



Types of declaration are:

- Terms

- Announcement

- Promotion



Possible  values for status are:

- Active

- Inactive

- Cancelled





Sample request:



    POST /declarationUpdate

    {

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"descriptionEn\": \"Description Update\",

        \"descriptionEl\": \"Ενημέρωση περιγραφής\",

        \"declarationId\": \"2405F2E6-5E98-4663-B067-87A9B9A67C3B\",

        \"status\": \"Active\"

    }"
      operationId: Administration_declarationUpdate
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BDeclarationUpdateRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BGenericResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationUpdate");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"declarationId\":\"<ADD STRING
            VALUE>\",\"status\":\"Active\",\"descriptionEl\":\"<ADD STRING
            VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationUpdate");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"declarationId\":\"<ADD STRING
            VALUE>\",\"status\":\"Active\",\"descriptionEl\":\"<ADD STRING
            VALUE>\"}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationUpdate\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"descriptionEn\\\":\\\"<ADD STRING VALUE>\\\",\\\"declarationId\\\":\\\"<ADD STRING VALUE>\\\",\\\"status\\\":\\\"Active\\\",\\\"descriptionEl\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"declarationId\":\"<ADD STRING
            VALUE>\",\"status\":\"Active\",\"descriptionEl\":\"<ADD STRING
            VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationUpdate")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationUpdate',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { socialNetworkId: '<ADD STRING VALUE>',
                    descriptionEn: '<ADD STRING VALUE>',
                    declarationId: '<ADD STRING VALUE>',
                    status: 'Active',
                    descriptionEl: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationUpdate",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING VALUE>\",\"descriptionEn\":\"<ADD STRING VALUE>\",\"declarationId\":\"<ADD STRING VALUE>\",\"status\":\"Active\",\"descriptionEl\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"declarationId\":\"<ADD STRING
            VALUE>\",\"status\":\"Active\",\"descriptionEl\":\"<ADD STRING
            VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/Administration/declarationUpdate",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationUpdate")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"descriptionEn\":\"<ADD STRING
            VALUE>\",\"declarationId\":\"<ADD STRING
            VALUE>\",\"status\":\"Active\",\"descriptionEl\":\"<ADD STRING
            VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/Administration/declarationUpdate \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"socialNetworkId":"<ADD STRING VALUE>","descriptionEn":"<ADD STRING VALUE>","declarationId":"<ADD STRING VALUE>","status":"Active","descriptionEl":"<ADD STRING VALUE>"}}'
  /sandbox:
    post:
      tags:
        - Sandbox
      summary: Create Sandbox
      description: >-
        Creates a sandbox with unique sandbox id. This call can also be used to
        create users, members, contacts, posts, messages etc.
      operationId: Sandbox_CreateSandbox
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/SandboxRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Response%5BSandboxDataModelV2%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"sandboxId\":\"<ADD
            STRING VALUE>\"}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"sandboxId\":\"<ADD
            STRING VALUE>\"}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox\"



  payload := strings.NewReader(\"{\\\"sandboxId\\\":\\\"<ADD STRING VALUE>\\\"}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"sandboxId\":\"<ADD STRING VALUE>\"}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body: { sandboxId: '<ADD STRING VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"sandboxId\":\"<ADD STRING VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"sandboxId\":\"<ADD STRING VALUE>\"}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST", "/sandbox/socialnetwork/headers/v2.2/sandbox",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"sandboxId\":\"<ADD STRING VALUE>\"}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox \
              --header 'accept: application/json' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --data '{"sandboxId":"<ADD STRING VALUE>"}'
  '/sandbox/{sandbox_id}':
    get:
      tags:
        - Sandbox
      summary: Export Sandbox
      description: Export Sandbox data specified by sandbox id.
      operationId: Sandbox_ExportSandbox
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sandbox_id
          in: path
          description: Sandbox ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BSandboxDataModelV2%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D\"



  req, _ := http.NewRequest(\"GET\", url, nil)



  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json'
    put:
      tags:
        - Sandbox
      operationId: Sandbox_ImportSandbox
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sandbox_id
          in: path
          required: true
          type: string
        - name: request
          in: body
          required: true
          schema:
            $ref: '#/definitions/SandboxDataModelV2'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BSandboxDataModelV2%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"SandboxID\":\"<ADD
            STRING VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING
            VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD
            STRING VALUE>\",\"Provider\":\"<ADD STRING
            VALUE>\",\"SocialNetworkId\":\"<ADD STRING
            VALUE>\",\"MemberId\":\"<ADD STRING
            VALUE>\",\"IsAdmin\":false}],\"SocialNetworks\":[{\"SocialNetworkId\":\"<ADD
            STRING VALUE>\",\"SocialNetworkName\":\"<ADD STRING
            VALUE>\",\"SocialNetworkDescription\":\"<ADD STRING
            VALUE>\",\"SocialNetworkOwner\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"SocialNetworkMembers\":[{\"MemberId\":\"<ADD
            STRING VALUE>\",\"ContactId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"FirstName\":\"<ADD STRING
            VALUE>\",\"LastName\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Avatar\":\"<ADD STRING
            VALUE>\",\"Gender\":\"Male\",\"BirthDate\":\"<ADD STRING
            VALUE>\",\"IsVerified\":false,\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"SocialNetworkPosts\":[{\"PostId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkMessages\":[{\"MessageId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Source\":\"<ADD STRING VALUE>\",\"Destination\":\"<ADD
            STRING VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkContacts\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"ContactStatus\":\"Uploaded\",\"ContactType\":\"Contact\",\"IsVerified\":false}],\"SocialNetworkDeclarations\":[{\"DeclarationId\":\"<ADD
            STRING VALUE>\",\"DeclarationEl\":\"<ADD STRING
            VALUE>\",\"DeclarationEn\":\"<ADD STRING
            VALUE>\",\"DeclarationType\":\"Terms\",\"DeclarationStatus\":\"Active\",\"ActionStatus\":\"Pending\",\"Timestamp\":\"<ADD
            STRING VALUE>\",\"Order\":0}]}]}]}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"SandboxID\":\"<ADD
            STRING VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING
            VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD
            STRING VALUE>\",\"Provider\":\"<ADD STRING
            VALUE>\",\"SocialNetworkId\":\"<ADD STRING
            VALUE>\",\"MemberId\":\"<ADD STRING
            VALUE>\",\"IsAdmin\":false}],\"SocialNetworks\":[{\"SocialNetworkId\":\"<ADD
            STRING VALUE>\",\"SocialNetworkName\":\"<ADD STRING
            VALUE>\",\"SocialNetworkDescription\":\"<ADD STRING
            VALUE>\",\"SocialNetworkOwner\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"SocialNetworkMembers\":[{\"MemberId\":\"<ADD
            STRING VALUE>\",\"ContactId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"FirstName\":\"<ADD STRING
            VALUE>\",\"LastName\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Avatar\":\"<ADD STRING
            VALUE>\",\"Gender\":\"Male\",\"BirthDate\":\"<ADD STRING
            VALUE>\",\"IsVerified\":false,\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"SocialNetworkPosts\":[{\"PostId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkMessages\":[{\"MessageId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Source\":\"<ADD STRING VALUE>\",\"Destination\":\"<ADD
            STRING VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkContacts\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"ContactStatus\":\"Uploaded\",\"ContactType\":\"Contact\",\"IsVerified\":false}],\"SocialNetworkDeclarations\":[{\"DeclarationId\":\"<ADD
            STRING VALUE>\",\"DeclarationEl\":\"<ADD STRING
            VALUE>\",\"DeclarationEn\":\"<ADD STRING
            VALUE>\",\"DeclarationType\":\"Terms\",\"DeclarationStatus\":\"Active\",\"ActionStatus\":\"Pending\",\"Timestamp\":\"<ADD
            STRING VALUE>\",\"Order\":0}]}]}]}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D\"



  payload := strings.NewReader(\"{\\\"SandboxID\\\":\\\"<ADD STRING VALUE>\\\",\\\"Users\\\":[{\\\"UserId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Username\\\":\\\"<ADD STRING VALUE>\\\",\\\"ProviderId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Provider\\\":\\\"<ADD STRING VALUE>\\\",\\\"SocialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"MemberId\\\":\\\"<ADD STRING VALUE>\\\",\\\"IsAdmin\\\":false}],\\\"SocialNetworks\\\":[{\\\"SocialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"SocialNetworkName\\\":\\\"<ADD STRING VALUE>\\\",\\\"SocialNetworkDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"SocialNetworkOwner\\\":\\\"<ADD STRING VALUE>\\\",\\\"Status\\\":\\\"Active\\\",\\\"SocialNetworkMembers\\\":[{\\\"MemberId\\\":\\\"<ADD STRING VALUE>\\\",\\\"ContactId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Status\\\":\\\"Active\\\",\\\"FirstName\\\":\\\"<ADD STRING VALUE>\\\",\\\"LastName\\\":\\\"<ADD STRING VALUE>\\\",\\\"Alias\\\":\\\"<ADD STRING VALUE>\\\",\\\"Avatar\\\":\\\"<ADD STRING VALUE>\\\",\\\"Gender\\\":\\\"Male\\\",\\\"BirthDate\\\":\\\"<ADD STRING VALUE>\\\",\\\"IsVerified\\\":false,\\\"Identity\\\":\\\"<ADD STRING VALUE>\\\",\\\"IdentityType\\\":\\\"Mobile\\\",\\\"IdentityStatus\\\":\\\"Pending\\\",\\\"SocialNetworkPosts\\\":[{\\\"PostId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Timestamp\\\":\\\"<ADD STRING VALUE>\\\",\\\"Content\\\":\\\"<ADD STRING VALUE>\\\",\\\"Status\\\":\\\"Draft\\\",\\\"SocialNetworkReactions\\\":[{\\\"ContactId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Timestamp\\\":\\\"<ADD STRING VALUE>\\\",\\\"Type\\\":\\\"Like\\\",\\\"Status\\\":\\\"Active\\\"}]}],\\\"SocialNetworkMessages\\\":[{\\\"MessageId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Timestamp\\\":\\\"<ADD STRING VALUE>\\\",\\\"Source\\\":\\\"<ADD STRING VALUE>\\\",\\\"Destination\\\":\\\"<ADD STRING VALUE>\\\",\\\"Content\\\":\\\"<ADD STRING VALUE>\\\",\\\"Status\\\":\\\"Draft\\\",\\\"SocialNetworkReactions\\\":[{\\\"ContactId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Timestamp\\\":\\\"<ADD STRING VALUE>\\\",\\\"Type\\\":\\\"Like\\\",\\\"Status\\\":\\\"Active\\\"}]}],\\\"SocialNetworkContacts\\\":[{\\\"ContactId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Identity\\\":\\\"<ADD STRING VALUE>\\\",\\\"IdentityType\\\":\\\"Mobile\\\",\\\"IdentityStatus\\\":\\\"Pending\\\",\\\"ContactStatus\\\":\\\"Uploaded\\\",\\\"ContactType\\\":\\\"Contact\\\",\\\"IsVerified\\\":false}],\\\"SocialNetworkDeclarations\\\":[{\\\"DeclarationId\\\":\\\"<ADD STRING VALUE>\\\",\\\"DeclarationEl\\\":\\\"<ADD STRING VALUE>\\\",\\\"DeclarationEn\\\":\\\"<ADD STRING VALUE>\\\",\\\"DeclarationType\\\":\\\"Terms\\\",\\\"DeclarationStatus\\\":\\\"Active\\\",\\\"ActionStatus\\\":\\\"Pending\\\",\\\"Timestamp\\\":\\\"<ADD STRING VALUE>\\\",\\\"Order\\\":0}]}]}]}\")



  req, _ := http.NewRequest(\"PUT\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"SandboxID\":\"<ADD STRING VALUE>\",\"Users\":[{\"UserId\":\"<ADD
            STRING VALUE>\",\"Username\":\"<ADD STRING
            VALUE>\",\"ProviderId\":\"<ADD STRING VALUE>\",\"Provider\":\"<ADD
            STRING VALUE>\",\"SocialNetworkId\":\"<ADD STRING
            VALUE>\",\"MemberId\":\"<ADD STRING
            VALUE>\",\"IsAdmin\":false}],\"SocialNetworks\":[{\"SocialNetworkId\":\"<ADD
            STRING VALUE>\",\"SocialNetworkName\":\"<ADD STRING
            VALUE>\",\"SocialNetworkDescription\":\"<ADD STRING
            VALUE>\",\"SocialNetworkOwner\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"SocialNetworkMembers\":[{\"MemberId\":\"<ADD
            STRING VALUE>\",\"ContactId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"FirstName\":\"<ADD STRING
            VALUE>\",\"LastName\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Avatar\":\"<ADD STRING
            VALUE>\",\"Gender\":\"Male\",\"BirthDate\":\"<ADD STRING
            VALUE>\",\"IsVerified\":false,\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"SocialNetworkPosts\":[{\"PostId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkMessages\":[{\"MessageId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Source\":\"<ADD STRING VALUE>\",\"Destination\":\"<ADD
            STRING VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkContacts\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"ContactStatus\":\"Uploaded\",\"ContactType\":\"Contact\",\"IsVerified\":false}],\"SocialNetworkDeclarations\":[{\"DeclarationId\":\"<ADD
            STRING VALUE>\",\"DeclarationEl\":\"<ADD STRING
            VALUE>\",\"DeclarationEn\":\"<ADD STRING
            VALUE>\",\"DeclarationType\":\"Terms\",\"DeclarationStatus\":\"Active\",\"ActionStatus\":\"Pending\",\"Timestamp\":\"<ADD
            STRING VALUE>\",\"Order\":0}]}]}]}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D")
              .put(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { SandboxID: '<ADD STRING VALUE>',
                 Users:
                  [ { UserId: '<ADD STRING VALUE>',
                      Username: '<ADD STRING VALUE>',
                      ProviderId: '<ADD STRING VALUE>',
                      Provider: '<ADD STRING VALUE>',
                      SocialNetworkId: '<ADD STRING VALUE>',
                      MemberId: '<ADD STRING VALUE>',
                      IsAdmin: false } ],
                 SocialNetworks:
                  [ { SocialNetworkId: '<ADD STRING VALUE>',
                      SocialNetworkName: '<ADD STRING VALUE>',
                      SocialNetworkDescription: '<ADD STRING VALUE>',
                      SocialNetworkOwner: '<ADD STRING VALUE>',
                      Status: 'Active',
                      SocialNetworkMembers:
                       [ { MemberId: '<ADD STRING VALUE>',
                           ContactId: '<ADD STRING VALUE>',
                           Status: 'Active',
                           FirstName: '<ADD STRING VALUE>',
                           LastName: '<ADD STRING VALUE>',
                           Alias: '<ADD STRING VALUE>',
                           Avatar: '<ADD STRING VALUE>',
                           Gender: 'Male',
                           BirthDate: '<ADD STRING VALUE>',
                           IsVerified: false,
                           Identity: '<ADD STRING VALUE>',
                           IdentityType: 'Mobile',
                           IdentityStatus: 'Pending',
                           SocialNetworkPosts:
                            [ { PostId: '<ADD STRING VALUE>',
                                Timestamp: '<ADD STRING VALUE>',
                                Content: '<ADD STRING VALUE>',
                                Status: 'Draft',
                                SocialNetworkReactions:
                                 [ { ContactId: '<ADD STRING VALUE>',
                                     Timestamp: '<ADD STRING VALUE>',
                                     Type: 'Like',
                                     Status: 'Active' } ] } ],
                           SocialNetworkMessages:
                            [ { MessageId: '<ADD STRING VALUE>',
                                Timestamp: '<ADD STRING VALUE>',
                                Source: '<ADD STRING VALUE>',
                                Destination: '<ADD STRING VALUE>',
                                Content: '<ADD STRING VALUE>',
                                Status: 'Draft',
                                SocialNetworkReactions:
                                 [ { ContactId: '<ADD STRING VALUE>',
                                     Timestamp: '<ADD STRING VALUE>',
                                     Type: 'Like',
                                     Status: 'Active' } ] } ],
                           SocialNetworkContacts:
                            [ { ContactId: '<ADD STRING VALUE>',
                                Identity: '<ADD STRING VALUE>',
                                IdentityType: 'Mobile',
                                IdentityStatus: 'Pending',
                                ContactStatus: 'Uploaded',
                                ContactType: 'Contact',
                                IsVerified: false } ],
                           SocialNetworkDeclarations:
                            [ { DeclarationId: '<ADD STRING VALUE>',
                                DeclarationEl: '<ADD STRING VALUE>',
                                DeclarationEn: '<ADD STRING VALUE>',
                                DeclarationType: 'Terms',
                                DeclarationStatus: 'Active',
                                ActionStatus: 'Pending',
                                Timestamp: '<ADD STRING VALUE>',
                                Order: 0 } ] } ] } ] },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"SandboxID\":\"<ADD STRING VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD STRING VALUE>\",\"Provider\":\"<ADD STRING VALUE>\",\"SocialNetworkId\":\"<ADD STRING VALUE>\",\"MemberId\":\"<ADD STRING VALUE>\",\"IsAdmin\":false}],\"SocialNetworks\":[{\"SocialNetworkId\":\"<ADD STRING VALUE>\",\"SocialNetworkName\":\"<ADD STRING VALUE>\",\"SocialNetworkDescription\":\"<ADD STRING VALUE>\",\"SocialNetworkOwner\":\"<ADD STRING VALUE>\",\"Status\":\"Active\",\"SocialNetworkMembers\":[{\"MemberId\":\"<ADD STRING VALUE>\",\"ContactId\":\"<ADD STRING VALUE>\",\"Status\":\"Active\",\"FirstName\":\"<ADD STRING VALUE>\",\"LastName\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING VALUE>\",\"Avatar\":\"<ADD STRING VALUE>\",\"Gender\":\"Male\",\"BirthDate\":\"<ADD STRING VALUE>\",\"IsVerified\":false,\"Identity\":\"<ADD STRING VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"SocialNetworkPosts\":[{\"PostId\":\"<ADD STRING VALUE>\",\"Timestamp\":\"<ADD STRING VALUE>\",\"Content\":\"<ADD STRING VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD STRING VALUE>\",\"Timestamp\":\"<ADD STRING VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkMessages\":[{\"MessageId\":\"<ADD STRING VALUE>\",\"Timestamp\":\"<ADD STRING VALUE>\",\"Source\":\"<ADD STRING VALUE>\",\"Destination\":\"<ADD STRING VALUE>\",\"Content\":\"<ADD STRING VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD STRING VALUE>\",\"Timestamp\":\"<ADD STRING VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkContacts\":[{\"ContactId\":\"<ADD STRING VALUE>\",\"Identity\":\"<ADD STRING VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"ContactStatus\":\"Uploaded\",\"ContactType\":\"Contact\",\"IsVerified\":false}],\"SocialNetworkDeclarations\":[{\"DeclarationId\":\"<ADD STRING VALUE>\",\"DeclarationEl\":\"<ADD STRING VALUE>\",\"DeclarationEn\":\"<ADD STRING VALUE>\",\"DeclarationType\":\"Terms\",\"DeclarationStatus\":\"Active\",\"ActionStatus\":\"Pending\",\"Timestamp\":\"<ADD STRING VALUE>\",\"Order\":0}]}]}]}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"SandboxID\":\"<ADD STRING
            VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING
            VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD
            STRING VALUE>\",\"Provider\":\"<ADD STRING
            VALUE>\",\"SocialNetworkId\":\"<ADD STRING
            VALUE>\",\"MemberId\":\"<ADD STRING
            VALUE>\",\"IsAdmin\":false}],\"SocialNetworks\":[{\"SocialNetworkId\":\"<ADD
            STRING VALUE>\",\"SocialNetworkName\":\"<ADD STRING
            VALUE>\",\"SocialNetworkDescription\":\"<ADD STRING
            VALUE>\",\"SocialNetworkOwner\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"SocialNetworkMembers\":[{\"MemberId\":\"<ADD
            STRING VALUE>\",\"ContactId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"FirstName\":\"<ADD STRING
            VALUE>\",\"LastName\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Avatar\":\"<ADD STRING
            VALUE>\",\"Gender\":\"Male\",\"BirthDate\":\"<ADD STRING
            VALUE>\",\"IsVerified\":false,\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"SocialNetworkPosts\":[{\"PostId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkMessages\":[{\"MessageId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Source\":\"<ADD STRING VALUE>\",\"Destination\":\"<ADD
            STRING VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkContacts\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"ContactStatus\":\"Uploaded\",\"ContactType\":\"Contact\",\"IsVerified\":false}],\"SocialNetworkDeclarations\":[{\"DeclarationId\":\"<ADD
            STRING VALUE>\",\"DeclarationEl\":\"<ADD STRING
            VALUE>\",\"DeclarationEn\":\"<ADD STRING
            VALUE>\",\"DeclarationType\":\"Terms\",\"DeclarationStatus\":\"Active\",\"ActionStatus\":\"Pending\",\"Timestamp\":\"<ADD
            STRING VALUE>\",\"Order\":0}]}]}]}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("PUT",
            "/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"SandboxID\":\"<ADD STRING
            VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING
            VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD
            STRING VALUE>\",\"Provider\":\"<ADD STRING
            VALUE>\",\"SocialNetworkId\":\"<ADD STRING
            VALUE>\",\"MemberId\":\"<ADD STRING
            VALUE>\",\"IsAdmin\":false}],\"SocialNetworks\":[{\"SocialNetworkId\":\"<ADD
            STRING VALUE>\",\"SocialNetworkName\":\"<ADD STRING
            VALUE>\",\"SocialNetworkDescription\":\"<ADD STRING
            VALUE>\",\"SocialNetworkOwner\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"SocialNetworkMembers\":[{\"MemberId\":\"<ADD
            STRING VALUE>\",\"ContactId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"FirstName\":\"<ADD STRING
            VALUE>\",\"LastName\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Avatar\":\"<ADD STRING
            VALUE>\",\"Gender\":\"Male\",\"BirthDate\":\"<ADD STRING
            VALUE>\",\"IsVerified\":false,\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"SocialNetworkPosts\":[{\"PostId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkMessages\":[{\"MessageId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Source\":\"<ADD STRING VALUE>\",\"Destination\":\"<ADD
            STRING VALUE>\",\"Content\":\"<ADD STRING
            VALUE>\",\"Status\":\"Draft\",\"SocialNetworkReactions\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Timestamp\":\"<ADD STRING
            VALUE>\",\"Type\":\"Like\",\"Status\":\"Active\"}]}],\"SocialNetworkContacts\":[{\"ContactId\":\"<ADD
            STRING VALUE>\",\"Identity\":\"<ADD STRING
            VALUE>\",\"IdentityType\":\"Mobile\",\"IdentityStatus\":\"Pending\",\"ContactStatus\":\"Uploaded\",\"ContactType\":\"Contact\",\"IsVerified\":false}],\"SocialNetworkDeclarations\":[{\"DeclarationId\":\"<ADD
            STRING VALUE>\",\"DeclarationEl\":\"<ADD STRING
            VALUE>\",\"DeclarationEn\":\"<ADD STRING
            VALUE>\",\"DeclarationType\":\"Terms\",\"DeclarationStatus\":\"Active\",\"ActionStatus\":\"Pending\",\"Timestamp\":\"<ADD
            STRING VALUE>\",\"Order\":0}]}]}]}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D \
              --header 'accept: application/json' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --data '{"SandboxID":"<ADD STRING VALUE>","Users":[{"UserId":"<ADD STRING VALUE>","Username":"<ADD STRING VALUE>","ProviderId":"<ADD STRING VALUE>","Provider":"<ADD STRING VALUE>","SocialNetworkId":"<ADD STRING VALUE>","MemberId":"<ADD STRING VALUE>","IsAdmin":false}],"SocialNetworks":[{"SocialNetworkId":"<ADD STRING VALUE>","SocialNetworkName":"<ADD STRING VALUE>","SocialNetworkDescription":"<ADD STRING VALUE>","SocialNetworkOwner":"<ADD STRING VALUE>","Status":"Active","SocialNetworkMembers":[{"MemberId":"<ADD STRING VALUE>","ContactId":"<ADD STRING VALUE>","Status":"Active","FirstName":"<ADD STRING VALUE>","LastName":"<ADD STRING VALUE>","Alias":"<ADD STRING VALUE>","Avatar":"<ADD STRING VALUE>","Gender":"Male","BirthDate":"<ADD STRING VALUE>","IsVerified":false,"Identity":"<ADD STRING VALUE>","IdentityType":"Mobile","IdentityStatus":"Pending","SocialNetworkPosts":[{"PostId":"<ADD STRING VALUE>","Timestamp":"<ADD STRING VALUE>","Content":"<ADD STRING VALUE>","Status":"Draft","SocialNetworkReactions":[{"ContactId":"<ADD STRING VALUE>","Timestamp":"<ADD STRING VALUE>","Type":"Like","Status":"Active"}]}],"SocialNetworkMessages":[{"MessageId":"<ADD STRING VALUE>","Timestamp":"<ADD STRING VALUE>","Source":"<ADD STRING VALUE>","Destination":"<ADD STRING VALUE>","Content":"<ADD STRING VALUE>","Status":"Draft","SocialNetworkReactions":[{"ContactId":"<ADD STRING VALUE>","Timestamp":"<ADD STRING VALUE>","Type":"Like","Status":"Active"}]}],"SocialNetworkContacts":[{"ContactId":"<ADD STRING VALUE>","Identity":"<ADD STRING VALUE>","IdentityType":"Mobile","IdentityStatus":"Pending","ContactStatus":"Uploaded","ContactType":"Contact","IsVerified":false}],"SocialNetworkDeclarations":[{"DeclarationId":"<ADD STRING VALUE>","DeclarationEl":"<ADD STRING VALUE>","DeclarationEn":"<ADD STRING VALUE>","DeclarationType":"Terms","DeclarationStatus":"Active","ActionStatus":"Pending","Timestamp":"<ADD STRING VALUE>","Order":0}]}]}]}'
    delete:
      tags:
        - Sandbox
      summary: Delete Sandbox
      description: Delete the Sandbox specified by sandbox id.
      operationId: Sandbox_DeleteSandbox
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: sandbox_id
          in: path
          description: Sandbox ID
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D\"



  req, _ := http.NewRequest(\"DELETE\", url, nil)



  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D")
              .delete(null)
              .addHeader("content-type", "application/json")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("DELETE",
            "/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["content-type"] = 'application/json'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json'
  '/sandbox/{sandbox_id}/users':
    post:
      tags:
        - Sandbox
      summary: Create Sandbox User
      description: "Creates Sandbox User.





Sample request:



    POST /sandbox/{sandbox_id}/users

    {

      \"username\": \"user3\",

      \"isAdmin\" : false

    }"
      operationId: Sandbox_CreateSandboxUser
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
        - name: sandbox_id
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BSandboxUser%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D/users");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"username\":\"<ADD
            STRING VALUE>\",\"isAdmin\":false}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D/users");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"username\":\"<ADD
            STRING VALUE>\",\"isAdmin\":false}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D/users\"



  payload := strings.NewReader(\"{\\\"username\\\":\\\"<ADD STRING VALUE>\\\",\\\"isAdmin\\\":false}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"username\":\"<ADD STRING VALUE>\",\"isAdmin\":false}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D/users")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D/users',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body: { username: '<ADD STRING VALUE>', isAdmin: false },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D/users",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"username\":\"<ADD STRING VALUE>\",\"isAdmin\":false}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"username\":\"<ADD STRING VALUE>\",\"isAdmin\":false}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D/users",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D/users")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"username\":\"<ADD STRING
            VALUE>\",\"isAdmin\":false}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/sandbox/%7Bsandbox_id%7D/users \
              --header 'accept: application/json' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --data '{"username":"<ADD STRING VALUE>","isAdmin":false}'
  /SocialActivities/userPost:
    post:
      tags:
        - SocialActivities
      summary: Create Post
      description: "The user has the ability to create a post. This post will be visible by his/her contacts and they will be able to react on it.





Sample request:



    POST /userPost

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\",

        \"content\": \"Good morning!\"

    }}"
      operationId: SocialActivities_userPost
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BUserPostRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BGenericResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userPost");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userPost");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userPost\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"content\\\":\\\"<ADD STRING VALUE>\\\",\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userPost")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userPost',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { content: '<ADD STRING VALUE>',
                    socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userPost",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"content\":\"<ADD STRING VALUE>\",\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/SocialActivities/userPost",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userPost")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userPost \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"content":"<ADD STRING VALUE>","socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
  /SocialActivities/postsRetrieval:
    post:
      tags:
        - SocialActivities
      summary: Retrieve posts.
      description: "The user has the ability to retrieve posts made by his/her contacts. There are several search criteria that are not mandatory. For example a member can search based on a specific type of contact (e.g Family).



Possible values of contact types are:

- Contact

- Friend

- Family

- Favorite

- Colleague





Sample request:



    POST /postsRetrieval

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\"

    }}"
      operationId: SocialActivities_postsRetrieval
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BPostsRetrievalRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BPostsRetrievalResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/postsRetrieval");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/postsRetrieval");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/postsRetrieval\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"dateFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateTo\\\":\\\"<ADD STRING VALUE>\\\",\\\"contactType\\\":\\\"Contact\\\",\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/postsRetrieval")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/postsRetrieval',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { dateFrom: '<ADD STRING VALUE>',
                    dateTo: '<ADD STRING VALUE>',
                    contactType: 'Contact',
                    socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/postsRetrieval",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/SocialActivities/postsRetrieval",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/postsRetrieval")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/postsRetrieval \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"dateFrom":"<ADD STRING VALUE>","dateTo":"<ADD STRING VALUE>","contactType":"Contact","socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
  /SocialActivities/userReaction:
    post:
      tags:
        - SocialActivities
      summary: Make reaction
      description: "The user can react on a post/direct message. 



Possible types of reaction are:

- Like

- Dislike

- Wow

- Love



Posible types of entities are:

- Post

- Message





Sample request:



    POST /userReaction

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\",

        \"reactionType\": \"Like\",

        \"entity\": \"4728AECF-DA13-4583-B055-5EFFCEC02AD0\",

        \"entityType\": \"Post\"

    }}"
      operationId: SocialActivities_userReaction
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BUserReactionRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BGenericResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userReaction");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"reactionType\":\"Like\",\"entity\":\"<ADD
            STRING VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userReaction");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"reactionType\":\"Like\",\"entity\":\"<ADD
            STRING VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userReaction\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"reactionType\\\":\\\"Like\\\",\\\"entity\\\":\\\"<ADD STRING VALUE>\\\",\\\"entityType\\\":\\\"Post\\\",\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"reactionType\":\"Like\",\"entity\":\"<ADD
            STRING VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userReaction")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userReaction',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { reactionType: 'Like',
                    entity: '<ADD STRING VALUE>',
                    entityType: 'Post',
                    socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userReaction",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"reactionType\":\"Like\",\"entity\":\"<ADD STRING VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"reactionType\":\"Like\",\"entity\":\"<ADD
            STRING VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/SocialActivities/userReaction",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userReaction")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"reactionType\":\"Like\",\"entity\":\"<ADD
            STRING VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userReaction \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"reactionType":"Like","entity":"<ADD STRING VALUE>","entityType":"Post","socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
  /SocialActivities/userMessageSend:
    post:
      tags:
        - SocialActivities
      summary: Send Message
      description: "The user can send a direct message to a registered contact specified by contactId.





Sample request:



    POST /userMessageSend

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\",

        \"contactId\": \"E6E0227B-9749-4887-9F3E-71030B0223E0\",

        \"content\": \"Hello there!\"

    }}"
      operationId: SocialActivities_userMessageSend
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BUserMessageSentRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BGenericResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessageSend");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessageSend");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessageSend\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"contactId\\\":\\\"<ADD STRING VALUE>\\\",\\\"content\\\":\\\"<ADD STRING VALUE>\\\",\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessageSend")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessageSend',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { contactId: '<ADD STRING VALUE>',
                    content: '<ADD STRING VALUE>',
                    socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessageSend",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING VALUE>\",\"content\":\"<ADD STRING VALUE>\",\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessageSend",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessageSend")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"content\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessageSend \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"contactId":"<ADD STRING VALUE>","content":"<ADD STRING VALUE>","socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
  /SocialActivities/userMessages:
    post:
      tags:
        - SocialActivities
      summary: Get User Messages
      description: "Get user messages. There are several search criteria that are not mandatory. For example a member can search based on specific type of contact e.g Family. If the contactId is provided, only messages of this contact are returned. If the contactId is not provided, all inbox messages are returned.



Possible values of contact types are:

- Contact

- Friend

- Family

- Favorite

- Colleague





Sample request:



    POST /userMessages

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\",

        \"contactId\": \"E6E0227B-9749-4887-9F3E-71030B0223E0\"

    }}"
      operationId: SocialActivities_userMessages
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BUserMessagesRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BUserMessagesResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessages");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessages");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessages\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"contactId\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateTo\\\":\\\"<ADD STRING VALUE>\\\",\\\"contactType\\\":\\\"Contact\\\",\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessages")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessages',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { contactId: '<ADD STRING VALUE>',
                    dateFrom: '<ADD STRING VALUE>',
                    dateTo: '<ADD STRING VALUE>',
                    contactType: 'Contact',
                    socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessages",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessages",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessages")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contactId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING
            VALUE>\",\"contactType\":\"Contact\",\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/userMessages \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"contactId":"<ADD STRING VALUE>","dateFrom":"<ADD STRING VALUE>","dateTo":"<ADD STRING VALUE>","contactType":"Contact","socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
  /SocialActivities/reactionsRetrieval:
    post:
      tags:
        - SocialActivities
      summary: Get Reactions
      description: "Get active reactions of an entity.



Possible entityType values:

- Post

- Message





Sample request:



    POST /reactionsRetrieval

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\",

        \"entity\": \"4728AECF-DA13-4583-B055-5EFFCEC02AD0\",

        \"entityType\": \"Post\"

    }}"
      operationId: SocialActivities_reactionsRetrieval
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BReactionsRetrievalRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BReactionsRetrievalResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/reactionsRetrieval");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"entity\":\"<ADD STRING
            VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/reactionsRetrieval");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"entity\":\"<ADD STRING
            VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/reactionsRetrieval\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"entity\\\":\\\"<ADD STRING VALUE>\\\",\\\"entityType\\\":\\\"Post\\\",\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"entity\":\"<ADD STRING
            VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/reactionsRetrieval")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/reactionsRetrieval',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { entity: '<ADD STRING VALUE>',
                    entityType: 'Post',
                    socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/reactionsRetrieval",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"entity\":\"<ADD STRING VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"entity\":\"<ADD STRING
            VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/SocialActivities/reactionsRetrieval",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/reactionsRetrieval")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"entity\":\"<ADD STRING
            VALUE>\",\"entityType\":\"Post\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/SocialActivities/reactionsRetrieval \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"entity":"<ADD STRING VALUE>","entityType":"Post","socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
  /UserManagement/userRegistration:
    post:
      tags:
        - UserManagement
      summary: Register Member
      description: "Register a member. All request properties are mandatory except for the property avatar which is optional and in byte array format. This call is the first step in order to use the Social Network API. The second and final registration step is to call the POST /UserManagement/userRegistrationVerification endpoint that verifies the user via email or SMS. Declaration of type terms is mandatory and the only permitted action is Accepted



Possible IdentityType values are:

- Mobile

- Email



Possible action values are:

- Accepted

- Cancelled

- Viewed

- ShowLater





Sample request:



    POST /userRegistration

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"Identity\": \"+306123123456\",

        \"IdentityType\": \"Mobile\",

        \"firstName\": \"Παναγιώτης\",

        \"lastName\": \"Παναγιώτου\",

        \"alias\": \"Panos\",

        \"gender\": \"Male\",

        \"declarationAcceptance\": [

          {

            \"declarationId\": \"8AE414A9-065E-4A8B-BEEE-DD382A63634F\",

            \"action\": \"Accepted\"

          }

        ]

    }

    }"
      operationId: UserManagement_userRegistration
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BUserRegistrationRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BUserRegistrationResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistration");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistration");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistration\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"identity\\\":\\\"<ADD STRING VALUE>\\\",\\\"identityType\\\":\\\"Mobile\\\",\\\"firstName\\\":\\\"<ADD STRING VALUE>\\\",\\\"lastName\\\":\\\"<ADD STRING VALUE>\\\",\\\"alias\\\":\\\"<ADD STRING VALUE>\\\",\\\"avatar\\\":\\\"<ADD STRING VALUE>\\\",\\\"gender\\\":\\\"Male\\\",\\\"birthDate\\\":\\\"<ADD STRING VALUE>\\\",\\\"declarationAcceptance\\\":[{\\\"declarationId\\\":\\\"<ADD STRING VALUE>\\\",\\\"action\\\":\\\"Accepted\\\"}]}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistration")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistration',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { socialNetworkId: '<ADD STRING VALUE>',
                    identity: '<ADD STRING VALUE>',
                    identityType: 'Mobile',
                    firstName: '<ADD STRING VALUE>',
                    lastName: '<ADD STRING VALUE>',
                    alias: '<ADD STRING VALUE>',
                    avatar: '<ADD STRING VALUE>',
                    gender: 'Male',
                    birthDate: '<ADD STRING VALUE>',
                    declarationAcceptance:
                     [ { declarationId: '<ADD STRING VALUE>', action: 'Accepted' } ] } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistration",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING VALUE>\",\"identity\":\"<ADD STRING VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"avatar\":\"<ADD STRING VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING VALUE>\",\"action\":\"Accepted\"}]}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistration",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistration")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistration \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"socialNetworkId":"<ADD STRING VALUE>","identity":"<ADD STRING VALUE>","identityType":"Mobile","firstName":"<ADD STRING VALUE>","lastName":"<ADD STRING VALUE>","alias":"<ADD STRING VALUE>","avatar":"<ADD STRING VALUE>","gender":"Male","birthDate":"<ADD STRING VALUE>","declarationAcceptance":[{"declarationId":"<ADD STRING VALUE>","action":"Accepted"}]}}'
  /UserManagement/userRegistrationVerification:
    post:
      tags:
        - UserManagement
      summary: Verify User Registration
      description: "This call verifies a user's registration. The verificationId is mandatory (provided by the POST /UserManagement/userRegistration endpoint) and also the verificationCode (sent via email or SMS).



Possible IdentityType values are:

- Mobile

- Email



Possible action values are:

- Accepted

- Cancelled

- Viewed

- ShowLater





Sample request:



    POST /userRegistrationVerification

    {

    \"header\": {

    \"ID\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

    \"application\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\"

    },

    \"payload\": {

    \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

    \"Identity\": \"+306123123456\",

    \"IdentityType\": \"Mobile\",

    \"firstName\": \"Παναγιώτης\",

    \"lastName\": \"Παναγιώτου\",

    \"alias\": \"Panos\",

    \"gender\": \"Male\",

    \"verificationId\": \"123456789\",

    \"verificationCode\": \"123456\",

    \"declarationAcceptance\": [

    {

    \"declarationId\": \"8AE414A9-065E-4A8B-BEEE-DD382A63634F\",

    \"action\": \"Accepted\"

    }]

    }

    }"
      operationId: UserManagement_userRegistrationVerification
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BUserRegistrationVerificationRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BUserRegistrationVerificationResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistrationVerification");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"verificationId\":\"<ADD STRING
            VALUE>\",\"verificationCode\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistrationVerification");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"verificationId\":\"<ADD STRING
            VALUE>\",\"verificationCode\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistrationVerification\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"verificationId\\\":\\\"<ADD STRING VALUE>\\\",\\\"verificationCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"identity\\\":\\\"<ADD STRING VALUE>\\\",\\\"identityType\\\":\\\"Mobile\\\",\\\"firstName\\\":\\\"<ADD STRING VALUE>\\\",\\\"lastName\\\":\\\"<ADD STRING VALUE>\\\",\\\"alias\\\":\\\"<ADD STRING VALUE>\\\",\\\"avatar\\\":\\\"<ADD STRING VALUE>\\\",\\\"gender\\\":\\\"Male\\\",\\\"birthDate\\\":\\\"<ADD STRING VALUE>\\\",\\\"declarationAcceptance\\\":[{\\\"declarationId\\\":\\\"<ADD STRING VALUE>\\\",\\\"action\\\":\\\"Accepted\\\"}]}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"verificationId\":\"<ADD STRING
            VALUE>\",\"verificationCode\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistrationVerification")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistrationVerification',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { verificationId: '<ADD STRING VALUE>',
                    verificationCode: '<ADD STRING VALUE>',
                    socialNetworkId: '<ADD STRING VALUE>',
                    identity: '<ADD STRING VALUE>',
                    identityType: 'Mobile',
                    firstName: '<ADD STRING VALUE>',
                    lastName: '<ADD STRING VALUE>',
                    alias: '<ADD STRING VALUE>',
                    avatar: '<ADD STRING VALUE>',
                    gender: 'Male',
                    birthDate: '<ADD STRING VALUE>',
                    declarationAcceptance:
                     [ { declarationId: '<ADD STRING VALUE>', action: 'Accepted' } ] } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistrationVerification",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"verificationId\":\"<ADD STRING VALUE>\",\"verificationCode\":\"<ADD STRING VALUE>\",\"socialNetworkId\":\"<ADD STRING VALUE>\",\"identity\":\"<ADD STRING VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"avatar\":\"<ADD STRING VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING VALUE>\",\"action\":\"Accepted\"}]}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"verificationId\":\"<ADD STRING
            VALUE>\",\"verificationCode\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistrationVerification",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistrationVerification")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"verificationId\":\"<ADD STRING
            VALUE>\",\"verificationCode\":\"<ADD STRING
            VALUE>\",\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"identity\":\"<ADD STRING
            VALUE>\",\"identityType\":\"Mobile\",\"firstName\":\"<ADD STRING
            VALUE>\",\"lastName\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING
            VALUE>\",\"avatar\":\"<ADD STRING
            VALUE>\",\"gender\":\"Male\",\"birthDate\":\"<ADD STRING
            VALUE>\",\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING
            VALUE>\",\"action\":\"Accepted\"}]}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userRegistrationVerification \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"verificationId":"<ADD STRING VALUE>","verificationCode":"<ADD STRING VALUE>","socialNetworkId":"<ADD STRING VALUE>","identity":"<ADD STRING VALUE>","identityType":"Mobile","firstName":"<ADD STRING VALUE>","lastName":"<ADD STRING VALUE>","alias":"<ADD STRING VALUE>","avatar":"<ADD STRING VALUE>","gender":"Male","birthDate":"<ADD STRING VALUE>","declarationAcceptance":[{"declarationId":"<ADD STRING VALUE>","action":"Accepted"}]}}'
  /UserManagement/contactsUpload:
    post:
      tags:
        - UserManagement
      summary: Upload Contacts
      description: "The user can upload his/her contacts in order to interact with those who are already registered. The POST /UserManagement/contactsDiscovery endpoint can help to notify the user when a new contact gets registered.





Sample request:



    POST /contactsUpload

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\",

        \"contacts\": [

          {

            \"identity\": \"+306999999999\",

            \"identityType\": \"Mobile\",

            \"contactType\" : \"Friend\"

          }

        ]

    }}"
      operationId: UserManagement_contactsUpload
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BContactsUploadRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BGenericResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsUpload");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contacts\":[{\"identity\":\"<ADD
            STRING
            VALUE>\",\"identityType\":\"Mobile\",\"ContactType\":\"Contact\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsUpload");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contacts\":[{\"identity\":\"<ADD
            STRING
            VALUE>\",\"identityType\":\"Mobile\",\"ContactType\":\"Contact\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsUpload\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"contacts\\\":[{\\\"identity\\\":\\\"<ADD STRING VALUE>\\\",\\\"identityType\\\":\\\"Mobile\\\",\\\"ContactType\\\":\\\"Contact\\\"}],\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contacts\":[{\"identity\":\"<ADD
            STRING
            VALUE>\",\"identityType\":\"Mobile\",\"ContactType\":\"Contact\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsUpload")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsUpload',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { contacts:
                     [ { identity: '<ADD STRING VALUE>',
                         identityType: 'Mobile',
                         ContactType: 'Contact' } ],
                    socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsUpload",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"contacts\":[{\"identity\":\"<ADD STRING VALUE>\",\"identityType\":\"Mobile\",\"ContactType\":\"Contact\"}],\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contacts\":[{\"identity\":\"<ADD
            STRING
            VALUE>\",\"identityType\":\"Mobile\",\"ContactType\":\"Contact\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsUpload",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsUpload")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"contacts\":[{\"identity\":\"<ADD
            STRING
            VALUE>\",\"identityType\":\"Mobile\",\"ContactType\":\"Contact\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsUpload \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"contacts":[{"identity":"<ADD STRING VALUE>","identityType":"Mobile","ContactType":"Contact"}],"socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
  /UserManagement/contactsDiscovery:
    post:
      tags:
        - UserManagement
      summary: Discover Contacts
      description: "The user can discover which of his/her contacts are already registered in the social network. The call returns only active contacts.





Sample request:



    POST /contactsDiscovery

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\"

    }}"
      operationId: UserManagement_contactsDiscovery
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BGenericRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BContactsDiscoveryResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsDiscovery");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsDiscovery");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsDiscovery\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsDiscovery")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsDiscovery',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsDiscovery",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsDiscovery",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsDiscovery")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/contactsDiscovery \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
  /UserManagement/userUnregistration:
    post:
      tags:
        - UserManagement
      summary: User Unregistration
      description: "The user can be deleted from a specific social network.





Sample request:



    POST /userUnregistration

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\"

    }}"
      operationId: UserManagement_userUnregistration
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BGenericRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BGenericResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userUnregistration");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userUnregistration");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userUnregistration\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userUnregistration")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userUnregistration',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userUnregistration",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/UserManagement/userUnregistration",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userUnregistration")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userUnregistration \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
  /UserManagement/declarations:
    post:
      tags:
        - UserManagement
      summary: Get Declarations
      description: "Get Declarations.



Possible values of declarations are:

- Terms

- Announcement

- Promotion



Possible values of language are:

- el

- en



Note: A user must be already registered in order to send a valid Get Declarations request.



Sample request:



    POST /declarations

    {\"payload\":{

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\"

    }}"
      operationId: UserManagement_declarations
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BDeclarationsRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BDeclarationsResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/declarations");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\",\"language\":\"el\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/declarations");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\",\"language\":\"el\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/declarations\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"type\\\":\\\"Terms\\\",\\\"language\\\":\\\"el\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\",\"language\":\"el\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/declarations")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/declarations',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { socialNetworkId: '<ADD STRING VALUE>',
                    type: 'Terms',
                    language: 'el' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/declarations",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING VALUE>\",\"type\":\"Terms\",\"language\":\"el\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\",\"language\":\"el\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/UserManagement/declarations",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/declarations")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"socialNetworkId\":\"<ADD STRING
            VALUE>\",\"type\":\"Terms\",\"language\":\"el\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/declarations \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"socialNetworkId":"<ADD STRING VALUE>","type":"Terms","language":"el"}}'
  /UserManagement/userDeclarationAction:
    post:
      tags:
        - UserManagement
      summary: Action upon declaration
      description: "User can make a specific action upon a declaration.



Possible values of action are:

- Accepted

- Declined

- Viewed

- ShowLater





Sample request:



    POST /userDeclarationAction

    {

        \"socialNetworkId\": \"B3660585-74CA-45CF-BA32-EC3E6C0268E8\",

        \"memberId\": \"FB0475C1-DE25-44C2-AA8F-9661D4C88966\",

        \"declarationAcceptance\": [

            {

                \"declarationId\": \"2405F2E6-5E98-4663-B067-87A9B9A67C3B\",

                \"action\": \"Cancelled\"

            }

        ]

    }"
      operationId: UserManagement_userDeclarationAction
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      parameters:
        - name: request
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Request%5BUserDeclarationActionRequest%5D'
        - name: sandbox_id
          in: header
          description: Sandbox ID
          required: true
          type: string
          default: ''
        - name: application_id
          in: header
          description: Application ID
          required: true
          type: string
          default: ''
        - name: user_id
          in: header
          description: User ID
          required: true
          type: string
          default: ''
        - name: username
          in: header
          description: User Name
          required: true
          type: string
          default: ''
        - name: provider_id
          in: header
          description: Provider ID
          required: true
          type: string
          default: ''
        - name: provider
          in: header
          description: Provider Name
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response%5BGenericResponse%5D'
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userDeclarationAction");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"declarationAcceptance\":[{\"declarationId\":\"<ADD
            STRING VALUE>\",\"action\":\"Accepted\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userDeclarationAction");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"declarationAcceptance\":[{\"declarationId\":\"<ADD
            STRING VALUE>\",\"action\":\"Accepted\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main



import (

  \"fmt\"

  \"strings\"

  \"net/http\"

  \"io/ioutil\"

)



func main() {



  url := \"https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userDeclarationAction\"



  payload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"declarationAcceptance\\\":[{\\\"declarationId\\\":\\\"<ADD STRING VALUE>\\\",\\\"action\\\":\\\"Accepted\\\"}],\\\"socialNetworkId\\\":\\\"<ADD STRING VALUE>\\\",\\\"memberId\\\":\\\"<ADD STRING VALUE>\\\"}}\")



  req, _ := http.NewRequest(\"POST\", url, payload)



  req.Header.Add(\"accept\", \"application/json\")

  req.Header.Add(\"content-type\", \"application/json\")

  req.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"username\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"provider\", \"SOME_STRING_VALUE\")

  req.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")



  res, _ := http.DefaultClient.Do(req)



  defer res.Body.Close()

  body, _ := ioutil.ReadAll(res.Body)



  fmt.Println(res)

  fmt.Println(string(body))



}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"declarationAcceptance\":[{\"declarationId\":\"<ADD
            STRING VALUE>\",\"action\":\"Accepted\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userDeclarationAction")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userDeclarationAction',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { declarationAcceptance:
                     [ { declarationId: '<ADD STRING VALUE>', action: 'Accepted' } ],
                    socialNetworkId: '<ADD STRING VALUE>',
                    memberId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userDeclarationAction",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"declarationAcceptance\":[{\"declarationId\":\"<ADD STRING VALUE>\",\"action\":\"Accepted\"}],\"socialNetworkId\":\"<ADD STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"declarationAcceptance\":[{\"declarationId\":\"<ADD
            STRING VALUE>\",\"action\":\"Accepted\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/socialnetwork/headers/v2.2/UserManagement/userDeclarationAction",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userDeclarationAction")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING
            VALUE>\"},\"payload\":{\"declarationAcceptance\":[{\"declarationId\":\"<ADD
            STRING VALUE>\",\"action\":\"Accepted\"}],\"socialNetworkId\":\"<ADD
            STRING VALUE>\",\"memberId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/socialnetwork/headers/v2.2/UserManagement/userDeclarationAction \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"declarationAcceptance":[{"declarationId":"<ADD STRING VALUE>","action":"Accepted"}],"socialNetworkId":"<ADD STRING VALUE>","memberId":"<ADD STRING VALUE>"}}'
definitions:
  'Request[DeclarationCreationRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Declaration Creation Request Type
        required:
          - socialNetworkId
          - descriptionEn
          - descriptionEl
          - type
        type: object
        properties:
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          descriptionEn:
            description: Declaration description in english
            type: string
          descriptionEl:
            description: Declaration description in greek
            type: string
          type:
            description: Declaration type
            enum:
              - Terms
              - Announcement
              - Promotion
            type: string
  RequestHeader:
    required:
      - ID
    type: object
    properties:
      ID:
        type: string
      application:
        type: string
      bank:
        type: string
      hostSession:
        type: string
      channel:
        type: string
      customer:
        format: double
        type: number
      logitude:
        format: double
        type: number
      latitude:
        format: double
        type: number
      go4moreMember:
        type: boolean
      TAN:
        type: string
  DeclarationCreationRequest:
    description: Declaration Creation Request Type
    required:
      - socialNetworkId
      - descriptionEn
      - descriptionEl
      - type
    type: object
    properties:
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      descriptionEn:
        description: Declaration description in english
        type: string
      descriptionEl:
        description: Declaration description in greek
        type: string
      type:
        description: Declaration type
        enum:
          - Terms
          - Announcement
          - Promotion
        type: string
  'Response[GenericResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GenericResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GenericResponse:
    description: Generic Response Type
    required:
      - success
    type: object
    properties:
      success:
        description: Action result
        type: boolean
  ResponseMessage:
    type: object
    properties:
      id:
        type: string
      code:
        type: string
      desc:
        type: string
      sev:
        enum:
          - Warning
          - Error
          - Info
        type: string
      cat:
        enum:
          - Business
          - Communication
          - Technical
          - Security
        type: string
  'Request[DeclarationUpdateRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Declaration Update Request Type
        required:
          - socialNetworkId
          - descriptionEn
          - declarationId
          - status
          - descriptionEl
        type: object
        properties:
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          descriptionEn:
            description: Declaration description in english
            type: string
          declarationId:
            format: uuid
            description: Declaration identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          status:
            description: Declaration status
            enum:
              - Active
              - Inactive
              - Cancelled
            type: string
          descriptionEl:
            description: Declaration description in greek
            type: string
  DeclarationUpdateRequest:
    description: Declaration Update Request Type
    required:
      - socialNetworkId
      - descriptionEn
      - declarationId
      - status
      - descriptionEl
    type: object
    properties:
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      descriptionEn:
        description: Declaration description in english
        type: string
      declarationId:
        format: uuid
        description: Declaration identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      status:
        description: Declaration status
        enum:
          - Active
          - Inactive
          - Cancelled
        type: string
      descriptionEl:
        description: Declaration description in greek
        type: string
  SandboxRequest:
    description: Sandbox Request
    type: object
    properties:
      sandboxId:
        description: Sandbox unique identifier. E.g MySandbox
        type: string
  'Response[SandboxDataModelV2]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/SandboxDataModelV2'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  SandboxDataModelV2:
    type: object
    properties:
      SandboxID:
        type: string
      Users:
        type: array
        items:
          description: Sandbox User
          type: object
          properties:
            UserId:
              description: Sandbox UserId
              type: string
            Username:
              description: Sandbox Username
              type: string
            ProviderId:
              description: Sandbox Provider unique identifier (e.g NBG.gr)
              type: string
            Provider:
              description: Sandbox Provider (e.g NBG)
              type: string
            SocialNetworkId:
              format: uuid
              description: Sandbox Social Network Identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            MemberId:
              format: uuid
              description: Sandbox Social Network Member Identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            IsAdmin:
              description: Administrator flag
              type: boolean
      SocialNetworks:
        type: array
        items:
          description: Social Network
          type: object
          properties:
            SocialNetworkId:
              format: uuid
              description: Social network identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            SocialNetworkName:
              description: Social network name
              type: string
            SocialNetworkDescription:
              description: Social network description
              type: string
            SocialNetworkOwner:
              description: Social network owner
              type: string
            Status:
              description: Social network status
              enum:
                - Active
                - Inactive
                - Cancelled
              type: string
            SocialNetworkMembers:
              description: Social network members
              type: array
              items:
                description: Social Network Member
                type: object
                properties:
                  MemberId:
                    format: uuid
                    description: Member identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  ContactId:
                    format: uuid
                    description: Member public identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Status:
                    description: Member status
                    enum:
                      - Active
                      - Inactive
                      - Cancelled
                      - Banned
                      - Pending
                    type: string
                  FirstName:
                    description: Member first name
                    type: string
                  LastName:
                    description: Member last name
                    type: string
                  Alias:
                    description: Member alias
                    type: string
                  Avatar:
                    format: byte
                    description: Member avatar
                    type: string
                  Gender:
                    description: Member gender
                    enum:
                      - Male
                      - Female
                      - Undefined
                    type: string
                  BirthDate:
                    format: date-time
                    description: 'User birthDate (Format: yyyy-MM-dd)'
                    type: string
                  IsVerified:
                    description: Flag member verification
                    type: boolean
                  Identity:
                    description: Contact identity e.g mobile phone number
                    type: string
                  IdentityType:
                    description: Contact identifier
                    enum:
                      - Mobile
                      - Email
                    type: string
                  IdentityStatus:
                    description: Contact status
                    enum:
                      - Pending
                      - Active
                      - Inactive
                      - Cancelled
                    type: string
                  SocialNetworkPosts:
                    description: Member posts
                    type: array
                    items:
                      description: Social Network Post
                      type: object
                      properties:
                        PostId:
                          format: uuid
                          description: Post identifier
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        Timestamp:
                          format: date-time
                          description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                          type: string
                        Content:
                          description: Post content
                          type: string
                        Status:
                          description: Post status
                          enum:
                            - Draft
                            - Posted
                            - Deleted
                            - Cancelled
                            - Banned
                            - Inactive
                          type: string
                        SocialNetworkReactions:
                          description: Post reactions
                          type: array
                          items:
                            description: Social Network Reaction
                            type: object
                            properties:
                              ContactId:
                                format: uuid
                                description: Contact which made the reaction.
                                type: string
                                example: 00000000-0000-0000-0000-000000000000
                              Timestamp:
                                format: date-time
                                description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                                type: string
                              Type:
                                description: Reaction Type
                                enum:
                                  - Like
                                  - Dislike
                                  - Wow
                                  - Love
                                type: string
                              Status:
                                description: Reaction status
                                enum:
                                  - Active
                                  - Inactive
                                  - Cancelled
                                type: string
                  SocialNetworkMessages:
                    description: Member messages
                    type: array
                    items:
                      description: Social Network Message
                      type: object
                      properties:
                        MessageId:
                          format: uuid
                          description: Message identifier
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        Timestamp:
                          format: date-time
                          description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                          type: string
                        Source:
                          format: uuid
                          description: Message source
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        Destination:
                          format: uuid
                          description: Message destination
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        Content:
                          description: Message content
                          type: string
                        Status:
                          description: Message status
                          enum:
                            - Draft
                            - Sent
                            - Delivered
                            - Read
                            - Deleted
                            - Cancelled
                            - Banned
                            - Inactive
                          type: string
                        SocialNetworkReactions:
                          description: Message reactions
                          type: array
                          items:
                            description: Social Network Reaction
                            type: object
                            properties:
                              ContactId:
                                format: uuid
                                description: Contact which made the reaction.
                                type: string
                                example: 00000000-0000-0000-0000-000000000000
                              Timestamp:
                                format: date-time
                                description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                                type: string
                              Type:
                                description: Reaction Type
                                enum:
                                  - Like
                                  - Dislike
                                  - Wow
                                  - Love
                                type: string
                              Status:
                                description: Reaction status
                                enum:
                                  - Active
                                  - Inactive
                                  - Cancelled
                                type: string
                  SocialNetworkContacts:
                    description: List with identifiers of member contacts
                    type: array
                    items:
                      description: Social Network Contact
                      type: object
                      properties:
                        ContactId:
                          format: uuid
                          description: Contact identifier
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        Identity:
                          description: Contact identity e.g mobile phone number
                          type: string
                        IdentityType:
                          description: Contact identifier
                          enum:
                            - Mobile
                            - Email
                          type: string
                        IdentityStatus:
                          description: Contact status
                          enum:
                            - Pending
                            - Active
                            - Inactive
                            - Cancelled
                          type: string
                        ContactStatus:
                          description: Contact status
                          enum:
                            - Uploaded
                            - Registered
                            - Cancelled
                            - Inactive
                          type: string
                        ContactType:
                          description: Contact type
                          enum:
                            - Contact
                            - Friend
                            - Family
                            - Favorite
                            - Colleague
                          type: string
                        IsVerified:
                          description: Flag member verification
                          type: boolean
                  SocialNetworkDeclarations:
                    description: List with declarations
                    type: array
                    items:
                      description: Sandbox Social Network Declaration Type
                      type: object
                      properties:
                        DeclarationId:
                          format: uuid
                          description: Declaration identifier
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        DeclarationEl:
                          description: Declaration description in greek
                          type: string
                        DeclarationEn:
                          description: Declaration description in english
                          type: string
                        DeclarationType:
                          description: Declaration type
                          enum:
                            - Terms
                            - Announcement
                            - Promotion
                          type: string
                        DeclarationStatus:
                          description: Declaration status
                          enum:
                            - Active
                            - Inactive
                            - Cancelled
                          type: string
                        ActionStatus:
                          description: Declaration action status
                          enum:
                            - Pending
                            - Accepted
                            - Cancelled
                            - Viewed
                            - ShowLater
                            - Declined
                          type: string
                        Timestamp:
                          format: date-time
                          description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                          type: string
                        Order:
                          format: int32
                          description: Declaration order
                          type: integer
  SandboxUser:
    description: Sandbox User
    type: object
    properties:
      UserId:
        description: Sandbox UserId
        type: string
      Username:
        description: Sandbox Username
        type: string
      ProviderId:
        description: Sandbox Provider unique identifier (e.g NBG.gr)
        type: string
      Provider:
        description: Sandbox Provider (e.g NBG)
        type: string
      SocialNetworkId:
        format: uuid
        description: Sandbox Social Network Identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      MemberId:
        format: uuid
        description: Sandbox Social Network Member Identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      IsAdmin:
        description: Administrator flag
        type: boolean
  SandboxSocialNetwork:
    description: Social Network
    type: object
    properties:
      SocialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      SocialNetworkName:
        description: Social network name
        type: string
      SocialNetworkDescription:
        description: Social network description
        type: string
      SocialNetworkOwner:
        description: Social network owner
        type: string
      Status:
        description: Social network status
        enum:
          - Active
          - Inactive
          - Cancelled
        type: string
      SocialNetworkMembers:
        description: Social network members
        type: array
        items:
          description: Social Network Member
          type: object
          properties:
            MemberId:
              format: uuid
              description: Member identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            ContactId:
              format: uuid
              description: Member public identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Status:
              description: Member status
              enum:
                - Active
                - Inactive
                - Cancelled
                - Banned
                - Pending
              type: string
            FirstName:
              description: Member first name
              type: string
            LastName:
              description: Member last name
              type: string
            Alias:
              description: Member alias
              type: string
            Avatar:
              format: byte
              description: Member avatar
              type: string
            Gender:
              description: Member gender
              enum:
                - Male
                - Female
                - Undefined
              type: string
            BirthDate:
              format: date-time
              description: 'User birthDate (Format: yyyy-MM-dd)'
              type: string
            IsVerified:
              description: Flag member verification
              type: boolean
            Identity:
              description: Contact identity e.g mobile phone number
              type: string
            IdentityType:
              description: Contact identifier
              enum:
                - Mobile
                - Email
              type: string
            IdentityStatus:
              description: Contact status
              enum:
                - Pending
                - Active
                - Inactive
                - Cancelled
              type: string
            SocialNetworkPosts:
              description: Member posts
              type: array
              items:
                description: Social Network Post
                type: object
                properties:
                  PostId:
                    format: uuid
                    description: Post identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Timestamp:
                    format: date-time
                    description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  Content:
                    description: Post content
                    type: string
                  Status:
                    description: Post status
                    enum:
                      - Draft
                      - Posted
                      - Deleted
                      - Cancelled
                      - Banned
                      - Inactive
                    type: string
                  SocialNetworkReactions:
                    description: Post reactions
                    type: array
                    items:
                      description: Social Network Reaction
                      type: object
                      properties:
                        ContactId:
                          format: uuid
                          description: Contact which made the reaction.
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        Timestamp:
                          format: date-time
                          description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                          type: string
                        Type:
                          description: Reaction Type
                          enum:
                            - Like
                            - Dislike
                            - Wow
                            - Love
                          type: string
                        Status:
                          description: Reaction status
                          enum:
                            - Active
                            - Inactive
                            - Cancelled
                          type: string
            SocialNetworkMessages:
              description: Member messages
              type: array
              items:
                description: Social Network Message
                type: object
                properties:
                  MessageId:
                    format: uuid
                    description: Message identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Timestamp:
                    format: date-time
                    description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  Source:
                    format: uuid
                    description: Message source
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Destination:
                    format: uuid
                    description: Message destination
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Content:
                    description: Message content
                    type: string
                  Status:
                    description: Message status
                    enum:
                      - Draft
                      - Sent
                      - Delivered
                      - Read
                      - Deleted
                      - Cancelled
                      - Banned
                      - Inactive
                    type: string
                  SocialNetworkReactions:
                    description: Message reactions
                    type: array
                    items:
                      description: Social Network Reaction
                      type: object
                      properties:
                        ContactId:
                          format: uuid
                          description: Contact which made the reaction.
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        Timestamp:
                          format: date-time
                          description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                          type: string
                        Type:
                          description: Reaction Type
                          enum:
                            - Like
                            - Dislike
                            - Wow
                            - Love
                          type: string
                        Status:
                          description: Reaction status
                          enum:
                            - Active
                            - Inactive
                            - Cancelled
                          type: string
            SocialNetworkContacts:
              description: List with identifiers of member contacts
              type: array
              items:
                description: Social Network Contact
                type: object
                properties:
                  ContactId:
                    format: uuid
                    description: Contact identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Identity:
                    description: Contact identity e.g mobile phone number
                    type: string
                  IdentityType:
                    description: Contact identifier
                    enum:
                      - Mobile
                      - Email
                    type: string
                  IdentityStatus:
                    description: Contact status
                    enum:
                      - Pending
                      - Active
                      - Inactive
                      - Cancelled
                    type: string
                  ContactStatus:
                    description: Contact status
                    enum:
                      - Uploaded
                      - Registered
                      - Cancelled
                      - Inactive
                    type: string
                  ContactType:
                    description: Contact type
                    enum:
                      - Contact
                      - Friend
                      - Family
                      - Favorite
                      - Colleague
                    type: string
                  IsVerified:
                    description: Flag member verification
                    type: boolean
            SocialNetworkDeclarations:
              description: List with declarations
              type: array
              items:
                description: Sandbox Social Network Declaration Type
                type: object
                properties:
                  DeclarationId:
                    format: uuid
                    description: Declaration identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  DeclarationEl:
                    description: Declaration description in greek
                    type: string
                  DeclarationEn:
                    description: Declaration description in english
                    type: string
                  DeclarationType:
                    description: Declaration type
                    enum:
                      - Terms
                      - Announcement
                      - Promotion
                    type: string
                  DeclarationStatus:
                    description: Declaration status
                    enum:
                      - Active
                      - Inactive
                      - Cancelled
                    type: string
                  ActionStatus:
                    description: Declaration action status
                    enum:
                      - Pending
                      - Accepted
                      - Cancelled
                      - Viewed
                      - ShowLater
                      - Declined
                    type: string
                  Timestamp:
                    format: date-time
                    description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  Order:
                    format: int32
                    description: Declaration order
                    type: integer
  SandboxSocialNetworkMember:
    description: Social Network Member
    type: object
    properties:
      MemberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      ContactId:
        format: uuid
        description: Member public identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Status:
        description: Member status
        enum:
          - Active
          - Inactive
          - Cancelled
          - Banned
          - Pending
        type: string
      FirstName:
        description: Member first name
        type: string
      LastName:
        description: Member last name
        type: string
      Alias:
        description: Member alias
        type: string
      Avatar:
        format: byte
        description: Member avatar
        type: string
      Gender:
        description: Member gender
        enum:
          - Male
          - Female
          - Undefined
        type: string
      BirthDate:
        format: date-time
        description: 'User birthDate (Format: yyyy-MM-dd)'
        type: string
      IsVerified:
        description: Flag member verification
        type: boolean
      Identity:
        description: Contact identity e.g mobile phone number
        type: string
      IdentityType:
        description: Contact identifier
        enum:
          - Mobile
          - Email
        type: string
      IdentityStatus:
        description: Contact status
        enum:
          - Pending
          - Active
          - Inactive
          - Cancelled
        type: string
      SocialNetworkPosts:
        description: Member posts
        type: array
        items:
          description: Social Network Post
          type: object
          properties:
            PostId:
              format: uuid
              description: Post identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Timestamp:
              format: date-time
              description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            Content:
              description: Post content
              type: string
            Status:
              description: Post status
              enum:
                - Draft
                - Posted
                - Deleted
                - Cancelled
                - Banned
                - Inactive
              type: string
            SocialNetworkReactions:
              description: Post reactions
              type: array
              items:
                description: Social Network Reaction
                type: object
                properties:
                  ContactId:
                    format: uuid
                    description: Contact which made the reaction.
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Timestamp:
                    format: date-time
                    description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  Type:
                    description: Reaction Type
                    enum:
                      - Like
                      - Dislike
                      - Wow
                      - Love
                    type: string
                  Status:
                    description: Reaction status
                    enum:
                      - Active
                      - Inactive
                      - Cancelled
                    type: string
      SocialNetworkMessages:
        description: Member messages
        type: array
        items:
          description: Social Network Message
          type: object
          properties:
            MessageId:
              format: uuid
              description: Message identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Timestamp:
              format: date-time
              description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            Source:
              format: uuid
              description: Message source
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Destination:
              format: uuid
              description: Message destination
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Content:
              description: Message content
              type: string
            Status:
              description: Message status
              enum:
                - Draft
                - Sent
                - Delivered
                - Read
                - Deleted
                - Cancelled
                - Banned
                - Inactive
              type: string
            SocialNetworkReactions:
              description: Message reactions
              type: array
              items:
                description: Social Network Reaction
                type: object
                properties:
                  ContactId:
                    format: uuid
                    description: Contact which made the reaction.
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Timestamp:
                    format: date-time
                    description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  Type:
                    description: Reaction Type
                    enum:
                      - Like
                      - Dislike
                      - Wow
                      - Love
                    type: string
                  Status:
                    description: Reaction status
                    enum:
                      - Active
                      - Inactive
                      - Cancelled
                    type: string
      SocialNetworkContacts:
        description: List with identifiers of member contacts
        type: array
        items:
          description: Social Network Contact
          type: object
          properties:
            ContactId:
              format: uuid
              description: Contact identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Identity:
              description: Contact identity e.g mobile phone number
              type: string
            IdentityType:
              description: Contact identifier
              enum:
                - Mobile
                - Email
              type: string
            IdentityStatus:
              description: Contact status
              enum:
                - Pending
                - Active
                - Inactive
                - Cancelled
              type: string
            ContactStatus:
              description: Contact status
              enum:
                - Uploaded
                - Registered
                - Cancelled
                - Inactive
              type: string
            ContactType:
              description: Contact type
              enum:
                - Contact
                - Friend
                - Family
                - Favorite
                - Colleague
              type: string
            IsVerified:
              description: Flag member verification
              type: boolean
      SocialNetworkDeclarations:
        description: List with declarations
        type: array
        items:
          description: Sandbox Social Network Declaration Type
          type: object
          properties:
            DeclarationId:
              format: uuid
              description: Declaration identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            DeclarationEl:
              description: Declaration description in greek
              type: string
            DeclarationEn:
              description: Declaration description in english
              type: string
            DeclarationType:
              description: Declaration type
              enum:
                - Terms
                - Announcement
                - Promotion
              type: string
            DeclarationStatus:
              description: Declaration status
              enum:
                - Active
                - Inactive
                - Cancelled
              type: string
            ActionStatus:
              description: Declaration action status
              enum:
                - Pending
                - Accepted
                - Cancelled
                - Viewed
                - ShowLater
                - Declined
              type: string
            Timestamp:
              format: date-time
              description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            Order:
              format: int32
              description: Declaration order
              type: integer
  SandboxSocialNetworkPost:
    description: Social Network Post
    type: object
    properties:
      PostId:
        format: uuid
        description: Post identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Timestamp:
        format: date-time
        description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      Content:
        description: Post content
        type: string
      Status:
        description: Post status
        enum:
          - Draft
          - Posted
          - Deleted
          - Cancelled
          - Banned
          - Inactive
        type: string
      SocialNetworkReactions:
        description: Post reactions
        type: array
        items:
          description: Social Network Reaction
          type: object
          properties:
            ContactId:
              format: uuid
              description: Contact which made the reaction.
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Timestamp:
              format: date-time
              description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            Type:
              description: Reaction Type
              enum:
                - Like
                - Dislike
                - Wow
                - Love
              type: string
            Status:
              description: Reaction status
              enum:
                - Active
                - Inactive
                - Cancelled
              type: string
  SandboxSocialNetworkMessage:
    description: Social Network Message
    type: object
    properties:
      MessageId:
        format: uuid
        description: Message identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Timestamp:
        format: date-time
        description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      Source:
        format: uuid
        description: Message source
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Destination:
        format: uuid
        description: Message destination
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Content:
        description: Message content
        type: string
      Status:
        description: Message status
        enum:
          - Draft
          - Sent
          - Delivered
          - Read
          - Deleted
          - Cancelled
          - Banned
          - Inactive
        type: string
      SocialNetworkReactions:
        description: Message reactions
        type: array
        items:
          description: Social Network Reaction
          type: object
          properties:
            ContactId:
              format: uuid
              description: Contact which made the reaction.
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Timestamp:
              format: date-time
              description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            Type:
              description: Reaction Type
              enum:
                - Like
                - Dislike
                - Wow
                - Love
              type: string
            Status:
              description: Reaction status
              enum:
                - Active
                - Inactive
                - Cancelled
              type: string
  SandboxSocialNetworkContact:
    description: Social Network Contact
    type: object
    properties:
      ContactId:
        format: uuid
        description: Contact identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Identity:
        description: Contact identity e.g mobile phone number
        type: string
      IdentityType:
        description: Contact identifier
        enum:
          - Mobile
          - Email
        type: string
      IdentityStatus:
        description: Contact status
        enum:
          - Pending
          - Active
          - Inactive
          - Cancelled
        type: string
      ContactStatus:
        description: Contact status
        enum:
          - Uploaded
          - Registered
          - Cancelled
          - Inactive
        type: string
      ContactType:
        description: Contact type
        enum:
          - Contact
          - Friend
          - Family
          - Favorite
          - Colleague
        type: string
      IsVerified:
        description: Flag member verification
        type: boolean
  SandboxSocialNetworkDeclaration:
    description: Sandbox Social Network Declaration Type
    type: object
    properties:
      DeclarationId:
        format: uuid
        description: Declaration identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      DeclarationEl:
        description: Declaration description in greek
        type: string
      DeclarationEn:
        description: Declaration description in english
        type: string
      DeclarationType:
        description: Declaration type
        enum:
          - Terms
          - Announcement
          - Promotion
        type: string
      DeclarationStatus:
        description: Declaration status
        enum:
          - Active
          - Inactive
          - Cancelled
        type: string
      ActionStatus:
        description: Declaration action status
        enum:
          - Pending
          - Accepted
          - Cancelled
          - Viewed
          - ShowLater
          - Declined
        type: string
      Timestamp:
        format: date-time
        description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      Order:
        format: int32
        description: Declaration order
        type: integer
  SandboxSocialNetworkReaction:
    description: Social Network Reaction
    type: object
    properties:
      ContactId:
        format: uuid
        description: Contact which made the reaction.
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Timestamp:
        format: date-time
        description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      Type:
        description: Reaction Type
        enum:
          - Like
          - Dislike
          - Wow
          - Love
        type: string
      Status:
        description: Reaction status
        enum:
          - Active
          - Inactive
          - Cancelled
        type: string
  CreateUserRequest:
    description: Create User Request Type
    required:
      - username
      - isAdmin
    type: object
    properties:
      username:
        description: User unique username
        type: string
      isAdmin:
        description: Administrator flag
        type: boolean
  'Response[SandboxUser]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/SandboxUser'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  'Request[UserPostRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: User Post Request Type
        required:
          - content
          - socialNetworkId
          - memberId
        type: object
        properties:
          content:
            description: Post actual content
            type: string
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          memberId:
            format: uuid
            description: Member identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  UserPostRequest:
    description: User Post Request Type
    required:
      - content
      - socialNetworkId
      - memberId
    type: object
    properties:
      content:
        description: Post actual content
        type: string
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Request[PostsRetrievalRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Posts Retrieval Request Type
        required:
          - socialNetworkId
          - memberId
        type: object
        properties:
          dateFrom:
            format: date-time
            description: Post Retrieval date search criteria
            type: string
          dateTo:
            format: date-time
            description: Post Retrieval date search criteria
            type: string
          contactType:
            description: Search by contactType
            enum:
              - Contact
              - Friend
              - Family
              - Favorite
              - Colleague
            type: string
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          memberId:
            format: uuid
            description: Member identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  PostsRetrievalRequest:
    description: Posts Retrieval Request Type
    required:
      - socialNetworkId
      - memberId
    type: object
    properties:
      dateFrom:
        format: date-time
        description: Post Retrieval date search criteria
        type: string
      dateTo:
        format: date-time
        description: Post Retrieval date search criteria
        type: string
      contactType:
        description: Search by contactType
        enum:
          - Contact
          - Friend
          - Family
          - Favorite
          - Colleague
        type: string
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Response[PostsRetrievalResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/PostsRetrievalResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  PostsRetrievalResponse:
    description: Posts Retrieval Response Type
    required:
      - posts
    type: object
    properties:
      posts:
        description: Posts
        type: array
        items:
          $ref: '#/definitions/Post'
  Post:
    description: Post details
    required:
      - postId
      - alias
      - contactId
      - timestamp
      - content
      - reactions
    type: object
    properties:
      postId:
        format: uuid
        description: Post identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      alias:
        description: Alias of the publisher
        type: string
      contactId:
        format: uuid
        description: Publisher identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      timestamp:
        format: date-time
        description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      content:
        description: Post actual content
        type: string
      reactions:
        description: Post reactions
        type: array
        items:
          $ref: '#/definitions/Reaction'
  Reaction:
    description: Reaction
    required:
      - type
      - counter
    type: object
    properties:
      type:
        description: Reaction type
        enum:
          - Like
          - Dislike
          - Wow
          - Love
        type: string
      counter:
        format: int32
        description: Counter for the specified reaction type
        type: integer
  'Request[UserReactionRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: User Reaction Request Type
        required:
          - reactionType
          - entity
          - entityType
          - socialNetworkId
          - memberId
        type: object
        properties:
          reactionType:
            description: Reaction Type
            enum:
              - Like
              - Dislike
              - Wow
              - Love
            type: string
          entity:
            format: uuid
            description: 'Entity identifier e.g for post, message'
            type: string
            example: 00000000-0000-0000-0000-000000000000
          entityType:
            description: Entity Type
            enum:
              - Post
              - Message
            type: string
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          memberId:
            format: uuid
            description: Member identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  UserReactionRequest:
    description: User Reaction Request Type
    required:
      - reactionType
      - entity
      - entityType
      - socialNetworkId
      - memberId
    type: object
    properties:
      reactionType:
        description: Reaction Type
        enum:
          - Like
          - Dislike
          - Wow
          - Love
        type: string
      entity:
        format: uuid
        description: 'Entity identifier e.g for post, message'
        type: string
        example: 00000000-0000-0000-0000-000000000000
      entityType:
        description: Entity Type
        enum:
          - Post
          - Message
        type: string
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Request[UserMessageSentRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: User Message Sent Request Type
        required:
          - contactId
          - content
          - socialNetworkId
          - memberId
        type: object
        properties:
          contactId:
            format: uuid
            description: Message receiver
            type: string
            example: 00000000-0000-0000-0000-000000000000
          content:
            description: Message actual content
            type: string
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          memberId:
            format: uuid
            description: Member identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  UserMessageSentRequest:
    description: User Message Sent Request Type
    required:
      - contactId
      - content
      - socialNetworkId
      - memberId
    type: object
    properties:
      contactId:
        format: uuid
        description: Message receiver
        type: string
        example: 00000000-0000-0000-0000-000000000000
      content:
        description: Message actual content
        type: string
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Request[UserMessagesRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: User Messages Request Type
        required:
          - socialNetworkId
          - memberId
        type: object
        properties:
          contactId:
            format: uuid
            description: Message receiver
            type: string
            example: 00000000-0000-0000-0000-000000000000
          dateFrom:
            format: date-time
            description: Message Retrieval date search criteria
            type: string
          dateTo:
            format: date-time
            description: Message Retrieval date search criteria
            type: string
          contactType:
            description: Search by contactType
            enum:
              - Contact
              - Friend
              - Family
              - Favorite
              - Colleague
            type: string
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          memberId:
            format: uuid
            description: Member identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  UserMessagesRequest:
    description: User Messages Request Type
    required:
      - socialNetworkId
      - memberId
    type: object
    properties:
      contactId:
        format: uuid
        description: Message receiver
        type: string
        example: 00000000-0000-0000-0000-000000000000
      dateFrom:
        format: date-time
        description: Message Retrieval date search criteria
        type: string
      dateTo:
        format: date-time
        description: Message Retrieval date search criteria
        type: string
      contactType:
        description: Search by contactType
        enum:
          - Contact
          - Friend
          - Family
          - Favorite
          - Colleague
        type: string
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Response[UserMessagesResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/UserMessagesResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  UserMessagesResponse:
    description: User Messages Response Type
    required:
      - messages
    type: object
    properties:
      messages:
        description: Messages
        type: array
        items:
          $ref: '#/definitions/Message'
  Message:
    description: Message Type
    required:
      - messageId
      - timestamp
      - content
      - contactId
      - reactions
    type: object
    properties:
      messageId:
        format: uuid
        description: Message identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      timestamp:
        format: date-time
        description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      content:
        description: Message actual content
        type: string
      contactId:
        format: uuid
        description: 'Contact Identifier, either sender or receiver of a message'
        type: string
        example: 00000000-0000-0000-0000-000000000000
      reactions:
        description: Message reactions
        type: array
        items:
          $ref: '#/definitions/Reaction'
  'Request[ReactionsRetrievalRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Reactions Retrieval Request Type
        required:
          - entity
          - entityType
          - socialNetworkId
          - memberId
        type: object
        properties:
          entity:
            format: uuid
            description: 'Entity identifier e.g for post, message'
            type: string
            example: 00000000-0000-0000-0000-000000000000
          entityType:
            description: Reaction Type
            enum:
              - Post
              - Message
            type: string
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          memberId:
            format: uuid
            description: Member identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  ReactionsRetrievalRequest:
    description: Reactions Retrieval Request Type
    required:
      - entity
      - entityType
      - socialNetworkId
      - memberId
    type: object
    properties:
      entity:
        format: uuid
        description: 'Entity identifier e.g for post, message'
        type: string
        example: 00000000-0000-0000-0000-000000000000
      entityType:
        description: Reaction Type
        enum:
          - Post
          - Message
        type: string
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Response[ReactionsRetrievalResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/ReactionsRetrievalResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  ReactionsRetrievalResponse:
    description: Reactions Retrieval Response Type
    required:
      - reactions
    type: object
    properties:
      reactions:
        description: Reactions
        type: array
        items:
          $ref: '#/definitions/ReactionDetails'
  ReactionDetails:
    description: Reaction information
    required:
      - Timestamp
      - Type
      - ContactId
    type: object
    properties:
      Timestamp:
        format: date-time
        description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      Type:
        description: Reaction Type
        enum:
          - Like
          - Dislike
          - Wow
          - Love
        type: string
      ContactId:
        format: uuid
        description: Contact which made the reaction.
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Request[UserRegistrationRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: User Registration Request Type
        required:
          - socialNetworkId
          - identity
          - identityType
          - firstName
          - lastName
          - alias
          - gender
          - declarationAcceptance
        type: object
        properties:
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          identity:
            description: Contact identity e.g mobile phone number
            type: string
          identityType:
            description: Contact identifier
            enum:
              - Mobile
              - Email
            type: string
          firstName:
            description: User first name
            type: string
          lastName:
            description: User last name
            type: string
          alias:
            description: User alias
            type: string
          avatar:
            format: byte
            description: User avatar (byte array)
            type: string
          gender:
            description: User gender
            enum:
              - Male
              - Female
              - Undefined
            type: string
          birthDate:
            format: date-time
            description: 'User birthDate (Format: yyyy-MM-dd)'
            type: string
          declarationAcceptance:
            description: Acceptance per declaration
            type: array
            items:
              description: Action per declarations
              required:
                - declarationId
                - action
              type: object
              properties:
                declarationId:
                  format: uuid
                  description: Declaration identifier
                  type: string
                  example: 00000000-0000-0000-0000-000000000000
                action:
                  description: Declaration Action
                  enum:
                    - Accepted
                    - Declined
                    - Viewed
                    - ShowLater
                  type: string
  UserRegistrationRequest:
    description: User Registration Request Type
    required:
      - socialNetworkId
      - identity
      - identityType
      - firstName
      - lastName
      - alias
      - gender
      - declarationAcceptance
    type: object
    properties:
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      identity:
        description: Contact identity e.g mobile phone number
        type: string
      identityType:
        description: Contact identifier
        enum:
          - Mobile
          - Email
        type: string
      firstName:
        description: User first name
        type: string
      lastName:
        description: User last name
        type: string
      alias:
        description: User alias
        type: string
      avatar:
        format: byte
        description: User avatar (byte array)
        type: string
      gender:
        description: User gender
        enum:
          - Male
          - Female
          - Undefined
        type: string
      birthDate:
        format: date-time
        description: 'User birthDate (Format: yyyy-MM-dd)'
        type: string
      declarationAcceptance:
        description: Acceptance per declaration
        type: array
        items:
          description: Action per declarations
          required:
            - declarationId
            - action
          type: object
          properties:
            declarationId:
              format: uuid
              description: Declaration identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            action:
              description: Declaration Action
              enum:
                - Accepted
                - Declined
                - Viewed
                - ShowLater
              type: string
  DeclarationAcceptance:
    description: Action per declarations
    required:
      - declarationId
      - action
    type: object
    properties:
      declarationId:
        format: uuid
        description: Declaration identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      action:
        description: Declaration Action
        enum:
          - Accepted
          - Declined
          - Viewed
          - ShowLater
        type: string
  'Response[UserRegistrationResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/UserRegistrationResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  UserRegistrationResponse:
    description: User Registration Response Type
    required:
      - verificationId
    type: object
    properties:
      verificationId:
        format: uuid
        description: Verification identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Request[UserRegistrationVerificationRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: User Registration Verification Request
        required:
          - verificationId
          - verificationCode
          - socialNetworkId
          - identity
          - identityType
          - firstName
          - lastName
          - alias
          - gender
          - declarationAcceptance
        type: object
        properties:
          verificationId:
            format: uuid
            description: Verification identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          verificationCode:
            description: Verification code
            type: string
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          identity:
            description: Contact identity e.g mobile phone number
            type: string
          identityType:
            description: Contact identifier
            enum:
              - Mobile
              - Email
            type: string
          firstName:
            description: User first name
            type: string
          lastName:
            description: User last name
            type: string
          alias:
            description: User alias
            type: string
          avatar:
            format: byte
            description: User avatar (byte array)
            type: string
          gender:
            description: User gender
            enum:
              - Male
              - Female
              - Undefined
            type: string
          birthDate:
            format: date-time
            description: 'User birthDate (Format: yyyy-MM-dd)'
            type: string
          declarationAcceptance:
            description: Acceptance per declaration
            type: array
            items:
              description: Action per declarations
              required:
                - declarationId
                - action
              type: object
              properties:
                declarationId:
                  format: uuid
                  description: Declaration identifier
                  type: string
                  example: 00000000-0000-0000-0000-000000000000
                action:
                  description: Declaration Action
                  enum:
                    - Accepted
                    - Declined
                    - Viewed
                    - ShowLater
                  type: string
  UserRegistrationVerificationRequest:
    description: User Registration Verification Request
    required:
      - verificationId
      - verificationCode
      - socialNetworkId
      - identity
      - identityType
      - firstName
      - lastName
      - alias
      - gender
      - declarationAcceptance
    type: object
    properties:
      verificationId:
        format: uuid
        description: Verification identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      verificationCode:
        description: Verification code
        type: string
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      identity:
        description: Contact identity e.g mobile phone number
        type: string
      identityType:
        description: Contact identifier
        enum:
          - Mobile
          - Email
        type: string
      firstName:
        description: User first name
        type: string
      lastName:
        description: User last name
        type: string
      alias:
        description: User alias
        type: string
      avatar:
        format: byte
        description: User avatar (byte array)
        type: string
      gender:
        description: User gender
        enum:
          - Male
          - Female
          - Undefined
        type: string
      birthDate:
        format: date-time
        description: 'User birthDate (Format: yyyy-MM-dd)'
        type: string
      declarationAcceptance:
        description: Acceptance per declaration
        type: array
        items:
          description: Action per declarations
          required:
            - declarationId
            - action
          type: object
          properties:
            declarationId:
              format: uuid
              description: Declaration identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            action:
              description: Declaration Action
              enum:
                - Accepted
                - Declined
                - Viewed
                - ShowLater
              type: string
  'Response[UserRegistrationVerificationResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/UserRegistrationVerificationResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  UserRegistrationVerificationResponse:
    description: User Registration Verification Response Type
    required:
      - memberId
    type: object
    properties:
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Request[ContactsUploadRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Contacts Upload Request Type
        required:
          - contacts
          - socialNetworkId
          - memberId
        type: object
        properties:
          contacts:
            description: Member contacts
            type: array
            items:
              description: Contact basic information
              required:
                - identity
                - identityType
                - ContactType
              type: object
              properties:
                identity:
                  description: Contact identity e.g mobile phone number
                  type: string
                identityType:
                  description: Identity Type e.g mobile
                  enum:
                    - Mobile
                    - Email
                  type: string
                ContactType:
                  description: Contact type
                  enum:
                    - Contact
                    - Friend
                    - Family
                    - Favorite
                    - Colleague
                  type: string
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          memberId:
            format: uuid
            description: Member identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  ContactsUploadRequest:
    description: Contacts Upload Request Type
    required:
      - contacts
      - socialNetworkId
      - memberId
    type: object
    properties:
      contacts:
        description: Member contacts
        type: array
        items:
          description: Contact basic information
          required:
            - identity
            - identityType
            - ContactType
          type: object
          properties:
            identity:
              description: Contact identity e.g mobile phone number
              type: string
            identityType:
              description: Identity Type e.g mobile
              enum:
                - Mobile
                - Email
              type: string
            ContactType:
              description: Contact type
              enum:
                - Contact
                - Friend
                - Family
                - Favorite
                - Colleague
              type: string
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  ContactCore:
    description: Contact basic information
    required:
      - identity
      - identityType
      - ContactType
    type: object
    properties:
      identity:
        description: Contact identity e.g mobile phone number
        type: string
      identityType:
        description: Identity Type e.g mobile
        enum:
          - Mobile
          - Email
        type: string
      ContactType:
        description: Contact type
        enum:
          - Contact
          - Friend
          - Family
          - Favorite
          - Colleague
        type: string
  'Request[GenericRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Generic Request Type
        required:
          - socialNetworkId
          - memberId
        type: object
        properties:
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          memberId:
            format: uuid
            description: Member identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  GenericRequest:
    description: Generic Request Type
    required:
      - socialNetworkId
      - memberId
    type: object
    properties:
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Response[ContactsDiscoveryResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/ContactsDiscoveryResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  ContactsDiscoveryResponse:
    description: Contacts Discovery Response Type
    required:
      - contacts
    type: object
    properties:
      contacts:
        description: Member active contacts
        type: array
        items:
          $ref: '#/definitions/ContactFull'
  ContactFull:
    description: Contact detailed information
    required:
      - alias
      - identity
      - contactType
      - identityType
    type: object
    properties:
      alias:
        description: Contact alias
        type: string
      identity:
        description: Contact identity e.g mobile phone number
        type: string
      contactType:
        description: Contact Type e.g family
        enum:
          - Contact
          - Friend
          - Family
          - Favorite
          - Colleague
        type: string
      identityType:
        description: Identity Type e.g mobile
        enum:
          - Mobile
          - Email
        type: string
      contactAvatar:
        format: byte
        description: Contact avatar
        type: string
  'Request[DeclarationsRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Declarations Request Type
        required:
          - socialNetworkId
        type: object
        properties:
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          type:
            description: Declarations Type
            enum:
              - Terms
              - Announcement
              - Promotion
            type: string
          language:
            description: Declarations language search criteria
            enum:
              - el
              - en
            type: string
  DeclarationsRequest:
    description: Declarations Request Type
    required:
      - socialNetworkId
    type: object
    properties:
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      type:
        description: Declarations Type
        enum:
          - Terms
          - Announcement
          - Promotion
        type: string
      language:
        description: Declarations language search criteria
        enum:
          - el
          - en
        type: string
  'Response[DeclarationsResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/DeclarationsResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  DeclarationsResponse:
    description: Declarations Response Type
    required:
      - declarations
    type: object
    properties:
      declarations:
        description: Declarations
        type: array
        items:
          $ref: '#/definitions/Declaration'
  Declaration:
    description: Declaration Type
    required:
      - declarationId
      - declarationType
      - description
      - timestamp
      - order
    type: object
    properties:
      declarationId:
        format: uuid
        description: Declaration identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      declarationType:
        description: Declaration Type
        enum:
          - Terms
          - Announcement
          - Promotion
        type: string
      description:
        description: Declaration Description
        type: string
      timestamp:
        format: date-time
        description: 'Timestamp (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      order:
        format: int32
        description: Declaration order
        type: integer
  'Request[UserDeclarationActionRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: User Declaration Action Request Type
        required:
          - declarationAcceptance
          - socialNetworkId
          - memberId
        type: object
        properties:
          declarationAcceptance:
            description: Acceptance per declaration
            type: array
            items:
              description: Action per declarations
              required:
                - declarationId
                - action
              type: object
              properties:
                declarationId:
                  format: uuid
                  description: Declaration identifier
                  type: string
                  example: 00000000-0000-0000-0000-000000000000
                action:
                  description: Declaration Action
                  enum:
                    - Accepted
                    - Declined
                    - Viewed
                    - ShowLater
                  type: string
          socialNetworkId:
            format: uuid
            description: Social network identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          memberId:
            format: uuid
            description: Member identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  UserDeclarationActionRequest:
    description: User Declaration Action Request Type
    required:
      - declarationAcceptance
      - socialNetworkId
      - memberId
    type: object
    properties:
      declarationAcceptance:
        description: Acceptance per declaration
        type: array
        items:
          description: Action per declarations
          required:
            - declarationId
            - action
          type: object
          properties:
            declarationId:
              format: uuid
              description: Declaration identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            action:
              description: Declaration Action
              enum:
                - Accepted
                - Declined
                - Viewed
                - ShowLater
              type: string
      socialNetworkId:
        format: uuid
        description: Social network identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      memberId:
        format: uuid
        description: Member identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
securityDefinitions:
  Client-Id:
    type: apiKey
    description: Application's Id
    name: Client-Id
    in: header
security:
  - Client-Id: []