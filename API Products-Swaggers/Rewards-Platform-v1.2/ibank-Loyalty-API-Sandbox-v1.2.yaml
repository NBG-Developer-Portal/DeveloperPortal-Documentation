swagger: '2.0'
info:
  title: i-bank Loyalty API Sandbox
  version: v1.2
  description: >
    ## Functionality at a glance


    Start integrating your application with NBG Bank and:


    **Create a Loyalty Programm for your customers**


    1. Loyalty point collection:

     Your customers can be rewarded -by collecting a certain amount of loyalty points- for using one of the following activities:

    * POS Transactions in one or more of the cooperating merchants

    * Geolocation activity by visiting loyalty granted predefined locations 

    * Event participation in award granted predefined events

    * Using applications integrated with the loyalty program -for a
    pre-determined set of actions.


    2. Loyalty point redemption:

     Once the customer has collected the necessary amount of loyalty points, she can:

    * Issue a reward coupon at a cooperating merchant.

    * Redempt the coupon


    ## Quick Getting Started


    1. **Login/Register** to the NBG Technology HUB

    2. Go to **"APPS"**
    
    3. Select your Organization and go to step 4. If you want to create a new Organization click **\"CREATE AN ORGANIZATION\"** and follow the steps below:
        1. Enter the title of your Organization
        2. Enter a short description of your Organization (optional)
        3. Click **"SUBMIT"**

    4. Select the Organization of choice and click **"ADD AN APPLICATION"** 
          1. Fill in the forms (title and short description)
          2. Check **\"Authorization Code\" and \"Client Credentials\"** 
          3. Enter the **OAuth Redirect and Post Logout URIs** (these are the URIs that we will redirect the user upon logging in and logging out respectively)
              
              You can use the following redirect URL to easily test the API through the portal: *https://developer.nbg.gr/oauth2/redoc-callback*
          4. Click **"SUBMIT"**
          5. Store the APPs **"Client ID"** and **"Client Secret"**
    5. Go to **"API PRODUCTS"** and select the **REWARDS PLATFORM API**
    
    6. Click **\"START USING THIS API\"**, choose your app and click
    **"SUBSCRIBE"**

    7. Create a Sandbox

    8. Play with the API


    ## Create your Sandbox

    Sandboxes are self - contained testing environments that provide a simple
    way of testing the API without any real impact, meaning that no personal or
    financial data is used.

    You can create **your Sandbox** by invoking the **POST** /api/sandbox call.
    This call will generate a new Sandbox with a **unique sandbox_id**.

    Important! Don't lose your sandbox_id, since you will need it for all the
    API calls. Sandbox endpoints are not included in the production version API.


    When you create a sandbox, users and sandbox specific data are generated as
    sample data.


    The following HTTP header parameters are required for every call (except for
    sandbox operations) and can be obtained at sandbox creation:


    sandbox_id = the name of the sandbox you created

    application_id = the client id of your app

    user_id = The user id of your sanbox test user

    username = The user name of your sanbox test user

    provider_id = The user-id issued by the provider (NBG.gr)

    provider = The provider name (NBG)


    Get to know the Sandbox Operations in the related section. 


    ## Start Testing

    Once you have your sandbox_id, you can start invoking the rest of the
    operations by providing all the mandatory information in the http header. 


    ## Important notes

    Request headers

    Each request MUST have the following info:


    *sandbox_id*, *application_id*, *user_id*, *username*, *provider_id*,
    *provider*


    ## Error Codes:

    * NBG-10000: Header is missing

    * NBG-10001: Invalid header parameter sandbox_id

    * NBG-10002: Invalid header parameter user_id

    * NBG-10003: Invalid header parameter provider_id

    * NBG-10004: Invalid header parameter provider

    * NBG-10005: Invalid header parameter username

    * NBG-10006: Invalid request headers

    * NBG-20000: Invalid Loyalty Schema Id

    * NBG-20001: Λάθος τύπος λογαριαμού

    * NBG-20002: Invalid sandboxID

    * NBG-20003: Concurrency exception. Please try again

    * NBG-20004: Δεν υποστηρίζονται επιπλέον πόντοι εξαργύρωσης

    * NBG-20005: Δεν υπάρχουν αρκετοί πόντοι για να ολοκληρωθεί η συναλλαγή

    * NBG-20006: Δεν υπάρχει κουπόνι με αυτόν τον κωδικό

    * NBG-20007: Το πεδίο πόντοι είναι υποχρεωτικό

    * NBG-20008: Υπάρχει ανώτατο όριο στο ποσό συναλλαγής

    * NBG-20009: Το ποσό συναλλαγής πρέπει να είναι μεγαλύτερο του μηδενός

    * NBG-20010: Οι διαθέσιμοι πόντοι πρέπει να είναι μεγαλύτεροι του μηδενός

    * NBG-20011: Υπάρχει κατώτατο όριο στο ποσό συναλλαγής

    * NBG-20012: Το κουπόνι δεν μπορεί να εξαργυρωθεί

    * NBG-20013: Λάθος δεδομένα εισαγωγής

    * NBG-20014: Οι συντεταγμένες δεν βρίσκονται εντός του ορίου

    * NBG-30000: Ο πελάτης δεν είναι εγγεγραμμένος στο loyalty

    * NBG-30001: Sandbox Not Found

    * NBG-30002: Δεν βρέθηκε ο λαγαριασμός του πελάτη

    * NBG-30003: Δεν βρέθηκε η εκδήλωση

    * NBG-30004: Δεν βρέθηκε ο έμπορος

    * NBG-30005: Δεν βρήθηκαν πόντοι για τον πελάτη

    * NBG-40000: Ο πελάτης είναι ήδη εγγεγραμμένος στο loyalty

    * NBG-40001: Ο πελάτης έχει ήδη συνδεδεμένο αυτό τον λογαριασμό

    * NBG-40002: Sandbox with the same sandboxID already exists!

    * NBG-40003: Η συναλλαγή υπάρχει ήδη

    * NBG-40004: Ο συνδυασμός batchId, transactionId και terminalId δεν ειναι
    μοναδικός

    * NBG-50000: User not logged in. Authentication is required

    * NBG-60000: Cannot Create Sandbox

    * NBG-60001: Cannot Update Sandbox




    ## Feedback and Questions

    We would love to hear your feedback and answer your questions. Send us at
    [developer@nbg.gr](developer@nbg.gr)


    Check out our [Sandbox Postman
    Collection](https://github.com/myNBGcode/PostmanCollections/tree/master/Loyalty%20API)!


    ------------------------------------------------------------------------------------------ 


    Created by [**NBG**](https://www.nbg.gr/).


    ------------------------------------------------------------------------------------------ 

    ------------------------------------------------------------------------------------------



     # Entities 

     Below, the main entities are documented.
     <a name=Request[RegisterCustomerRequest]></a> 
    ## Request[RegisterCustomerRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Register Customer Request| object|

     <a name=RequestHeader></a> 
    ## RequestHeader 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | ID| -| string|

    | application| -| string|

    | bank| -| string|

    | hostSession| -| string|

    | channel| -| string|

    | customer| -| number|

    | logitude| -| number|

    | latitude| -| number|

    | go4moreMember| -| boolean|

    | TAN| -| string|

     <a name=RegisterCustomerRequest></a> 
    ## RegisterCustomerRequest 

    Register Customer Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | firstname| Customer's firstname| string|

    | surname| Customer's surname| string|

    | birthdayYear| Customer's birthday year| integer|

    | phoneNumber| Customer's phone number| string|

    | email| Customer's email address| string|

    | accounts| Customer's linked accounts or cards| array|

     <a name=AccountRequest></a> 
    ## AccountRequest 

    Account Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | accountNumber| Account Number| string|

    | accountType| Account Type| string|

    | expirationDate| Expiration date of card. Only Cards supported (Format:
    yyyy-MM-dd)| string|

    | holderName| Holder name of account| string|

     <a name=Response[RegisterCustomerResponse]></a> 
    ## Response[RegisterCustomerResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[RegisterCustomerResponse](#RegisterCustomerResponse)</summary><ul><li>customerId
    [string]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=RegisterCustomerResponse></a> 
    ## RegisterCustomerResponse 

    Register Customer Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | customerId| Generated Customer Identifier| string|

     <a name=ResponseMessage></a> 
    ## ResponseMessage 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | id| -| string|

    | code| -| string|

    | desc| -| string|

    | sev| -| string|

    | cat| -| string|

     <a name=Request[GetCustomerRequest]></a> 
    ## Request[GetCustomerRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Get Customer Request| object|

     <a name=GetCustomerRequest></a> 
    ## GetCustomerRequest 

    Get Customer Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

     <a name=Response[GetCustomerResponse]></a> 
    ## Response[GetCustomerResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[GetCustomerResponse](#GetCustomerResponse)</summary><ul><li>firstName
    [string]</li> <li>surname [string]</li> <li>customerAppIdentity
    [string]</li> <li>birthdayYear [string]</li> <li>phoneNumber [string]</li>
    <li>email [string]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=GetCustomerResponse></a> 
    ## GetCustomerResponse 

    Get Customer Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | firstName| Customer's firstname| string|

    | surname| Customer's surname| string|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | birthdayYear| Customer's birthday year| string|

    | phoneNumber| Customer's phone number| string|

    | email| Customer's email address| string|

     <a name=Request[AddAccountRequest]></a> 
    ## Request[AddAccountRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Add Account Request| object|

     <a name=AddAccountRequest></a> 
    ## AddAccountRequest 

    Add Account Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | accountNumber| Account or Card Number| string|

    | accountType| Account Type| string|

    | expirationDate| Expiration date of card. Only Cards supported| string|

    | holderName| Holder name of account or card| string|

     <a name=Response[GenericResponse]></a> 
    ## Response[GenericResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[GenericResponse](#GenericResponse)</summary><ul><li>success
    [boolean]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=GenericResponse></a> 
    ## GenericResponse 

    Generic Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | success| Indicates if the action executed successfully| boolean|

     <a name=Request[GetAccountsRequest]></a> 
    ## Request[GetAccountsRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Get Account Request Type| object|

     <a name=GetAccountsRequest></a> 
    ## GetAccountsRequest 

    Get Account Request Type 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

     <a name=Response[GetAccountResponse]></a> 
    ## Response[GetAccountResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[GetAccountResponse](#GetAccountResponse)</summary><ul><li>accounts
    [array[[Account](#Account)]]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=GetAccountResponse></a> 
    ## GetAccountResponse 

    Get Account Response Type 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | accounts| Customer Account List| array[[Account](#Account)]|

     <a name=Account></a> 
    ## Account 

    Account 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | accountNumber| Account or Card Number| string|

    | accountType| Account Type| string|

    | holderName| Holder name of account or card| string|

    | expirationDate| Expiration date of card. Only Cards supported| string|

     <a name=Request[GetMerchantCategoriesRequest]></a> 
    ## Request[GetMerchantCategoriesRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Get Merchant Categories Request Type| object|

     <a name=GetMerchantCategoriesRequest></a> 
    ## GetMerchantCategoriesRequest 

    Get Merchant Categories Request Type 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

     <a name=Response[GetMerchantCategoriesResponse]></a> 
    ## Response[GetMerchantCategoriesResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[GetMerchantCategoriesResponse](#GetMerchantCategoriesResponse)</summary><ul><li>merchantCategories
    [array[[MerchantCategory](#MerchantCategory)]]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=GetMerchantCategoriesResponse></a> 
    ## GetMerchantCategoriesResponse 

    Get Merchant Categories Response Type 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | merchantCategories| Customer's transactions|
    array[[MerchantCategory](#MerchantCategory)]|

     <a name=MerchantCategory></a> 
    ## MerchantCategory 

    Merchant Category 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | merchantCategoryCode| Merchant Category Code| string|

    | description| Merchant Category Description| string|

     <a name=Request[ManageMerchantRequest]></a> 
    ## Request[ManageMerchantRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Add Merchant Request Type| object|

     <a name=ManageMerchantRequest></a> 
    ## ManageMerchantRequest 

    Add Merchant Request Type 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | merchantCategoryCode| Merchant Category Code| string|

    | merchantAppId| Merchand Id for each Loyalty Schema| string|

    | merchantName| Merchant Name| string|

    | taxId| Merchant Tax Number| string|

    | phoneNo| Merchant Phone Number| string|

    | longtitude| Merchant Shop Longtitude| number|

    | latitude| Merchant Shop Latitude| number|

    | county| Merchant Shop County| string|

    | city| Merchant Shop City| string|

    | zipcode| Merchant Shop Zipcode| string|

    | address| Merchant Shop Address| string|

    | vat| Merchant valid V.A.T.| string|

    | area| Merchant Shop Area| string|

    | dateFrom| Merchant Date From| string|

    | dateTo| Merchant Date To| string|

     <a name=Request[GetMerchantsRequest]></a> 
    ## Request[GetMerchantsRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Get Merchants Request| object|

     <a name=GetMerchantsRequest></a> 
    ## GetMerchantsRequest 

    Get Merchants Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | dateFrom| Date from which merchant is active (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | dateTo| Date to which merchant is active (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

     <a name=Response[GetMerchantsResponse]></a> 
    ## Response[GetMerchantsResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[GetMerchantsResponse](#GetMerchantsResponse)</summary><ul><li>merchants
    [array[[MerchantResponse](#MerchantResponse)]]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=GetMerchantsResponse></a> 
    ## GetMerchantsResponse 

    Get Merchants Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | merchants| Merchants| array[[MerchantResponse](#MerchantResponse)]|

     <a name=MerchantResponse></a> 
    ## MerchantResponse 

    Merchant Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | merchantName| Merchant Name| string|

    | merchantCategory| Merchant Category| string|

    | longtitude| Merchant Shop Longtitude| number|

    | latitude| Merchant Shop Latitude| number|

    | address| Merchant Shop Address| string|

    | zipcode| Merchant Shop Zipcode| string|

    | taxId| Merchant Tax Number| string|

    | phoneNo| Merchant Phone Number| string|

    | county| Merchant Shop County| string|

    | city| Merchant Shop City| string|

    | vat| Merchant valid V.A.T.| string|

    | area| Merchant Shop Area| string|

     <a name=Request[ManageEventRequest]></a> 
    ## Request[ManageEventRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Manage Event Request| object|

     <a name=ManageEventRequest></a> 
    ## ManageEventRequest 

    Manage Event Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | eventCode| Event Code| string|

    | eventDescription| Event Description| string|

    | channel| Event Channel| string|

    | merchantAppId| Merchant Application identifier for Policy| string|

    | alias| Alias| string|

    | timeFrom| TimeFrom (Format HH:mm)| string|

    | timeTo| TimeTo (Format HH:mm)| string|

    | policyType| Policy Type (Either Collection (Activity, Geolocation, Event,
    Pos) or Redemption (RedemptionWithLowerAmount, RedemptionWithHigherAmount))|
    string|

    | rates| Rates| array|

    | limits| Limits| array|

     <a name=Rate></a> 
    ## Rate 

    Rate 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | rateType| Rate Type| string|

    | rateValue| Value| number|

    | latitude| Latitude| number|

    | longitude| Longitude| number|

    | radius| Radius (Unit: meter)| number|

    | dateFrom| Policy Rate Valid Date From (Format: yyyy-MM-dd)| string|

    | dateTo| Policy Rate Valid Date To (Format: yyyy-MM-dd)| string|

     <a name=Limit></a> 
    ## Limit 

    Limit 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | limitType| Limit Type| string|

    | direction| Limit Direction| string|

    | limitValue| Value| number|

    | dateFrom| Policy Limit Valid Date From (Format: yyyy-MM-dd)| string|

    | dateTo| Policy Limit Valid Date From (Format: yyyy-MM-dd)| string|

     <a name=Request[GetEventRequest]></a> 
    ## Request[GetEventRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Get Event Request| object|

     <a name=GetEventRequest></a> 
    ## GetEventRequest 

    Get Event Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema Id| string|

     <a name=Response[GetEventResponse]></a> 
    ## Response[GetEventResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[GetEventResponse](#GetEventResponse)</summary><ul><li>events
    [array[[Event](#Event)]]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=GetEventResponse></a> 
    ## GetEventResponse 

    Get Event Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | events| Event List| array[[Event](#Event)]|

     <a name=Event></a> 
    ## Event 

    Event 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | eventCode| Event Code| string|

    | eventDescription| Event Description| string|

    | channel| Event Channel| string|

     <a name=Request[GetMerchantTariffsRequest]></a> 
    ## Request[GetMerchantTariffsRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Get Merchant Tariffs Request| object|

     <a name=GetMerchantTariffsRequest></a> 
    ## GetMerchantTariffsRequest 

    Get Merchant Tariffs Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | merchantAppId| Merchand Id for each Loyalty Schema| string|

    | transactionDate| Merchant Tariffs date search criteria| string|

     <a name=Response[GetMerchantTariffsResponse]></a> 
    ## Response[GetMerchantTariffsResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[GetMerchantTariffsResponse](#GetMerchantTariffsResponse)</summary><ul><li>tariffs
    [array[[Tariff](#Tariff)]]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=GetMerchantTariffsResponse></a> 
    ## GetMerchantTariffsResponse 

    Get Merchant Tariffs Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | tariffs| Tariffs| array[[Tariff](#Tariff)]|

     <a name=Tariff></a> 
    ## Tariff 

    Tariff 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | eventCode| Event Code| string|

    | eventDescription| Event Description| string|

    | tariffType| Tariff Type (e.g. percent, amount)| string|

    | tariffValue| Tariff Value| number|

     <a name=Request[PointsSimulatorRequest]></a> 
    ## Request[PointsSimulatorRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Points Simulator Request| object|

     <a name=PointsSimulatorRequest></a> 
    ## PointsSimulatorRequest 

    Points Simulator Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | merchantAppId| Merchand Id for each Loyalty Schema| string|

    | accountNumber| Customer's Account or Card Number| string|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | eventCode| Event Code| string|

    | transactionAmount| Transaction Amount| number|

    | transactionDate| Date of transaction execution (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | currencyCode| Currency Code (e.g EUR)| string|

    | latitude| User Latitude| number|

    | longtitude| User Longtitude| number|

     <a name=Response[PointsCollectionResponse]></a> 
    ## Response[PointsCollectionResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[PointsCollectionResponse](#PointsCollectionResponse)</summary><ul><li>pointsCollected
    [integer]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=PointsCollectionResponse></a> 
    ## PointsCollectionResponse 

    Points Collection Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | pointsCollected| Points collected from executed action| integer|

     <a name=Request[PointsCollectionRequest]></a> 
    ## Request[PointsCollectionRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Points Collection Request| object|

     <a name=PointsCollectionRequest></a> 
    ## PointsCollectionRequest 

    Points Collection Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | merchantAppId| Merchand Id for each Loyalty Schema| string|

    | accountNumber| Customer's Account or Card Number| string|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | eventCode| Event Code| string|

    | transactionID| POS Transaction Id. Only POS transactions supported|
    string|

    | terminalID| POS Terminal Id. Only POS transactions supported| string|

    | batchID| POS Batch Id. Only POS transactions supported| string|

    | transactionAmount| Transaction Amount| number|

    | transactionDate| Date of transaction execution (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | transactionDescription| Transaction Description| string|

    | currencyCode| Currency Code (e.g EUR)| string|

    | latitude| User Latitude| number|

    | longtitude| User Longtitude| number|

     <a name=Request[IssueCouponRequest]></a> 
    ## Request[IssueCouponRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Issue Coupon Request| object|

     <a name=IssueCouponRequest></a> 
    ## IssueCouponRequest 

    Issue Coupon Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | merchantAppId| Merchand Id for each Loyalty Schema| string|

    | accountNumber| Customer's account number| string|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | eventCode| Event Code| string|

    | points| Points to redeem| integer|

    | transactionDate| Date of transaction execution (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

     <a name=Response[IssueCouponResponse]></a> 
    ## Response[IssueCouponResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[IssueCouponResponse](#IssueCouponResponse)</summary><ul><li>couponCode
    [string]</li> <li>couponPoints [integer]</li> <li>couponAmount [number]</li>
    <li>success [boolean]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=IssueCouponResponse></a> 
    ## IssueCouponResponse 

    Issue Coupon Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | couponCode| Coupon Code| string|

    | couponPoints| Coupon Points| integer|

    | couponAmount| Coupon Amount| number|

    | success| Indicates if coupon issued successfully| boolean|

     <a name=Request[PointsRedemptionRequest]></a> 
    ## Request[PointsRedemptionRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Points Redemption Request| object|

     <a name=PointsRedemptionRequest></a> 
    ## PointsRedemptionRequest 

    Points Redemption Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | merchantAppId| Merchand Id for each Loyalty Schema| string|

    | accountNumber| Customer's Account or Card Number| string|

    | couponCode| Coupon Code to redeem| string|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | eventCode| event Code| string|

    | transactionAmount| Transaction Amount| number|

    | transactionDate| Date of transaction execution (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | currencyCode| Currency Code (e.g. EUR)| string|

    | transactionDescription| Transaction Description| string|

    | transactionID| POS Transaction Id. Only POS transactions supported|
    string|

    | terminalID| POS Terminal Id. Only POS transactions supported| string|

    | batchID| POS Batch Id. Only POS transactions supported| string|

     <a name=Request[GetBalanceRequest]></a> 
    ## Request[GetBalanceRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Get Balance Request| object|

     <a name=GetBalanceRequest></a> 
    ## GetBalanceRequest 

    Get Balance Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

     <a name=Response[GetBalanceResponse]></a> 
    ## Response[GetBalanceResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[GetBalanceResponse](#GetBalanceResponse)</summary><ul><li>pointsCollected
    [integer]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=GetBalanceResponse></a> 
    ## GetBalanceResponse 

    Get Balance Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | pointsCollected| Points Collected| integer|

     <a name=Request[GetTransactionsRequest]></a> 
    ## Request[GetTransactionsRequest] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | header| -| object|

    | payload| Get Transactions Request| object|

     <a name=GetTransactionsRequest></a> 
    ## GetTransactionsRequest 

    Get Transactions Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | loyaltySchemaId| Loyalty Schema unique identifier| string|

    | customerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | dateFrom| Transactions Criteria Filter DateTo (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | dateTo| Transactions Criteria Filter DateFrom (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

     <a name=Response[GetTransactionsResponse]></a> 
    ## Response[GetTransactionsResponse] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[GetTransactionsResponse](#GetTransactionsResponse)</summary><ul><li>transactions
    [array[[Transaction](#Transaction)]]</li> </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=GetTransactionsResponse></a> 
    ## GetTransactionsResponse 

    Get Transactions Response 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | transactions| Customer's transactions| array[[Transaction](#Transaction)]|

     <a name=Transaction></a> 
    ## Transaction 

    Transaction 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | merchantName| Merchant Name| string|

    | transactionDescription| Transaction Description| string|

    | transactionAmount| Transaction Amount| number|

    | transactionType| Transaction Type| string|

    | transactionPoints| Transaction Points| integer|

    | eventDescription| Event Description| string|

    | isCoupon| IsCoupon is True When TransactionType is Redemption| boolean|

    | status| Transaction Status| string|

     <a name=SandboxRequest></a> 
    ## SandboxRequest 

    Sandbox Request 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | sandboxId| Sandbox unique identifier. E.g MySandbox| string|

     <a name=Response[SandboxDataModel]></a> 
    ## Response[SandboxDataModel] 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | payload | Entity |
    <details><summary>[SandboxDataModel](#SandboxDataModel)</summary><ul><li>SandboxID
    [string]</li> <li>Users [array]</li> <li>LoyaltySchemas [array]</li>
    </ul></details> | 

    | exception | Entity |
    <details><summary>[ResponseMessage](#ResponseMessage)</summary><ul><li>id
    [string]</li> <li>code [string]</li> <li>desc [string]</li> <li>sev
    [string]</li> <li>cat [string]</li> </ul></details> | 

    | messages| -| array[[ResponseMessage](#ResponseMessage)]|

    | executionTime| -| number|

     <a name=SandboxDataModel></a> 
    ## SandboxDataModel 

    Sandbox Data Model 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | SandboxID| Sandbox unique identifier. E.g MySandbox| string|

    | Users| Sandbox Users. Users remain the same for all Loyalty Schemas|
    array|

    | LoyaltySchemas| Sandbox Loyalty Schemas| array|

     <a name=SandboxUser></a> 
    ## SandboxUser 

    Sandbox User 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | UserId| Sandbox UserId| string|

    | Username| Sandbox Username| string|

    | ProviderId| Sandbox Provider unique identifier (e.g NBG.gr)| string|

    | Provider| Sandbox Provider (e.g NBG)| string|

    | CustomerAppIdentity| Customer App Identity| string|

     <a name=SandboxLoyaltySchema></a> 
    ## SandboxLoyaltySchema 

    Sandbox loyalty Schema 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Loyalty Schema unique identifier| string|

    | Name| Loyalty Schema Name| string|

    | Alias| Loyalty Schema Alias| string|

    | Status| Loyalty Schema Status| string|

    | CreatedOn| Loyalty Schema Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | UpdatedOn| Loyalty Schema Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | Merchants| Loyalty Schema Merchants| array|

    | MerchantRelationships| Loyalty Schema Merchant Relationships| array|

    | Events| Loyalty Schema Events| array|

    | MerchantCategories| Loyalty Schema Merchant Categories| array|

    | Customers| Loyalty Schema Customers| array|

     <a name=SandboxMerchant></a> 
    ## SandboxMerchant 

    Sandbox Merchant 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Merchant unique identifier| string|

    | MerchantAppId| Merchant Application Identifier| string|

    | MerchantName| Merchant Name| string|

    | MerchantCategoryId| Merchant Category identifier| string|

    | Longtitude| Merchant Shop longtitude| number|

    | Latitude| Merchant Shop Latitude| number|

    | Address| Merchant Shop Address| string|

    | Area| Merchant Shop Area| string|

    | Zipcode| Merchant Shop ZipCode| string|

    | MerchantData| Merchant Extra Details| string|

    | calculateToClass| Deserialization class for Merchant Data| string|

    | DateFrom| Merchant Valid Date From (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | DateTo| Merchant Valid Date To (Format: yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | CreatedOn| Merchant Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | UpdatedOn| Merchant Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

     <a name=SandboxMerchantRelationship></a> 
    ## SandboxMerchantRelationship 

    Sandbox Merchant Relationship 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Merchant Relationship unique identifier| string|

    | FranchisorMerchantId| Franchisor Merchant unique identifier| string|

    | FranchiseeMerchantId| Franchisee Merchant unique identifier| string|

    | Status| Status| string|

    | CreatedOn| Merchant Relationship Created Date (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | UpdatedOn| Merchant Relationship Updated Date (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

     <a name=SandboxEvent></a> 
    ## SandboxEvent 

    Sandbox Event 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Event unique identifier| string|

    | EventCode| Event Code| string|

    | EventDescription| Event Description| string|

    | Channel| Event Channel| string|

    | CreatedOn| Event Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | UpdatedOn| Event Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | Policies| Event Specific Policies| array|

     <a name=SandboxMerchantCategory></a> 
    ## SandboxMerchantCategory 

    Sandbox Merchant Category 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Merchant Category unique identifier| string|

    | MerchantCategoryCode| Merchant Category Code| string|

    | Description| Merchant Category Description| string|

    | CreatedOn| Merchant Category Created Date (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | UpdatedOn| Merchant Category Updated Date (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

     <a name=SandboxCustomer></a> 
    ## SandboxCustomer 

    Sandbox Customer 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Customer unique identifier| string|

    | CustomerAppIdentity| Customer Identity for each Loyalty Schema| string|

    | FirstName| Customer's firstname| string|

    | Surname| Customer's surname| string|

    | BirthdayYear| Customer's birthday year| string|

    | PhoneNumber| Customer's phone number| string|

    | Email| Customer's email address| string|

    | Status| Customer Status| string|

    | CreatedOn| Customer Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | UpdatedOn| Customer Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | CustomerPoints| Sandbox Customer Points| object|

    | CustomerAccounts| Customer Accounts| array|

    | Transactions| Customer Transactions| array|

     <a name=SandboxPolicy></a> 
    ## SandboxPolicy 

    Sandbox Policy 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Sandbox Policy unique identifier| string|

    | Alias| Policy Alias| string|

    | MerchantAppId| Merchant Application identifier for Policy| string|

    | SupportedTransactionType| Policy Supported TransactionType| string|

    | CalculateToClass| Deserialization class for Policy Data| string|

    | PolicyData| Policy Data Extra Details| string|

    | TimeFrom| Policy Valid Time From (Format: HH:mm:ss.fffZ)| string|

    | TimeTo| Policy Valid Time To (Format: HH:mm:ss.fffZ)| string|

    | DateFrom| Policy Valid Date From (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | DateTo| Policy Valid Date To (Format: yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | CreatedOn| Policy Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | UpdatedOn| Policy Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | IsActive| Is Active| boolean|

     <a name=SandboxCustomerPoints></a> 
    ## SandboxCustomerPoints 

    Sandbox Customer Points 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Customer Points unique identifier| string|

    | Points| Customer Points| integer|

    | CreatedOn| Customer Points Created Date (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | UpdatedOn| Customer Points Updated Date (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

     <a name=SandboxCustomerAccount></a> 
    ## SandboxCustomerAccount 

    Sandbox Customer Account 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Customer unique identifier| string|

    | AccountType| Customer Account Type| string|

    | AccountNumber| Customer Account Number| string|

    | AccountDetails| Customer Account Extra Details| string|

    | calculateToClass| Deserialization class for Account Details| string|

    | Status| Customer Account Status| string|

    | CreatedOn| Customer Account Created Date (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

    | UpdatedOn| Customer Account Updated Date (Format:
    yyyy-MM-ddTHH:mm:ss.fffZ)| string|

     <a name=SandboxTransaction></a> 
    ## SandboxTransaction 

    Sandbox Transaction 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Id| Transaction unique identifier| string|

    | AccountNumber| Transaction Account Number| string|

    | EventCode| Transaction Event Code| string|

    | MerchantId| Transaction Merchant unique identifier| string|

    | TransactionDate| Tranasction Actual Date| string|

    | TransactionType| Transaction Type| string|

    | CouponCode| Transaction Coupon Code| string|

    | BaselineAmount| Transaction Initial Amount| number|

    | Points| Transaction Points| integer|

    | Status| Transaction Status| string|

    | TransactionData| Transaction Extra Details| string|

    | CalculateToClass| Deserialization class for Transaction Date| string|

    | CreatedOn| Transaction Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | UpdatedOn| Transaction Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)|
    string|

    | TrnFromPosId| Transaction Id from POS| string|

    | BatchFromPosId| BatchId from POS| string|

    | TerminalFromPosId| TerminalId from POS| string|

    | TransactionDescription| Transaction Description| string|
  contact:
    email: developer@nbg.gr
host: apis.nbg.gr
basePath: /sandbox/loyalty/headers/v1.2
schemes:
  - https
paths:
  /Loyalty/registerCustomer:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[RegisterCustomerRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[RegisterCustomerResponse]'
      operationId: Loyalty_registerCustomer
      summary: Register Customer
      description: "Register a customer in order to gain access to the loyalty application. The registration of an account is optional and can be executed at a later time using POST /Loyalty/addAccount.\r\n\r\n\r\nSample request:\r\n\r\n    POST /registerCustomer\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"customerAppIdentity\": \"NewUser\",\r\n        \"firstName\": \"Γεώργιος\",\r\n        \"surName\": \"Δημητρίου\",\r\n        \"birthdayYear\": 1990,\r\n        \"phoneNumber\": \"2111234567\",\r\n        \"email\": \"g.dimitriou@company.com\",\r\n        \"accounts\": [\r\n          {\r\n            \"accountNumber\": \"4700 1234 5678 9999\",\r\n            \"accountType\": \"Card\",\r\n            \"expirationDate\": \"2022-02-02\",\r\n            \"holderName\": \"Γεώργιος Δημητρίου\"\r\n          }\r\n        ]\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/registerCustomer");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"firstname\":\"<ADD STRING VALUE>\",\"surname\":\"<ADD
            STRING VALUE>\",\"birthdayYear\":0,\"phoneNumber\":\"<ADD STRING
            VALUE>\",\"email\":\"<ADD STRING
            VALUE>\",\"accounts\":[{\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}]}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/registerCustomer");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"firstname\":\"<ADD STRING VALUE>\",\"surname\":\"<ADD
            STRING VALUE>\",\"birthdayYear\":0,\"phoneNumber\":\"<ADD STRING
            VALUE>\",\"email\":\"<ADD STRING
            VALUE>\",\"accounts\":[{\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}]}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/registerCustomer\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"firstname\\\":\\\"<ADD STRING VALUE>\\\",\\\"surname\\\":\\\"<ADD STRING VALUE>\\\",\\\"birthdayYear\\\":0,\\\"phoneNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"email\\\":\\\"<ADD STRING VALUE>\\\",\\\"accounts\\\":[{\\\"accountNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"accountType\\\":\\\"Account\\\",\\\"expirationDate\\\":\\\"<ADD STRING VALUE>\\\",\\\"holderName\\\":\\\"<ADD STRING VALUE>\\\"}]}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"firstname\":\"<ADD STRING VALUE>\",\"surname\":\"<ADD
            STRING VALUE>\",\"birthdayYear\":0,\"phoneNumber\":\"<ADD STRING
            VALUE>\",\"email\":\"<ADD STRING
            VALUE>\",\"accounts\":[{\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}]}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/registerCustomer")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/registerCustomer',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    customerAppIdentity: '<ADD STRING VALUE>',
                    firstname: '<ADD STRING VALUE>',
                    surname: '<ADD STRING VALUE>',
                    birthdayYear: 0,
                    phoneNumber: '<ADD STRING VALUE>',
                    email: '<ADD STRING VALUE>',
                    accounts:
                     [ { accountNumber: '<ADD STRING VALUE>',
                         accountType: 'Account',
                         expirationDate: '<ADD STRING VALUE>',
                         holderName: '<ADD STRING VALUE>' } ] } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/registerCustomer",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\",\"firstname\":\"<ADD STRING VALUE>\",\"surname\":\"<ADD STRING VALUE>\",\"birthdayYear\":0,\"phoneNumber\":\"<ADD STRING VALUE>\",\"email\":\"<ADD STRING VALUE>\",\"accounts\":[{\"accountNumber\":\"<ADD STRING VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}]}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"firstname\":\"<ADD STRING VALUE>\",\"surname\":\"<ADD
            STRING VALUE>\",\"birthdayYear\":0,\"phoneNumber\":\"<ADD STRING
            VALUE>\",\"email\":\"<ADD STRING
            VALUE>\",\"accounts\":[{\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}]}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/registerCustomer", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/registerCustomer")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"firstname\":\"<ADD STRING VALUE>\",\"surname\":\"<ADD
            STRING VALUE>\",\"birthdayYear\":0,\"phoneNumber\":\"<ADD STRING
            VALUE>\",\"email\":\"<ADD STRING
            VALUE>\",\"accounts\":[{\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}]}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/registerCustomer \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","customerAppIdentity":"<ADD STRING VALUE>","firstname":"<ADD STRING VALUE>","surname":"<ADD STRING VALUE>","birthdayYear":0,"phoneNumber":"<ADD STRING VALUE>","email":"<ADD STRING VALUE>","accounts":[{"accountNumber":"<ADD STRING VALUE>","accountType":"Account","expirationDate":"<ADD STRING VALUE>","holderName":"<ADD STRING VALUE>"}]}}'
  /Loyalty/customer:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[GetCustomerRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GetCustomerResponse]'
      operationId: Loyalty_customer
      summary: Get Customer
      description: "Get registered customer details.\r\n\r\n\r\nSample request:\r\n\r\n    Post /customer\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"customerAppIdentity\": \"User1\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customer");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customer");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customer\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customer")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customer',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { customerAppIdentity: '<ADD STRING VALUE>',
                    loyaltySchemaId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customer",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/customer", payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customer")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customer \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"customerAppIdentity":"<ADD STRING VALUE>","loyaltySchemaId":"<ADD STRING VALUE>"}}'
  /Loyalty/addAccount:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[AddAccountRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GenericResponse]'
      operationId: Loyalty_addAccount
      summary: Add Account
      description: "Add an account for a specific customer. The value of the parameter customerAppIdentity corresponds to the customer identification.\r\n\r\n\r\nSample request:\r\n\r\n    POST /addAccount\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"customerAppIdentity\": \"NewUser\",\r\n        \"accountNumber\": \"4700 1234 5678 9998\",\r\n        \"accountType\": \"Card\",\r\n        \"expirationDate\": \"2021-02-02\",\r\n        \"holderName\": \"Γεώργιος Δημητρίου\"\r\n     }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/addAccount");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/addAccount");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/addAccount\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"accountNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"accountType\\\":\\\"Account\\\",\\\"expirationDate\\\":\\\"<ADD STRING VALUE>\\\",\\\"holderName\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/addAccount")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/addAccount',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { customerAppIdentity: '<ADD STRING VALUE>',
                    loyaltySchemaId: '<ADD STRING VALUE>',
                    accountNumber: '<ADD STRING VALUE>',
                    accountType: 'Account',
                    expirationDate: '<ADD STRING VALUE>',
                    holderName: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/addAccount",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"accountNumber\":\"<ADD STRING VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/addAccount", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/addAccount")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"accountType\":\"Account\",\"expirationDate\":\"<ADD
            STRING VALUE>\",\"holderName\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/addAccount \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"customerAppIdentity":"<ADD STRING VALUE>","loyaltySchemaId":"<ADD STRING VALUE>","accountNumber":"<ADD STRING VALUE>","accountType":"Account","expirationDate":"<ADD STRING VALUE>","holderName":"<ADD STRING VALUE>"}}'
  /Loyalty/customerAccounts:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[GetAccountsRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GetAccountResponse]'
      operationId: Loyalty_customerAccounts
      summary: Get Customer Accounts
      description: "Get registered customer accounts.\r\n\r\n\r\nSample request:\r\n\r\n    Post /customerAccounts\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"customerAppIdentity\": \"User1\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customerAccounts");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customerAccounts");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customerAccounts\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customerAccounts")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customerAccounts',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { customerAppIdentity: '<ADD STRING VALUE>',
                    loyaltySchemaId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customerAccounts",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/customerAccounts", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customerAccounts")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/customerAccounts \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"customerAppIdentity":"<ADD STRING VALUE>","loyaltySchemaId":"<ADD STRING VALUE>"}}'
  /Loyalty/merchantCategories:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[GetMerchantCategoriesRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GetMerchantCategoriesResponse]'
      operationId: Loyalty_merchantCategories
      summary: Get Merchant Categories
      description: "Get merchant available categories.\r\n\r\n\r\nSample request:\r\n\r\n    Post /merchantCategories\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/merchantCategories");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/merchantCategories");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/merchantCategories\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/merchantCategories")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/merchantCategories',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload: { loyaltySchemaId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/merchantCategories",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/merchantCategories", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/merchantCategories")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/merchantCategories \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>"}}'
  /Loyalty/manageMerchant:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[ManageMerchantRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GenericResponse]'
      operationId: Loyalty_manageMerchant
      summary: Manage Merchant
      description: "Add or update merchant details.\r\n\r\n\r\nSample request:\r\n\r\n    Post /manageMerchant\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"merchantCategoryCode\": \"7357CA96-D374-41FD-B714-450E07CAD7AB\",\r\n        \"merchantAppId\": \"79846537654845449631\",\r\n        \"merchantName\": \"Pappas LTD\",\r\n        \"taxId\": \"123456789\",\r\n        \"phoneNo\": \"1231231230\",\r\n        \"longtitude\": 23.725904,\r\n        \"latitude\": 37.987411,\r\n        \"county\": \"Athens\",\r\n        \"city\": \"Athens\",\r\n        \"zipcode\": \"10438\",\r\n        \"address\": \"Maizonos 3\",\r\n        \"vat\": \"24%\",\r\n        \"area\": \"Athens\",\r\n        \"dateFrom\": \"2018-01-01\",\r\n        \"dateTo\": \"2030-12-31\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageMerchant");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"merchantName\":\"<ADD STRING VALUE>\",\"taxId\":\"<ADD
            STRING VALUE>\",\"phoneNo\":\"<ADD STRING
            VALUE>\",\"longtitude\":0,\"latitude\":0,\"county\":\"<ADD STRING
            VALUE>\",\"city\":\"<ADD STRING VALUE>\",\"zipcode\":\"<ADD STRING
            VALUE>\",\"address\":\"<ADD STRING VALUE>\",\"vat\":\"<ADD STRING
            VALUE>\",\"area\":\"<ADD STRING VALUE>\",\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageMerchant");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"merchantName\":\"<ADD STRING VALUE>\",\"taxId\":\"<ADD
            STRING VALUE>\",\"phoneNo\":\"<ADD STRING
            VALUE>\",\"longtitude\":0,\"latitude\":0,\"county\":\"<ADD STRING
            VALUE>\",\"city\":\"<ADD STRING VALUE>\",\"zipcode\":\"<ADD STRING
            VALUE>\",\"address\":\"<ADD STRING VALUE>\",\"vat\":\"<ADD STRING
            VALUE>\",\"area\":\"<ADD STRING VALUE>\",\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageMerchant\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"merchantCategoryCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"merchantAppId\\\":\\\"<ADD STRING VALUE>\\\",\\\"merchantName\\\":\\\"<ADD STRING VALUE>\\\",\\\"taxId\\\":\\\"<ADD STRING VALUE>\\\",\\\"phoneNo\\\":\\\"<ADD STRING VALUE>\\\",\\\"longtitude\\\":0,\\\"latitude\\\":0,\\\"county\\\":\\\"<ADD STRING VALUE>\\\",\\\"city\\\":\\\"<ADD STRING VALUE>\\\",\\\"zipcode\\\":\\\"<ADD STRING VALUE>\\\",\\\"address\\\":\\\"<ADD STRING VALUE>\\\",\\\"vat\\\":\\\"<ADD STRING VALUE>\\\",\\\"area\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateTo\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"merchantName\":\"<ADD STRING VALUE>\",\"taxId\":\"<ADD
            STRING VALUE>\",\"phoneNo\":\"<ADD STRING
            VALUE>\",\"longtitude\":0,\"latitude\":0,\"county\":\"<ADD STRING
            VALUE>\",\"city\":\"<ADD STRING VALUE>\",\"zipcode\":\"<ADD STRING
            VALUE>\",\"address\":\"<ADD STRING VALUE>\",\"vat\":\"<ADD STRING
            VALUE>\",\"area\":\"<ADD STRING VALUE>\",\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageMerchant")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageMerchant',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    merchantCategoryCode: '<ADD STRING VALUE>',
                    merchantAppId: '<ADD STRING VALUE>',
                    merchantName: '<ADD STRING VALUE>',
                    taxId: '<ADD STRING VALUE>',
                    phoneNo: '<ADD STRING VALUE>',
                    longtitude: 0,
                    latitude: 0,
                    county: '<ADD STRING VALUE>',
                    city: '<ADD STRING VALUE>',
                    zipcode: '<ADD STRING VALUE>',
                    address: '<ADD STRING VALUE>',
                    vat: '<ADD STRING VALUE>',
                    area: '<ADD STRING VALUE>',
                    dateFrom: '<ADD STRING VALUE>',
                    dateTo: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageMerchant",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"merchantCategoryCode\":\"<ADD STRING VALUE>\",\"merchantAppId\":\"<ADD STRING VALUE>\",\"merchantName\":\"<ADD STRING VALUE>\",\"taxId\":\"<ADD STRING VALUE>\",\"phoneNo\":\"<ADD STRING VALUE>\",\"longtitude\":0,\"latitude\":0,\"county\":\"<ADD STRING VALUE>\",\"city\":\"<ADD STRING VALUE>\",\"zipcode\":\"<ADD STRING VALUE>\",\"address\":\"<ADD STRING VALUE>\",\"vat\":\"<ADD STRING VALUE>\",\"area\":\"<ADD STRING VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"merchantName\":\"<ADD STRING VALUE>\",\"taxId\":\"<ADD
            STRING VALUE>\",\"phoneNo\":\"<ADD STRING
            VALUE>\",\"longtitude\":0,\"latitude\":0,\"county\":\"<ADD STRING
            VALUE>\",\"city\":\"<ADD STRING VALUE>\",\"zipcode\":\"<ADD STRING
            VALUE>\",\"address\":\"<ADD STRING VALUE>\",\"vat\":\"<ADD STRING
            VALUE>\",\"area\":\"<ADD STRING VALUE>\",\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/manageMerchant", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageMerchant")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"merchantName\":\"<ADD STRING VALUE>\",\"taxId\":\"<ADD
            STRING VALUE>\",\"phoneNo\":\"<ADD STRING
            VALUE>\",\"longtitude\":0,\"latitude\":0,\"county\":\"<ADD STRING
            VALUE>\",\"city\":\"<ADD STRING VALUE>\",\"zipcode\":\"<ADD STRING
            VALUE>\",\"address\":\"<ADD STRING VALUE>\",\"vat\":\"<ADD STRING
            VALUE>\",\"area\":\"<ADD STRING VALUE>\",\"dateFrom\":\"<ADD STRING
            VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageMerchant \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","merchantCategoryCode":"<ADD STRING VALUE>","merchantAppId":"<ADD STRING VALUE>","merchantName":"<ADD STRING VALUE>","taxId":"<ADD STRING VALUE>","phoneNo":"<ADD STRING VALUE>","longtitude":0,"latitude":0,"county":"<ADD STRING VALUE>","city":"<ADD STRING VALUE>","zipcode":"<ADD STRING VALUE>","address":"<ADD STRING VALUE>","vat":"<ADD STRING VALUE>","area":"<ADD STRING VALUE>","dateFrom":"<ADD STRING VALUE>","dateTo":"<ADD STRING VALUE>"}}'
  /Loyalty/getMerchants:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[GetMerchantsRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GetMerchantsResponse]'
      operationId: Loyalty_getMerchants
      summary: Get Merchants
      description: "Get cooperating merchants details.\r\n\r\n\r\nSample request:\r\n\r\n    Post /getMerchants \r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"dateFrom\": \"2015-01-01\",\r\n        \"dateTo\": \"2099-12-31\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchants");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchants");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchants\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateTo\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchants")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchants',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    dateFrom: '<ADD STRING VALUE>',
                    dateTo: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchants",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/getMerchants", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchants")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchants \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","dateFrom":"<ADD STRING VALUE>","dateTo":"<ADD STRING VALUE>"}}'
  /Loyalty/manageEvent:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[ManageEventRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GenericResponse]'
      operationId: Loyalty_manageEvent
      summary: Manage Event
      description: "Add or update an event’s details. An event has a list of policies of a specific category. The event may or may not refer to one or more merchants. \r\nOnly POS related events (“channel”: “Pos”) refer to a merchant. For example for a completed merchant related event scenario this call should be invoked both for collection and redemption policies.\r\n\r\n\r\nSample request:\r\n\r\n    Post /manageEvent\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"eventCode\": \"1231231230\",\r\n        \"eventDescription\": \"event\",\r\n        \"channel\": \"Pos\",\r\n        \"merchantAppId\": \"090807060504030201\",\r\n        \"alias\": \"Event\",\r\n        \"timeFrom\": \"03:22\",\r\n        \"timeTo\": \"23:22\",\r\n        \"policyType\": \"Pos\",\r\n        \"rates\": [\r\n            {\r\n            \"rateType\": \"Percent\",\r\n            \"rateValue\": 4,\r\n            \"latitude\": 0,\r\n            \"longitude\": 0,\r\n            \"radius\": 0,\r\n            \"dateFrom\": \"2033-02-13T15:32:13.596Z\",\r\n            \"dateTo\": \"2044-02-13T15:32:13.596Z\"\r\n            }\r\n        ],\r\n        \"limits\": [\r\n            {\r\n            \"limitType\": \"Amount\",\r\n            \"direction\": \"Above\",\r\n            \"limitValue\": 1000,\r\n            \"dateFrom\": \"2033-02-13T15:32:13.596Z\",\r\n            \"dateTo\": \"2044-02-13T15:32:13.596Z\"\r\n            }\r\n        ]\r\n      }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageEvent");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"eventDescription\":\"<ADD STRING
            VALUE>\",\"channel\":\"Pos\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"timeFrom\":\"<ADD STRING
            VALUE>\",\"timeTo\":\"<ADD STRING
            VALUE>\",\"policyType\":\"Activity\",\"rates\":[{\"rateType\":\"Percent\",\"rateValue\":0,\"latitude\":0,\"longitude\":0,\"radius\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\"}],\"limits\":[{\"limitType\":\"Amount\",\"direction\":\"Above\",\"limitValue\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}]}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageEvent");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"eventDescription\":\"<ADD STRING
            VALUE>\",\"channel\":\"Pos\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"timeFrom\":\"<ADD STRING
            VALUE>\",\"timeTo\":\"<ADD STRING
            VALUE>\",\"policyType\":\"Activity\",\"rates\":[{\"rateType\":\"Percent\",\"rateValue\":0,\"latitude\":0,\"longitude\":0,\"radius\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\"}],\"limits\":[{\"limitType\":\"Amount\",\"direction\":\"Above\",\"limitValue\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}]}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageEvent\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"eventCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"eventDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"Pos\\\",\\\"merchantAppId\\\":\\\"<ADD STRING VALUE>\\\",\\\"alias\\\":\\\"<ADD STRING VALUE>\\\",\\\"timeFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"timeTo\\\":\\\"<ADD STRING VALUE>\\\",\\\"policyType\\\":\\\"Activity\\\",\\\"rates\\\":[{\\\"rateType\\\":\\\"Percent\\\",\\\"rateValue\\\":0,\\\"latitude\\\":0,\\\"longitude\\\":0,\\\"radius\\\":0,\\\"dateFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateTo\\\":\\\"<ADD STRING VALUE>\\\"}],\\\"limits\\\":[{\\\"limitType\\\":\\\"Amount\\\",\\\"direction\\\":\\\"Above\\\",\\\"limitValue\\\":0,\\\"dateFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateTo\\\":\\\"<ADD STRING VALUE>\\\"}]}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"eventDescription\":\"<ADD STRING
            VALUE>\",\"channel\":\"Pos\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"timeFrom\":\"<ADD STRING
            VALUE>\",\"timeTo\":\"<ADD STRING
            VALUE>\",\"policyType\":\"Activity\",\"rates\":[{\"rateType\":\"Percent\",\"rateValue\":0,\"latitude\":0,\"longitude\":0,\"radius\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\"}],\"limits\":[{\"limitType\":\"Amount\",\"direction\":\"Above\",\"limitValue\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}]}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageEvent")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageEvent',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    eventCode: '<ADD STRING VALUE>',
                    eventDescription: '<ADD STRING VALUE>',
                    channel: 'Pos',
                    merchantAppId: '<ADD STRING VALUE>',
                    alias: '<ADD STRING VALUE>',
                    timeFrom: '<ADD STRING VALUE>',
                    timeTo: '<ADD STRING VALUE>',
                    policyType: 'Activity',
                    rates:
                     [ { rateType: 'Percent',
                         rateValue: 0,
                         latitude: 0,
                         longitude: 0,
                         radius: 0,
                         dateFrom: '<ADD STRING VALUE>',
                         dateTo: '<ADD STRING VALUE>' } ],
                    limits:
                     [ { limitType: 'Amount',
                         direction: 'Above',
                         limitValue: 0,
                         dateFrom: '<ADD STRING VALUE>',
                         dateTo: '<ADD STRING VALUE>' } ] } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageEvent",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"eventCode\":\"<ADD STRING VALUE>\",\"eventDescription\":\"<ADD STRING VALUE>\",\"channel\":\"Pos\",\"merchantAppId\":\"<ADD STRING VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"timeFrom\":\"<ADD STRING VALUE>\",\"timeTo\":\"<ADD STRING VALUE>\",\"policyType\":\"Activity\",\"rates\":[{\"rateType\":\"Percent\",\"rateValue\":0,\"latitude\":0,\"longitude\":0,\"radius\":0,\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}],\"limits\":[{\"limitType\":\"Amount\",\"direction\":\"Above\",\"limitValue\":0,\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}]}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"eventDescription\":\"<ADD STRING
            VALUE>\",\"channel\":\"Pos\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"timeFrom\":\"<ADD STRING
            VALUE>\",\"timeTo\":\"<ADD STRING
            VALUE>\",\"policyType\":\"Activity\",\"rates\":[{\"rateType\":\"Percent\",\"rateValue\":0,\"latitude\":0,\"longitude\":0,\"radius\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\"}],\"limits\":[{\"limitType\":\"Amount\",\"direction\":\"Above\",\"limitValue\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}]}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/manageEvent", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageEvent")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"eventDescription\":\"<ADD STRING
            VALUE>\",\"channel\":\"Pos\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"alias\":\"<ADD STRING VALUE>\",\"timeFrom\":\"<ADD STRING
            VALUE>\",\"timeTo\":\"<ADD STRING
            VALUE>\",\"policyType\":\"Activity\",\"rates\":[{\"rateType\":\"Percent\",\"rateValue\":0,\"latitude\":0,\"longitude\":0,\"radius\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING
            VALUE>\"}],\"limits\":[{\"limitType\":\"Amount\",\"direction\":\"Above\",\"limitValue\":0,\"dateFrom\":\"<ADD
            STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}]}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/manageEvent \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","eventCode":"<ADD STRING VALUE>","eventDescription":"<ADD STRING VALUE>","channel":"Pos","merchantAppId":"<ADD STRING VALUE>","alias":"<ADD STRING VALUE>","timeFrom":"<ADD STRING VALUE>","timeTo":"<ADD STRING VALUE>","policyType":"Activity","rates":[{"rateType":"Percent","rateValue":0,"latitude":0,"longitude":0,"radius":0,"dateFrom":"<ADD STRING VALUE>","dateTo":"<ADD STRING VALUE>"}],"limits":[{"limitType":"Amount","direction":"Above","limitValue":0,"dateFrom":"<ADD STRING VALUE>","dateTo":"<ADD STRING VALUE>"}]}}'
  /Loyalty/events:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[GetEventRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GetEventResponse]'
      operationId: Loyalty_events
      summary: Get Loyalty Schema Events
      description: "Get available loyalty schema events. Loyalty schema events are available for all registered customers and merchants.\r\n\r\n\r\nSample request:\r\n\r\n    Post /events\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/events");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/events");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/events\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/events")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/events',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload: { loyaltySchemaId: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/events",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST", "/sandbox/loyalty/headers/v1.2/Loyalty/events",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/events")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/events \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>"}}'
  /Loyalty/getMerchantTariffs:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[GetMerchantTariffsRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GetMerchantTariffsResponse]'
      operationId: Loyalty_getMerchantTariffs
      summary: Get Merchant Tariffs
      description: "Get merchant payment policies, points will be collected based on these policies. Tariffs have a type and a value. Tariffs are the properties of event policies. \r\nA tariffType coresponds to the rateType and a tariffValue corresponds to the rateValue. For example a merchant may have a policy where a customer will get every time without limit 20% of the transaction amount in points.\r\nTransactionDate is used in order to validate that merchant and event policies are active.\r\n\r\n\r\nSample request:\r\n\r\n    Post /getMerchantTariffs \r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"merchantAppId\": \"9091929394959699798\",\r\n        \"transactionDate\": \"2018-02-13\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchantTariffs");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"transactionDate\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchantTariffs");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"transactionDate\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchantTariffs\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"merchantAppId\\\":\\\"<ADD STRING VALUE>\\\",\\\"transactionDate\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"transactionDate\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchantTariffs")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchantTariffs',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    merchantAppId: '<ADD STRING VALUE>',
                    transactionDate: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchantTariffs",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"merchantAppId\":\"<ADD STRING VALUE>\",\"transactionDate\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"transactionDate\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/getMerchantTariffs", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchantTariffs")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"transactionDate\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getMerchantTariffs \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","merchantAppId":"<ADD STRING VALUE>","transactionDate":"<ADD STRING VALUE>"}}'
  /Loyalty/pointsSimulator:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[PointsSimulatorRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[PointsCollectionResponse]'
      operationId: Loyalty_pointsSimulator
      summary: Points Simulator
      description: "This call simulates the points collection call without business impact.\r\n\r\n\r\nSample request:\r\n\r\n    Post /pointsSimulator\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"customerAppIdentity\": \"User1\",\r\n        \"MerchantAppId\": 9091929394959699798,\r\n        \"accountNumber\": \"4799 9999 9999 9999\",\r\n        \"eventCode\": \"123456789\",\r\n        \"transactionAmount\": 5000,\r\n        \"transactionDate\": \"2018-02-13\",\r\n        \"currencyCode\": \"EUR\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsSimulator");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsSimulator");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsSimulator\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"merchantAppId\\\":\\\"<ADD STRING VALUE>\\\",\\\"accountNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"eventCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"transactionAmount\\\":0,\\\"transactionDate\\\":\\\"<ADD STRING VALUE>\\\",\\\"currencyCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"latitude\\\":0,\\\"longtitude\\\":0}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsSimulator")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsSimulator',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    merchantAppId: '<ADD STRING VALUE>',
                    accountNumber: '<ADD STRING VALUE>',
                    customerAppIdentity: '<ADD STRING VALUE>',
                    eventCode: '<ADD STRING VALUE>',
                    transactionAmount: 0,
                    transactionDate: '<ADD STRING VALUE>',
                    currencyCode: '<ADD STRING VALUE>',
                    latitude: 0,
                    longtitude: 0 } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsSimulator",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"merchantAppId\":\"<ADD STRING VALUE>\",\"accountNumber\":\"<ADD STRING VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\",\"eventCode\":\"<ADD STRING VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING VALUE>\",\"currencyCode\":\"<ADD STRING VALUE>\",\"latitude\":0,\"longtitude\":0}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/pointsSimulator", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsSimulator")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsSimulator \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","merchantAppId":"<ADD STRING VALUE>","accountNumber":"<ADD STRING VALUE>","customerAppIdentity":"<ADD STRING VALUE>","eventCode":"<ADD STRING VALUE>","transactionAmount":0,"transactionDate":"<ADD STRING VALUE>","currencyCode":"<ADD STRING VALUE>","latitude":0,"longtitude":0}}'
  /Loyalty/pointsCollection:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[PointsCollectionRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[PointsCollectionResponse]'
      operationId: Loyalty_pointsCollection
      summary: Points Collection
      description: "A registered customer can collect points for a specific event/policy. A registered merchant is not necessary at this stage.\r\n\r\n\r\nSample request:\r\n\r\n    Post /pointsCollection \r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"customerAppIdentity\": \"User1\",\r\n        \"MerchantAppId\": \"9091929394959699798\",\r\n        \"accountNumber\": \"4799 9999 9999 9999\",\r\n        \"eventCode\": \"123456789\",\r\n        \"transactionID\": \"3b8c0fdf-c137-498c-8606-b2bcc6609779\",\r\n        \"terminalID\": \"3b8c0fdf-c137-498c-8606-b2bcc6609779\",\r\n        \"batchID\": \"3b8c0fdf-c137-498c-8606-b2bcc6609779\",\r\n        \"transactionAmount\": 500,\r\n        \"transactionDate\": \"2018-02-13\",\r\n        \"currencyCode\": \"EUR\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsCollection");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD
            STRING VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsCollection");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD
            STRING VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsCollection\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"merchantAppId\\\":\\\"<ADD STRING VALUE>\\\",\\\"accountNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"eventCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"transactionID\\\":\\\"<ADD STRING VALUE>\\\",\\\"terminalID\\\":\\\"<ADD STRING VALUE>\\\",\\\"batchID\\\":\\\"<ADD STRING VALUE>\\\",\\\"transactionAmount\\\":0,\\\"transactionDate\\\":\\\"<ADD STRING VALUE>\\\",\\\"transactionDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"currencyCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"latitude\\\":0,\\\"longtitude\\\":0}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD
            STRING VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsCollection")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsCollection',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    merchantAppId: '<ADD STRING VALUE>',
                    accountNumber: '<ADD STRING VALUE>',
                    customerAppIdentity: '<ADD STRING VALUE>',
                    eventCode: '<ADD STRING VALUE>',
                    transactionID: '<ADD STRING VALUE>',
                    terminalID: '<ADD STRING VALUE>',
                    batchID: '<ADD STRING VALUE>',
                    transactionAmount: 0,
                    transactionDate: '<ADD STRING VALUE>',
                    transactionDescription: '<ADD STRING VALUE>',
                    currencyCode: '<ADD STRING VALUE>',
                    latitude: 0,
                    longtitude: 0 } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsCollection",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"merchantAppId\":\"<ADD STRING VALUE>\",\"accountNumber\":\"<ADD STRING VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\",\"eventCode\":\"<ADD STRING VALUE>\",\"transactionID\":\"<ADD STRING VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD STRING VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING VALUE>\",\"transactionDescription\":\"<ADD STRING VALUE>\",\"currencyCode\":\"<ADD STRING VALUE>\",\"latitude\":0,\"longtitude\":0}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD
            STRING VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/pointsCollection", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsCollection")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD
            STRING VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"latitude\":0,\"longtitude\":0}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsCollection \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","merchantAppId":"<ADD STRING VALUE>","accountNumber":"<ADD STRING VALUE>","customerAppIdentity":"<ADD STRING VALUE>","eventCode":"<ADD STRING VALUE>","transactionID":"<ADD STRING VALUE>","terminalID":"<ADD STRING VALUE>","batchID":"<ADD STRING VALUE>","transactionAmount":0,"transactionDate":"<ADD STRING VALUE>","transactionDescription":"<ADD STRING VALUE>","currencyCode":"<ADD STRING VALUE>","latitude":0,"longtitude":0}}'
  /Loyalty/issueCoupon:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[IssueCouponRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[IssueCouponResponse]'
      operationId: Loyalty_issueCoupon
      summary: Issue Coupon
      description: "A registered customer can issue a coupon for a specific event and a specific policy. \r\nThis coupon can be used later for points redemption.\r\n\r\n\r\nSample request:\r\n\r\n    Post /issueCoupon\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"customerAppIdentity\": \"User1\",\r\n        \"MerchantAppId\": \"090807060504030201\",\r\n        \"accountNumber\": \"4799 9999 9999 9999\",\r\n        \"eventCode\": \"789123456\",\r\n        \"points\": 20,\r\n        \"transactionDate\": \"2018-02-13\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/issueCoupon");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"points\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/issueCoupon");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"points\":0,\"transactionDate\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/issueCoupon\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"merchantAppId\\\":\\\"<ADD STRING VALUE>\\\",\\\"accountNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"eventCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"points\\\":0,\\\"transactionDate\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"points\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/issueCoupon")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/issueCoupon',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    merchantAppId: '<ADD STRING VALUE>',
                    accountNumber: '<ADD STRING VALUE>',
                    customerAppIdentity: '<ADD STRING VALUE>',
                    eventCode: '<ADD STRING VALUE>',
                    points: 0,
                    transactionDate: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/issueCoupon",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"merchantAppId\":\"<ADD STRING VALUE>\",\"accountNumber\":\"<ADD STRING VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\",\"eventCode\":\"<ADD STRING VALUE>\",\"points\":0,\"transactionDate\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"points\":0,\"transactionDate\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/issueCoupon", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/issueCoupon")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"points\":0,\"transactionDate\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/issueCoupon \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","merchantAppId":"<ADD STRING VALUE>","accountNumber":"<ADD STRING VALUE>","customerAppIdentity":"<ADD STRING VALUE>","eventCode":"<ADD STRING VALUE>","points":0,"transactionDate":"<ADD STRING VALUE>"}}'
  /Loyalty/pointsRedemption:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[PointsRedemptionRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GenericResponse]'
      operationId: Loyalty_pointsRedemption
      summary: Points Redemption
      description: "Customer points redemption at a specific merchant and a specific event.\r\n\r\n\r\nSample request:\r\n\r\n    Post /pointsRedemption\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"customerAppIdentity\": \"User1\",\r\n        \"MerchantAppId\": \"090807060504030201\",\r\n        \"accountNumber\": \"4799 9999 9999 9999\",\r\n        \"eventCode\": \"789123456\",\r\n        \"couponCode\": \"VZ39MS\",\r\n        \"transactionID\": \"ba9468a7-7c1c-4830-ac49-5659a36a0286\",\r\n        \"terminalID\": \"ba9468a7-7c1c-4830-ac49-5659a36a0286\",\r\n        \"batchID\": \"ba9468a7-7c1c-4830-ac49-5659a36a0286\",\r\n        \"transactionAmount\": 500,\r\n        \"transactionDate\": \"2018-02-13\",\r\n        \"currencyCode\": \"EUR\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsRedemption");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"couponCode\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsRedemption");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"couponCode\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\"}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsRedemption\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"merchantAppId\\\":\\\"<ADD STRING VALUE>\\\",\\\"accountNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"couponCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"eventCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"transactionAmount\\\":0,\\\"transactionDate\\\":\\\"<ADD STRING VALUE>\\\",\\\"currencyCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"transactionDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"transactionID\\\":\\\"<ADD STRING VALUE>\\\",\\\"terminalID\\\":\\\"<ADD STRING VALUE>\\\",\\\"batchID\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"couponCode\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsRedemption")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsRedemption',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    merchantAppId: '<ADD STRING VALUE>',
                    accountNumber: '<ADD STRING VALUE>',
                    couponCode: '<ADD STRING VALUE>',
                    customerAppIdentity: '<ADD STRING VALUE>',
                    eventCode: '<ADD STRING VALUE>',
                    transactionAmount: 0,
                    transactionDate: '<ADD STRING VALUE>',
                    currencyCode: '<ADD STRING VALUE>',
                    transactionDescription: '<ADD STRING VALUE>',
                    transactionID: '<ADD STRING VALUE>',
                    terminalID: '<ADD STRING VALUE>',
                    batchID: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsRedemption",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"merchantAppId\":\"<ADD STRING VALUE>\",\"accountNumber\":\"<ADD STRING VALUE>\",\"couponCode\":\"<ADD STRING VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\",\"eventCode\":\"<ADD STRING VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING VALUE>\",\"currencyCode\":\"<ADD STRING VALUE>\",\"transactionDescription\":\"<ADD STRING VALUE>\",\"transactionID\":\"<ADD STRING VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"couponCode\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/pointsRedemption", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsRedemption")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"merchantAppId\":\"<ADD STRING
            VALUE>\",\"accountNumber\":\"<ADD STRING
            VALUE>\",\"couponCode\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"eventCode\":\"<ADD STRING
            VALUE>\",\"transactionAmount\":0,\"transactionDate\":\"<ADD STRING
            VALUE>\",\"currencyCode\":\"<ADD STRING
            VALUE>\",\"transactionDescription\":\"<ADD STRING
            VALUE>\",\"transactionID\":\"<ADD STRING
            VALUE>\",\"terminalID\":\"<ADD STRING VALUE>\",\"batchID\":\"<ADD
            STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/pointsRedemption \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","merchantAppId":"<ADD STRING VALUE>","accountNumber":"<ADD STRING VALUE>","couponCode":"<ADD STRING VALUE>","customerAppIdentity":"<ADD STRING VALUE>","eventCode":"<ADD STRING VALUE>","transactionAmount":0,"transactionDate":"<ADD STRING VALUE>","currencyCode":"<ADD STRING VALUE>","transactionDescription":"<ADD STRING VALUE>","transactionID":"<ADD STRING VALUE>","terminalID":"<ADD STRING VALUE>","batchID":"<ADD STRING VALUE>"}}'
  /Loyalty/getBalance:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[GetBalanceRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GetBalanceResponse]'
      operationId: Loyalty_getBalance
      summary: Get Balance
      description: "Get registered customer balance.\r\n\r\n\r\nSample request:\r\n\r\n    Post /getBalance\r\n    {\r\n        \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n        \"customerAppIdentity\": \"User1\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getBalance");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getBalance");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\"}}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getBalance\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getBalance")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getBalance',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    customerAppIdentity: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getBalance",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/getBalance", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getBalance")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getBalance \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","customerAppIdentity":"<ADD STRING VALUE>"}}'
  /Loyalty/getTransactions:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Loyalty
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/Request[GetTransactionsRequest]'
          in: body
          required: true
        - name: sandbox_id
          description: Sandbox ID
          in: header
          required: true
          type: string
          default: ''
        - name: application_id
          description: Application ID
          in: header
          required: true
          type: string
          default: ''
        - name: user_id
          description: User ID
          in: header
          required: true
          type: string
          default: ''
        - name: username
          description: User Name
          in: header
          required: true
          type: string
          default: ''
        - name: provider_id
          description: Provider ID
          in: header
          required: true
          type: string
          default: ''
        - name: provider
          description: Provider Name
          in: header
          required: true
          type: string
          default: ''
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[GetTransactionsResponse]'
      operationId: Loyalty_getTransactions
      summary: Get Transactions
      description: "Get registered customer transactions.\r\n\r\n\r\nSample request:\r\n\r\n    Post /getTransactions\r\n    {\r\n            \"loyaltySchemaId\": \"5d7d889f-4fac-4159-8096-5b05b03f8448\",\r\n            \"customerAppIdentity\": \"User1\",\r\n            \"dateFrom\": \"2017-01-07T15:39:22.092Z\",\r\n            \"dateTo\": \"2018-03-07T15:39:22.092Z\"\r\n    }"
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getTransactions");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "provider: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "provider_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "username: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "user_id: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "application_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "sandbox_id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getTransactions");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("provider", "SOME_STRING_VALUE");

            request.AddHeader("provider_id", "SOME_STRING_VALUE");

            request.AddHeader("username", "SOME_STRING_VALUE");

            request.AddHeader("user_id", "SOME_STRING_VALUE");

            request.AddHeader("application_id", "SOME_STRING_VALUE");

            request.AddHeader("sandbox_id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"header\":{\"ID\":\"<ADD
            STRING VALUE>\",\"application\":\"<ADD STRING
            VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD
            STRING VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getTransactions\"\n\n\tpayload := strings.NewReader(\"{\\\"header\\\":{\\\"ID\\\":\\\"<ADD STRING VALUE>\\\",\\\"application\\\":\\\"<ADD STRING VALUE>\\\",\\\"bank\\\":\\\"<ADD STRING VALUE>\\\",\\\"hostSession\\\":\\\"<ADD STRING VALUE>\\\",\\\"channel\\\":\\\"<ADD STRING VALUE>\\\",\\\"customer\\\":0,\\\"logitude\\\":0,\\\"latitude\\\":0,\\\"go4moreMember\\\":false,\\\"TAN\\\":\\\"<ADD STRING VALUE>\\\"},\\\"payload\\\":{\\\"loyaltySchemaId\\\":\\\"<ADD STRING VALUE>\\\",\\\"customerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"dateTo\\\":\\\"<ADD STRING VALUE>\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"sandbox_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"application_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"user_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"username\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider_id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"provider\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD
            STRING VALUE>\",\"bank\":\"<ADD STRING
            VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD
            STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getTransactions")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("sandbox_id", "SOME_STRING_VALUE")
              .addHeader("application_id", "SOME_STRING_VALUE")
              .addHeader("user_id", "SOME_STRING_VALUE")
              .addHeader("username", "SOME_STRING_VALUE")
              .addHeader("provider_id", "SOME_STRING_VALUE")
              .addHeader("provider", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getTransactions',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 provider: 'SOME_STRING_VALUE',
                 provider_id: 'SOME_STRING_VALUE',
                 username: 'SOME_STRING_VALUE',
                 user_id: 'SOME_STRING_VALUE',
                 application_id: 'SOME_STRING_VALUE',
                 sandbox_id: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { header:
                  { ID: '<ADD STRING VALUE>',
                    application: '<ADD STRING VALUE>',
                    bank: '<ADD STRING VALUE>',
                    hostSession: '<ADD STRING VALUE>',
                    channel: '<ADD STRING VALUE>',
                    customer: 0,
                    logitude: 0,
                    latitude: 0,
                    go4moreMember: false,
                    TAN: '<ADD STRING VALUE>' },
                 payload:
                  { loyaltySchemaId: '<ADD STRING VALUE>',
                    customerAppIdentity: '<ADD STRING VALUE>',
                    dateFrom: '<ADD STRING VALUE>',
                    dateTo: '<ADD STRING VALUE>' } },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getTransactions",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"header\":{\"ID\":\"<ADD STRING VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD STRING VALUE>\",\"hostSession\":\"<ADD STRING VALUE>\",\"channel\":\"<ADD STRING VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING VALUE>\",\"customerAppIdentity\":\"<ADD STRING VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD STRING VALUE>\"}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "application_id: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "provider: SOME_STRING_VALUE",
                "provider_id: SOME_STRING_VALUE",
                "sandbox_id: SOME_STRING_VALUE",
                "user_id: SOME_STRING_VALUE",
                "username: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'sandbox_id': "SOME_STRING_VALUE",
                'application_id': "SOME_STRING_VALUE",
                'user_id': "SOME_STRING_VALUE",
                'username': "SOME_STRING_VALUE",
                'provider_id': "SOME_STRING_VALUE",
                'provider': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/loyalty/headers/v1.2/Loyalty/getTransactions", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getTransactions")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["sandbox_id"] = 'SOME_STRING_VALUE'

            request["application_id"] = 'SOME_STRING_VALUE'

            request["user_id"] = 'SOME_STRING_VALUE'

            request["username"] = 'SOME_STRING_VALUE'

            request["provider_id"] = 'SOME_STRING_VALUE'

            request["provider"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"header\":{\"ID\":\"<ADD STRING
            VALUE>\",\"application\":\"<ADD STRING VALUE>\",\"bank\":\"<ADD
            STRING VALUE>\",\"hostSession\":\"<ADD STRING
            VALUE>\",\"channel\":\"<ADD STRING
            VALUE>\",\"customer\":0,\"logitude\":0,\"latitude\":0,\"go4moreMember\":false,\"TAN\":\"<ADD
            STRING VALUE>\"},\"payload\":{\"loyaltySchemaId\":\"<ADD STRING
            VALUE>\",\"customerAppIdentity\":\"<ADD STRING
            VALUE>\",\"dateFrom\":\"<ADD STRING VALUE>\",\"dateTo\":\"<ADD
            STRING VALUE>\"}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/Loyalty/getTransactions \
              --header 'accept: application/json' \
              --header 'application_id: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'provider: SOME_STRING_VALUE' \
              --header 'provider_id: SOME_STRING_VALUE' \
              --header 'sandbox_id: SOME_STRING_VALUE' \
              --header 'user_id: SOME_STRING_VALUE' \
              --header 'username: SOME_STRING_VALUE' \
              --data '{"header":{"ID":"<ADD STRING VALUE>","application":"<ADD STRING VALUE>","bank":"<ADD STRING VALUE>","hostSession":"<ADD STRING VALUE>","channel":"<ADD STRING VALUE>","customer":0,"logitude":0,"latitude":0,"go4moreMember":false,"TAN":"<ADD STRING VALUE>"},"payload":{"loyaltySchemaId":"<ADD STRING VALUE>","customerAppIdentity":"<ADD STRING VALUE>","dateFrom":"<ADD STRING VALUE>","dateTo":"<ADD STRING VALUE>"}}'
  /sandbox:
    post:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Sandbox
      parameters:
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/SandboxRequest'
          in: body
          required: true
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Response[SandboxDataModel]'
      operationId: Sandbox_CreateSandbox
      summary: Create Sandbox
      description: >-
        Creates sandbox with unique sandbox id. This call can also be used to
        create users, customers, customer accounts, merchants, events, policies
        etc.
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"sandboxId\":\"<ADD
            STRING VALUE>\"}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"sandboxId\":\"<ADD
            STRING VALUE>\"}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox\"\n\n\tpayload := strings.NewReader(\"{\\\"sandboxId\\\":\\\"<ADD STRING VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"sandboxId\":\"<ADD STRING VALUE>\"}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url: 'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body: { sandboxId: '<ADD STRING VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"sandboxId\":\"<ADD STRING VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"sandboxId\":\"<ADD STRING VALUE>\"}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST", "/sandbox/loyalty/headers/v1.2/sandbox",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"sandboxId\":\"<ADD STRING VALUE>\"}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox \
              --header 'accept: application/json' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --data '{"sandboxId":"<ADD STRING VALUE>"}'
  '/sandbox/{sandbox_id}':
    get:
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Sandbox
      parameters:
        - name: sandbox_id
          description: Sandbox ID
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[SandboxDataModel]'
      operationId: Sandbox_ExportSandbox
      summary: Export Sandbox
      description: Export Sandbox data specified by sandbox id.
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D")
              .get()
              .addHeader("content-type", "application/json")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = 'application/json'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json'
    put:
      consumes:
        - application/json
        - text/json
        - application/xml
        - text/xml
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Sandbox
      parameters:
        - name: sandbox_id
          description: Sandbox ID
          in: path
          required: true
          type: string
        - name: request
          description: ''
          schema:
            $ref: '#/definitions/SandboxDataModel'
          in: body
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response[SandboxDataModel]'
      operationId: Sandbox_ImportSandbox
      summary: Import Sandbox
      description: Imports sandbox data specified by sandbox id.
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"SandboxID\":\"<ADD
            STRING VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING
            VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD
            STRING VALUE>\",\"Provider\":\"<ADD STRING
            VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\"}],\"LoyaltySchemas\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Name\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Merchants\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"MerchantAppId\":\"<ADD STRING
            VALUE>\",\"MerchantName\":\"<ADD STRING
            VALUE>\",\"MerchantCategoryId\":\"<ADD STRING
            VALUE>\",\"Longtitude\":0,\"Latitude\":0,\"Address\":\"<ADD STRING
            VALUE>\",\"Area\":\"<ADD STRING VALUE>\",\"Zipcode\":\"<ADD STRING
            VALUE>\",\"MerchantData\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"DateFrom\":\"<ADD STRING VALUE>\",\"DateTo\":\"<ADD
            STRING VALUE>\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"MerchantRelationships\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"FranchisorMerchantId\":\"<ADD STRING
            VALUE>\",\"FranchiseeMerchantId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Events\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING
            VALUE>\",\"EventDescription\":\"<ADD STRING
            VALUE>\",\"Channel\":\"Pos\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Policies\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Alias\":\"<ADD STRING VALUE>\",\"MerchantAppId\":\"<ADD
            STRING
            VALUE>\",\"SupportedTransactionType\":\"Collection\",\"CalculateToClass\":\"<ADD
            STRING VALUE>\",\"PolicyData\":\"<ADD STRING
            VALUE>\",\"TimeFrom\":\"<ADD STRING VALUE>\",\"TimeTo\":\"<ADD
            STRING VALUE>\",\"DateFrom\":\"<ADD STRING
            VALUE>\",\"DateTo\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"IsActive\":false}]}],\"MerchantCategories\":[{\"Id\":\"<ADD
            STRING VALUE>\",\"MerchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"Description\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Customers\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\",\"FirstName\":\"<ADD STRING VALUE>\",\"Surname\":\"<ADD
            STRING VALUE>\",\"BirthdayYear\":\"<ADD STRING
            VALUE>\",\"PhoneNumber\":\"<ADD STRING VALUE>\",\"Email\":\"<ADD
            STRING VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"CustomerPoints\":{\"Id\":\"<ADD STRING
            VALUE>\",\"Points\":0,\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"},\"CustomerAccounts\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountType\":\"Account\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"AccountDetails\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Transactions\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING VALUE>\",\"MerchantId\":\"<ADD
            STRING VALUE>\",\"TransactionDate\":\"<ADD STRING
            VALUE>\",\"TransactionType\":\"Collection\",\"CouponCode\":\"<ADD
            STRING
            VALUE>\",\"BaselineAmount\":0,\"Points\":0,\"Status\":\"Completed\",\"TransactionData\":\"<ADD
            STRING VALUE>\",\"CalculateToClass\":\"<ADD STRING
            VALUE>\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD
            STRING VALUE>\",\"TrnFromPosId\":\"<ADD STRING
            VALUE>\",\"BatchFromPosId\":\"<ADD STRING
            VALUE>\",\"TerminalFromPosId\":\"<ADD STRING
            VALUE>\",\"TransactionDescription\":\"<ADD STRING VALUE>\"}]}]}]}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"SandboxID\":\"<ADD
            STRING VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING
            VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD
            STRING VALUE>\",\"Provider\":\"<ADD STRING
            VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\"}],\"LoyaltySchemas\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Name\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Merchants\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"MerchantAppId\":\"<ADD STRING
            VALUE>\",\"MerchantName\":\"<ADD STRING
            VALUE>\",\"MerchantCategoryId\":\"<ADD STRING
            VALUE>\",\"Longtitude\":0,\"Latitude\":0,\"Address\":\"<ADD STRING
            VALUE>\",\"Area\":\"<ADD STRING VALUE>\",\"Zipcode\":\"<ADD STRING
            VALUE>\",\"MerchantData\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"DateFrom\":\"<ADD STRING VALUE>\",\"DateTo\":\"<ADD
            STRING VALUE>\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"MerchantRelationships\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"FranchisorMerchantId\":\"<ADD STRING
            VALUE>\",\"FranchiseeMerchantId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Events\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING
            VALUE>\",\"EventDescription\":\"<ADD STRING
            VALUE>\",\"Channel\":\"Pos\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Policies\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Alias\":\"<ADD STRING VALUE>\",\"MerchantAppId\":\"<ADD
            STRING
            VALUE>\",\"SupportedTransactionType\":\"Collection\",\"CalculateToClass\":\"<ADD
            STRING VALUE>\",\"PolicyData\":\"<ADD STRING
            VALUE>\",\"TimeFrom\":\"<ADD STRING VALUE>\",\"TimeTo\":\"<ADD
            STRING VALUE>\",\"DateFrom\":\"<ADD STRING
            VALUE>\",\"DateTo\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"IsActive\":false}]}],\"MerchantCategories\":[{\"Id\":\"<ADD
            STRING VALUE>\",\"MerchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"Description\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Customers\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\",\"FirstName\":\"<ADD STRING VALUE>\",\"Surname\":\"<ADD
            STRING VALUE>\",\"BirthdayYear\":\"<ADD STRING
            VALUE>\",\"PhoneNumber\":\"<ADD STRING VALUE>\",\"Email\":\"<ADD
            STRING VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"CustomerPoints\":{\"Id\":\"<ADD STRING
            VALUE>\",\"Points\":0,\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"},\"CustomerAccounts\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountType\":\"Account\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"AccountDetails\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Transactions\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING VALUE>\",\"MerchantId\":\"<ADD
            STRING VALUE>\",\"TransactionDate\":\"<ADD STRING
            VALUE>\",\"TransactionType\":\"Collection\",\"CouponCode\":\"<ADD
            STRING
            VALUE>\",\"BaselineAmount\":0,\"Points\":0,\"Status\":\"Completed\",\"TransactionData\":\"<ADD
            STRING VALUE>\",\"CalculateToClass\":\"<ADD STRING
            VALUE>\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD
            STRING VALUE>\",\"TrnFromPosId\":\"<ADD STRING
            VALUE>\",\"BatchFromPosId\":\"<ADD STRING
            VALUE>\",\"TerminalFromPosId\":\"<ADD STRING
            VALUE>\",\"TransactionDescription\":\"<ADD STRING VALUE>\"}]}]}]}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"SandboxID\\\":\\\"<ADD STRING VALUE>\\\",\\\"Users\\\":[{\\\"UserId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Username\\\":\\\"<ADD STRING VALUE>\\\",\\\"ProviderId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Provider\\\":\\\"<ADD STRING VALUE>\\\",\\\"CustomerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\"}],\\\"LoyaltySchemas\\\":[{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"Name\\\":\\\"<ADD STRING VALUE>\\\",\\\"Alias\\\":\\\"<ADD STRING VALUE>\\\",\\\"Status\\\":\\\"Active\\\",\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"Merchants\\\":[{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"MerchantAppId\\\":\\\"<ADD STRING VALUE>\\\",\\\"MerchantName\\\":\\\"<ADD STRING VALUE>\\\",\\\"MerchantCategoryId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Longtitude\\\":0,\\\"Latitude\\\":0,\\\"Address\\\":\\\"<ADD STRING VALUE>\\\",\\\"Area\\\":\\\"<ADD STRING VALUE>\\\",\\\"Zipcode\\\":\\\"<ADD STRING VALUE>\\\",\\\"MerchantData\\\":\\\"<ADD STRING VALUE>\\\",\\\"calculateToClass\\\":\\\"<ADD STRING VALUE>\\\",\\\"DateFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"DateTo\\\":\\\"<ADD STRING VALUE>\\\",\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\"}],\\\"MerchantRelationships\\\":[{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"FranchisorMerchantId\\\":\\\"<ADD STRING VALUE>\\\",\\\"FranchiseeMerchantId\\\":\\\"<ADD STRING VALUE>\\\",\\\"Status\\\":\\\"Active\\\",\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\"}],\\\"Events\\\":[{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"EventCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"EventDescription\\\":\\\"<ADD STRING VALUE>\\\",\\\"Channel\\\":\\\"Pos\\\",\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"Policies\\\":[{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"Alias\\\":\\\"<ADD STRING VALUE>\\\",\\\"MerchantAppId\\\":\\\"<ADD STRING VALUE>\\\",\\\"SupportedTransactionType\\\":\\\"Collection\\\",\\\"CalculateToClass\\\":\\\"<ADD STRING VALUE>\\\",\\\"PolicyData\\\":\\\"<ADD STRING VALUE>\\\",\\\"TimeFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"TimeTo\\\":\\\"<ADD STRING VALUE>\\\",\\\"DateFrom\\\":\\\"<ADD STRING VALUE>\\\",\\\"DateTo\\\":\\\"<ADD STRING VALUE>\\\",\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"IsActive\\\":false}]}],\\\"MerchantCategories\\\":[{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"MerchantCategoryCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"Description\\\":\\\"<ADD STRING VALUE>\\\",\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\"}],\\\"Customers\\\":[{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"CustomerAppIdentity\\\":\\\"<ADD STRING VALUE>\\\",\\\"FirstName\\\":\\\"<ADD STRING VALUE>\\\",\\\"Surname\\\":\\\"<ADD STRING VALUE>\\\",\\\"BirthdayYear\\\":\\\"<ADD STRING VALUE>\\\",\\\"PhoneNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"Email\\\":\\\"<ADD STRING VALUE>\\\",\\\"Status\\\":\\\"Active\\\",\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"CustomerPoints\\\":{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"Points\\\":0,\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\"},\\\"CustomerAccounts\\\":[{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"AccountType\\\":\\\"Account\\\",\\\"AccountNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"AccountDetails\\\":\\\"<ADD STRING VALUE>\\\",\\\"calculateToClass\\\":\\\"<ADD STRING VALUE>\\\",\\\"Status\\\":\\\"Active\\\",\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\"}],\\\"Transactions\\\":[{\\\"Id\\\":\\\"<ADD STRING VALUE>\\\",\\\"AccountNumber\\\":\\\"<ADD STRING VALUE>\\\",\\\"EventCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"MerchantId\\\":\\\"<ADD STRING VALUE>\\\",\\\"TransactionDate\\\":\\\"<ADD STRING VALUE>\\\",\\\"TransactionType\\\":\\\"Collection\\\",\\\"CouponCode\\\":\\\"<ADD STRING VALUE>\\\",\\\"BaselineAmount\\\":0,\\\"Points\\\":0,\\\"Status\\\":\\\"Completed\\\",\\\"TransactionData\\\":\\\"<ADD STRING VALUE>\\\",\\\"CalculateToClass\\\":\\\"<ADD STRING VALUE>\\\",\\\"CreatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"UpdatedOn\\\":\\\"<ADD STRING VALUE>\\\",\\\"TrnFromPosId\\\":\\\"<ADD STRING VALUE>\\\",\\\"BatchFromPosId\\\":\\\"<ADD STRING VALUE>\\\",\\\"TerminalFromPosId\\\":\\\"<ADD STRING VALUE>\\\",\\\"TransactionDescription\\\":\\\"<ADD STRING VALUE>\\\"}]}]}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"SandboxID\":\"<ADD STRING VALUE>\",\"Users\":[{\"UserId\":\"<ADD
            STRING VALUE>\",\"Username\":\"<ADD STRING
            VALUE>\",\"ProviderId\":\"<ADD STRING VALUE>\",\"Provider\":\"<ADD
            STRING VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\"}],\"LoyaltySchemas\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Name\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Merchants\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"MerchantAppId\":\"<ADD STRING
            VALUE>\",\"MerchantName\":\"<ADD STRING
            VALUE>\",\"MerchantCategoryId\":\"<ADD STRING
            VALUE>\",\"Longtitude\":0,\"Latitude\":0,\"Address\":\"<ADD STRING
            VALUE>\",\"Area\":\"<ADD STRING VALUE>\",\"Zipcode\":\"<ADD STRING
            VALUE>\",\"MerchantData\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"DateFrom\":\"<ADD STRING VALUE>\",\"DateTo\":\"<ADD
            STRING VALUE>\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"MerchantRelationships\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"FranchisorMerchantId\":\"<ADD STRING
            VALUE>\",\"FranchiseeMerchantId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Events\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING
            VALUE>\",\"EventDescription\":\"<ADD STRING
            VALUE>\",\"Channel\":\"Pos\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Policies\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Alias\":\"<ADD STRING VALUE>\",\"MerchantAppId\":\"<ADD
            STRING
            VALUE>\",\"SupportedTransactionType\":\"Collection\",\"CalculateToClass\":\"<ADD
            STRING VALUE>\",\"PolicyData\":\"<ADD STRING
            VALUE>\",\"TimeFrom\":\"<ADD STRING VALUE>\",\"TimeTo\":\"<ADD
            STRING VALUE>\",\"DateFrom\":\"<ADD STRING
            VALUE>\",\"DateTo\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"IsActive\":false}]}],\"MerchantCategories\":[{\"Id\":\"<ADD
            STRING VALUE>\",\"MerchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"Description\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Customers\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\",\"FirstName\":\"<ADD STRING VALUE>\",\"Surname\":\"<ADD
            STRING VALUE>\",\"BirthdayYear\":\"<ADD STRING
            VALUE>\",\"PhoneNumber\":\"<ADD STRING VALUE>\",\"Email\":\"<ADD
            STRING VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"CustomerPoints\":{\"Id\":\"<ADD STRING
            VALUE>\",\"Points\":0,\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"},\"CustomerAccounts\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountType\":\"Account\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"AccountDetails\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Transactions\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING VALUE>\",\"MerchantId\":\"<ADD
            STRING VALUE>\",\"TransactionDate\":\"<ADD STRING
            VALUE>\",\"TransactionType\":\"Collection\",\"CouponCode\":\"<ADD
            STRING
            VALUE>\",\"BaselineAmount\":0,\"Points\":0,\"Status\":\"Completed\",\"TransactionData\":\"<ADD
            STRING VALUE>\",\"CalculateToClass\":\"<ADD STRING
            VALUE>\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD
            STRING VALUE>\",\"TrnFromPosId\":\"<ADD STRING
            VALUE>\",\"BatchFromPosId\":\"<ADD STRING
            VALUE>\",\"TerminalFromPosId\":\"<ADD STRING
            VALUE>\",\"TransactionDescription\":\"<ADD STRING VALUE>\"}]}]}]}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D")
              .put(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { SandboxID: '<ADD STRING VALUE>',
                 Users:
                  [ { UserId: '<ADD STRING VALUE>',
                      Username: '<ADD STRING VALUE>',
                      ProviderId: '<ADD STRING VALUE>',
                      Provider: '<ADD STRING VALUE>',
                      CustomerAppIdentity: '<ADD STRING VALUE>' } ],
                 LoyaltySchemas:
                  [ { Id: '<ADD STRING VALUE>',
                      Name: '<ADD STRING VALUE>',
                      Alias: '<ADD STRING VALUE>',
                      Status: 'Active',
                      CreatedOn: '<ADD STRING VALUE>',
                      UpdatedOn: '<ADD STRING VALUE>',
                      Merchants:
                       [ { Id: '<ADD STRING VALUE>',
                           MerchantAppId: '<ADD STRING VALUE>',
                           MerchantName: '<ADD STRING VALUE>',
                           MerchantCategoryId: '<ADD STRING VALUE>',
                           Longtitude: 0,
                           Latitude: 0,
                           Address: '<ADD STRING VALUE>',
                           Area: '<ADD STRING VALUE>',
                           Zipcode: '<ADD STRING VALUE>',
                           MerchantData: '<ADD STRING VALUE>',
                           calculateToClass: '<ADD STRING VALUE>',
                           DateFrom: '<ADD STRING VALUE>',
                           DateTo: '<ADD STRING VALUE>',
                           CreatedOn: '<ADD STRING VALUE>',
                           UpdatedOn: '<ADD STRING VALUE>' } ],
                      MerchantRelationships:
                       [ { Id: '<ADD STRING VALUE>',
                           FranchisorMerchantId: '<ADD STRING VALUE>',
                           FranchiseeMerchantId: '<ADD STRING VALUE>',
                           Status: 'Active',
                           CreatedOn: '<ADD STRING VALUE>',
                           UpdatedOn: '<ADD STRING VALUE>' } ],
                      Events:
                       [ { Id: '<ADD STRING VALUE>',
                           EventCode: '<ADD STRING VALUE>',
                           EventDescription: '<ADD STRING VALUE>',
                           Channel: 'Pos',
                           CreatedOn: '<ADD STRING VALUE>',
                           UpdatedOn: '<ADD STRING VALUE>',
                           Policies:
                            [ { Id: '<ADD STRING VALUE>',
                                Alias: '<ADD STRING VALUE>',
                                MerchantAppId: '<ADD STRING VALUE>',
                                SupportedTransactionType: 'Collection',
                                CalculateToClass: '<ADD STRING VALUE>',
                                PolicyData: '<ADD STRING VALUE>',
                                TimeFrom: '<ADD STRING VALUE>',
                                TimeTo: '<ADD STRING VALUE>',
                                DateFrom: '<ADD STRING VALUE>',
                                DateTo: '<ADD STRING VALUE>',
                                CreatedOn: '<ADD STRING VALUE>',
                                UpdatedOn: '<ADD STRING VALUE>',
                                IsActive: false } ] } ],
                      MerchantCategories:
                       [ { Id: '<ADD STRING VALUE>',
                           MerchantCategoryCode: '<ADD STRING VALUE>',
                           Description: '<ADD STRING VALUE>',
                           CreatedOn: '<ADD STRING VALUE>',
                           UpdatedOn: '<ADD STRING VALUE>' } ],
                      Customers:
                       [ { Id: '<ADD STRING VALUE>',
                           CustomerAppIdentity: '<ADD STRING VALUE>',
                           FirstName: '<ADD STRING VALUE>',
                           Surname: '<ADD STRING VALUE>',
                           BirthdayYear: '<ADD STRING VALUE>',
                           PhoneNumber: '<ADD STRING VALUE>',
                           Email: '<ADD STRING VALUE>',
                           Status: 'Active',
                           CreatedOn: '<ADD STRING VALUE>',
                           UpdatedOn: '<ADD STRING VALUE>',
                           CustomerPoints:
                            { Id: '<ADD STRING VALUE>',
                              Points: 0,
                              CreatedOn: '<ADD STRING VALUE>',
                              UpdatedOn: '<ADD STRING VALUE>' },
                           CustomerAccounts:
                            [ { Id: '<ADD STRING VALUE>',
                                AccountType: 'Account',
                                AccountNumber: '<ADD STRING VALUE>',
                                AccountDetails: '<ADD STRING VALUE>',
                                calculateToClass: '<ADD STRING VALUE>',
                                Status: 'Active',
                                CreatedOn: '<ADD STRING VALUE>',
                                UpdatedOn: '<ADD STRING VALUE>' } ],
                           Transactions:
                            [ { Id: '<ADD STRING VALUE>',
                                AccountNumber: '<ADD STRING VALUE>',
                                EventCode: '<ADD STRING VALUE>',
                                MerchantId: '<ADD STRING VALUE>',
                                TransactionDate: '<ADD STRING VALUE>',
                                TransactionType: 'Collection',
                                CouponCode: '<ADD STRING VALUE>',
                                BaselineAmount: 0,
                                Points: 0,
                                Status: 'Completed',
                                TransactionData: '<ADD STRING VALUE>',
                                CalculateToClass: '<ADD STRING VALUE>',
                                CreatedOn: '<ADD STRING VALUE>',
                                UpdatedOn: '<ADD STRING VALUE>',
                                TrnFromPosId: '<ADD STRING VALUE>',
                                BatchFromPosId: '<ADD STRING VALUE>',
                                TerminalFromPosId: '<ADD STRING VALUE>',
                                TransactionDescription: '<ADD STRING VALUE>' } ] } ] } ] },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"SandboxID\":\"<ADD STRING VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD STRING VALUE>\",\"Provider\":\"<ADD STRING VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING VALUE>\"}],\"LoyaltySchemas\":[{\"Id\":\"<ADD STRING VALUE>\",\"Name\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\",\"Merchants\":[{\"Id\":\"<ADD STRING VALUE>\",\"MerchantAppId\":\"<ADD STRING VALUE>\",\"MerchantName\":\"<ADD STRING VALUE>\",\"MerchantCategoryId\":\"<ADD STRING VALUE>\",\"Longtitude\":0,\"Latitude\":0,\"Address\":\"<ADD STRING VALUE>\",\"Area\":\"<ADD STRING VALUE>\",\"Zipcode\":\"<ADD STRING VALUE>\",\"MerchantData\":\"<ADD STRING VALUE>\",\"calculateToClass\":\"<ADD STRING VALUE>\",\"DateFrom\":\"<ADD STRING VALUE>\",\"DateTo\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\"}],\"MerchantRelationships\":[{\"Id\":\"<ADD STRING VALUE>\",\"FranchisorMerchantId\":\"<ADD STRING VALUE>\",\"FranchiseeMerchantId\":\"<ADD STRING VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\"}],\"Events\":[{\"Id\":\"<ADD STRING VALUE>\",\"EventCode\":\"<ADD STRING VALUE>\",\"EventDescription\":\"<ADD STRING VALUE>\",\"Channel\":\"Pos\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\",\"Policies\":[{\"Id\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING VALUE>\",\"MerchantAppId\":\"<ADD STRING VALUE>\",\"SupportedTransactionType\":\"Collection\",\"CalculateToClass\":\"<ADD STRING VALUE>\",\"PolicyData\":\"<ADD STRING VALUE>\",\"TimeFrom\":\"<ADD STRING VALUE>\",\"TimeTo\":\"<ADD STRING VALUE>\",\"DateFrom\":\"<ADD STRING VALUE>\",\"DateTo\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\",\"IsActive\":false}]}],\"MerchantCategories\":[{\"Id\":\"<ADD STRING VALUE>\",\"MerchantCategoryCode\":\"<ADD STRING VALUE>\",\"Description\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\"}],\"Customers\":[{\"Id\":\"<ADD STRING VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING VALUE>\",\"FirstName\":\"<ADD STRING VALUE>\",\"Surname\":\"<ADD STRING VALUE>\",\"BirthdayYear\":\"<ADD STRING VALUE>\",\"PhoneNumber\":\"<ADD STRING VALUE>\",\"Email\":\"<ADD STRING VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\",\"CustomerPoints\":{\"Id\":\"<ADD STRING VALUE>\",\"Points\":0,\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\"},\"CustomerAccounts\":[{\"Id\":\"<ADD STRING VALUE>\",\"AccountType\":\"Account\",\"AccountNumber\":\"<ADD STRING VALUE>\",\"AccountDetails\":\"<ADD STRING VALUE>\",\"calculateToClass\":\"<ADD STRING VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\"}],\"Transactions\":[{\"Id\":\"<ADD STRING VALUE>\",\"AccountNumber\":\"<ADD STRING VALUE>\",\"EventCode\":\"<ADD STRING VALUE>\",\"MerchantId\":\"<ADD STRING VALUE>\",\"TransactionDate\":\"<ADD STRING VALUE>\",\"TransactionType\":\"Collection\",\"CouponCode\":\"<ADD STRING VALUE>\",\"BaselineAmount\":0,\"Points\":0,\"Status\":\"Completed\",\"TransactionData\":\"<ADD STRING VALUE>\",\"CalculateToClass\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING VALUE>\",\"TrnFromPosId\":\"<ADD STRING VALUE>\",\"BatchFromPosId\":\"<ADD STRING VALUE>\",\"TerminalFromPosId\":\"<ADD STRING VALUE>\",\"TransactionDescription\":\"<ADD STRING VALUE>\"}]}]}]}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"SandboxID\":\"<ADD STRING
            VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING
            VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD
            STRING VALUE>\",\"Provider\":\"<ADD STRING
            VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\"}],\"LoyaltySchemas\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Name\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Merchants\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"MerchantAppId\":\"<ADD STRING
            VALUE>\",\"MerchantName\":\"<ADD STRING
            VALUE>\",\"MerchantCategoryId\":\"<ADD STRING
            VALUE>\",\"Longtitude\":0,\"Latitude\":0,\"Address\":\"<ADD STRING
            VALUE>\",\"Area\":\"<ADD STRING VALUE>\",\"Zipcode\":\"<ADD STRING
            VALUE>\",\"MerchantData\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"DateFrom\":\"<ADD STRING VALUE>\",\"DateTo\":\"<ADD
            STRING VALUE>\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"MerchantRelationships\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"FranchisorMerchantId\":\"<ADD STRING
            VALUE>\",\"FranchiseeMerchantId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Events\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING
            VALUE>\",\"EventDescription\":\"<ADD STRING
            VALUE>\",\"Channel\":\"Pos\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Policies\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Alias\":\"<ADD STRING VALUE>\",\"MerchantAppId\":\"<ADD
            STRING
            VALUE>\",\"SupportedTransactionType\":\"Collection\",\"CalculateToClass\":\"<ADD
            STRING VALUE>\",\"PolicyData\":\"<ADD STRING
            VALUE>\",\"TimeFrom\":\"<ADD STRING VALUE>\",\"TimeTo\":\"<ADD
            STRING VALUE>\",\"DateFrom\":\"<ADD STRING
            VALUE>\",\"DateTo\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"IsActive\":false}]}],\"MerchantCategories\":[{\"Id\":\"<ADD
            STRING VALUE>\",\"MerchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"Description\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Customers\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\",\"FirstName\":\"<ADD STRING VALUE>\",\"Surname\":\"<ADD
            STRING VALUE>\",\"BirthdayYear\":\"<ADD STRING
            VALUE>\",\"PhoneNumber\":\"<ADD STRING VALUE>\",\"Email\":\"<ADD
            STRING VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"CustomerPoints\":{\"Id\":\"<ADD STRING
            VALUE>\",\"Points\":0,\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"},\"CustomerAccounts\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountType\":\"Account\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"AccountDetails\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Transactions\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING VALUE>\",\"MerchantId\":\"<ADD
            STRING VALUE>\",\"TransactionDate\":\"<ADD STRING
            VALUE>\",\"TransactionType\":\"Collection\",\"CouponCode\":\"<ADD
            STRING
            VALUE>\",\"BaselineAmount\":0,\"Points\":0,\"Status\":\"Completed\",\"TransactionData\":\"<ADD
            STRING VALUE>\",\"CalculateToClass\":\"<ADD STRING
            VALUE>\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD
            STRING VALUE>\",\"TrnFromPosId\":\"<ADD STRING
            VALUE>\",\"BatchFromPosId\":\"<ADD STRING
            VALUE>\",\"TerminalFromPosId\":\"<ADD STRING
            VALUE>\",\"TransactionDescription\":\"<ADD STRING VALUE>\"}]}]}]}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("PUT",
            "/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D", payload,
            headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"SandboxID\":\"<ADD STRING
            VALUE>\",\"Users\":[{\"UserId\":\"<ADD STRING
            VALUE>\",\"Username\":\"<ADD STRING VALUE>\",\"ProviderId\":\"<ADD
            STRING VALUE>\",\"Provider\":\"<ADD STRING
            VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\"}],\"LoyaltySchemas\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Name\":\"<ADD STRING VALUE>\",\"Alias\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Merchants\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"MerchantAppId\":\"<ADD STRING
            VALUE>\",\"MerchantName\":\"<ADD STRING
            VALUE>\",\"MerchantCategoryId\":\"<ADD STRING
            VALUE>\",\"Longtitude\":0,\"Latitude\":0,\"Address\":\"<ADD STRING
            VALUE>\",\"Area\":\"<ADD STRING VALUE>\",\"Zipcode\":\"<ADD STRING
            VALUE>\",\"MerchantData\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"DateFrom\":\"<ADD STRING VALUE>\",\"DateTo\":\"<ADD
            STRING VALUE>\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"MerchantRelationships\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"FranchisorMerchantId\":\"<ADD STRING
            VALUE>\",\"FranchiseeMerchantId\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Events\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING
            VALUE>\",\"EventDescription\":\"<ADD STRING
            VALUE>\",\"Channel\":\"Pos\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"Policies\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"Alias\":\"<ADD STRING VALUE>\",\"MerchantAppId\":\"<ADD
            STRING
            VALUE>\",\"SupportedTransactionType\":\"Collection\",\"CalculateToClass\":\"<ADD
            STRING VALUE>\",\"PolicyData\":\"<ADD STRING
            VALUE>\",\"TimeFrom\":\"<ADD STRING VALUE>\",\"TimeTo\":\"<ADD
            STRING VALUE>\",\"DateFrom\":\"<ADD STRING
            VALUE>\",\"DateTo\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"IsActive\":false}]}],\"MerchantCategories\":[{\"Id\":\"<ADD
            STRING VALUE>\",\"MerchantCategoryCode\":\"<ADD STRING
            VALUE>\",\"Description\":\"<ADD STRING VALUE>\",\"CreatedOn\":\"<ADD
            STRING VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Customers\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"CustomerAppIdentity\":\"<ADD STRING
            VALUE>\",\"FirstName\":\"<ADD STRING VALUE>\",\"Surname\":\"<ADD
            STRING VALUE>\",\"BirthdayYear\":\"<ADD STRING
            VALUE>\",\"PhoneNumber\":\"<ADD STRING VALUE>\",\"Email\":\"<ADD
            STRING VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\",\"CustomerPoints\":{\"Id\":\"<ADD STRING
            VALUE>\",\"Points\":0,\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"},\"CustomerAccounts\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountType\":\"Account\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"AccountDetails\":\"<ADD STRING
            VALUE>\",\"calculateToClass\":\"<ADD STRING
            VALUE>\",\"Status\":\"Active\",\"CreatedOn\":\"<ADD STRING
            VALUE>\",\"UpdatedOn\":\"<ADD STRING
            VALUE>\"}],\"Transactions\":[{\"Id\":\"<ADD STRING
            VALUE>\",\"AccountNumber\":\"<ADD STRING
            VALUE>\",\"EventCode\":\"<ADD STRING VALUE>\",\"MerchantId\":\"<ADD
            STRING VALUE>\",\"TransactionDate\":\"<ADD STRING
            VALUE>\",\"TransactionType\":\"Collection\",\"CouponCode\":\"<ADD
            STRING
            VALUE>\",\"BaselineAmount\":0,\"Points\":0,\"Status\":\"Completed\",\"TransactionData\":\"<ADD
            STRING VALUE>\",\"CalculateToClass\":\"<ADD STRING
            VALUE>\",\"CreatedOn\":\"<ADD STRING VALUE>\",\"UpdatedOn\":\"<ADD
            STRING VALUE>\",\"TrnFromPosId\":\"<ADD STRING
            VALUE>\",\"BatchFromPosId\":\"<ADD STRING
            VALUE>\",\"TerminalFromPosId\":\"<ADD STRING
            VALUE>\",\"TransactionDescription\":\"<ADD STRING VALUE>\"}]}]}]}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D \
              --header 'accept: application/json' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --data '{"SandboxID":"<ADD STRING VALUE>","Users":[{"UserId":"<ADD STRING VALUE>","Username":"<ADD STRING VALUE>","ProviderId":"<ADD STRING VALUE>","Provider":"<ADD STRING VALUE>","CustomerAppIdentity":"<ADD STRING VALUE>"}],"LoyaltySchemas":[{"Id":"<ADD STRING VALUE>","Name":"<ADD STRING VALUE>","Alias":"<ADD STRING VALUE>","Status":"Active","CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>","Merchants":[{"Id":"<ADD STRING VALUE>","MerchantAppId":"<ADD STRING VALUE>","MerchantName":"<ADD STRING VALUE>","MerchantCategoryId":"<ADD STRING VALUE>","Longtitude":0,"Latitude":0,"Address":"<ADD STRING VALUE>","Area":"<ADD STRING VALUE>","Zipcode":"<ADD STRING VALUE>","MerchantData":"<ADD STRING VALUE>","calculateToClass":"<ADD STRING VALUE>","DateFrom":"<ADD STRING VALUE>","DateTo":"<ADD STRING VALUE>","CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>"}],"MerchantRelationships":[{"Id":"<ADD STRING VALUE>","FranchisorMerchantId":"<ADD STRING VALUE>","FranchiseeMerchantId":"<ADD STRING VALUE>","Status":"Active","CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>"}],"Events":[{"Id":"<ADD STRING VALUE>","EventCode":"<ADD STRING VALUE>","EventDescription":"<ADD STRING VALUE>","Channel":"Pos","CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>","Policies":[{"Id":"<ADD STRING VALUE>","Alias":"<ADD STRING VALUE>","MerchantAppId":"<ADD STRING VALUE>","SupportedTransactionType":"Collection","CalculateToClass":"<ADD STRING VALUE>","PolicyData":"<ADD STRING VALUE>","TimeFrom":"<ADD STRING VALUE>","TimeTo":"<ADD STRING VALUE>","DateFrom":"<ADD STRING VALUE>","DateTo":"<ADD STRING VALUE>","CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>","IsActive":false}]}],"MerchantCategories":[{"Id":"<ADD STRING VALUE>","MerchantCategoryCode":"<ADD STRING VALUE>","Description":"<ADD STRING VALUE>","CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>"}],"Customers":[{"Id":"<ADD STRING VALUE>","CustomerAppIdentity":"<ADD STRING VALUE>","FirstName":"<ADD STRING VALUE>","Surname":"<ADD STRING VALUE>","BirthdayYear":"<ADD STRING VALUE>","PhoneNumber":"<ADD STRING VALUE>","Email":"<ADD STRING VALUE>","Status":"Active","CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>","CustomerPoints":{"Id":"<ADD STRING VALUE>","Points":0,"CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>"},"CustomerAccounts":[{"Id":"<ADD STRING VALUE>","AccountType":"Account","AccountNumber":"<ADD STRING VALUE>","AccountDetails":"<ADD STRING VALUE>","calculateToClass":"<ADD STRING VALUE>","Status":"Active","CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>"}],"Transactions":[{"Id":"<ADD STRING VALUE>","AccountNumber":"<ADD STRING VALUE>","EventCode":"<ADD STRING VALUE>","MerchantId":"<ADD STRING VALUE>","TransactionDate":"<ADD STRING VALUE>","TransactionType":"Collection","CouponCode":"<ADD STRING VALUE>","BaselineAmount":0,"Points":0,"Status":"Completed","TransactionData":"<ADD STRING VALUE>","CalculateToClass":"<ADD STRING VALUE>","CreatedOn":"<ADD STRING VALUE>","UpdatedOn":"<ADD STRING VALUE>","TrnFromPosId":"<ADD STRING VALUE>","BatchFromPosId":"<ADD STRING VALUE>","TerminalFromPosId":"<ADD STRING VALUE>","TransactionDescription":"<ADD STRING VALUE>"}]}]}]}'
    delete:
      consumes: []
      produces:
        - application/json
        - text/json
        - application/xml
        - text/xml
      tags:
        - Sandbox
      parameters:
        - name: sandbox_id
          description: Sandbox ID
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
      operationId: Sandbox_DeleteSandbox
      summary: Delete Sandbox
      description: Delete Sandbox specified by sandbox id.
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("content-type", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D")
              .delete(null)
              .addHeader("content-type", "application/json")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'content-type': 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "application/json",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("DELETE",
            "/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["content-type"] = 'application/json'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/loyalty/headers/v1.2/sandbox/%7Bsandbox_id%7D \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json'
definitions:
  'Request[RegisterCustomerRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Register Customer Request
        required:
          - loyaltySchemaId
          - customerAppIdentity
          - firstname
          - surname
          - phoneNumber
          - email
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
          firstname:
            description: Customer's firstname
            type: string
          surname:
            description: Customer's surname
            type: string
          birthdayYear:
            format: int32
            description: Customer's birthday year
            type: integer
          phoneNumber:
            description: Customer's phone number
            type: string
          email:
            description: Customer's email address
            type: string
          accounts:
            description: Customer's linked accounts or cards
            type: array
            items:
              description: Account Request
              required:
                - accountNumber
                - accountType
              type: object
              properties:
                accountNumber:
                  description: Account Number
                  type: string
                accountType:
                  description: Account Type
                  enum:
                    - Account
                    - Card
                  type: string
                expirationDate:
                  format: date-time
                  description: >-
                    Expiration date of card. Only Cards supported (Format:
                    yyyy-MM-dd)
                  type: string
                holderName:
                  description: Holder name of account
                  type: string
  RequestHeader:
    required:
      - ID
    type: object
    properties:
      ID:
        type: string
      application:
        type: string
      bank:
        type: string
      hostSession:
        type: string
      channel:
        type: string
      customer:
        format: double
        type: number
      logitude:
        format: double
        type: number
      latitude:
        format: double
        type: number
      go4moreMember:
        type: boolean
      TAN:
        type: string
  RegisterCustomerRequest:
    description: Register Customer Request
    required:
      - loyaltySchemaId
      - customerAppIdentity
      - firstname
      - surname
      - phoneNumber
      - email
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      firstname:
        description: Customer's firstname
        type: string
      surname:
        description: Customer's surname
        type: string
      birthdayYear:
        format: int32
        description: Customer's birthday year
        type: integer
      phoneNumber:
        description: Customer's phone number
        type: string
      email:
        description: Customer's email address
        type: string
      accounts:
        description: Customer's linked accounts or cards
        type: array
        items:
          description: Account Request
          required:
            - accountNumber
            - accountType
          type: object
          properties:
            accountNumber:
              description: Account Number
              type: string
            accountType:
              description: Account Type
              enum:
                - Account
                - Card
              type: string
            expirationDate:
              format: date-time
              description: >-
                Expiration date of card. Only Cards supported (Format:
                yyyy-MM-dd)
              type: string
            holderName:
              description: Holder name of account
              type: string
  AccountRequest:
    description: Account Request
    required:
      - accountNumber
      - accountType
    type: object
    properties:
      accountNumber:
        description: Account Number
        type: string
      accountType:
        description: Account Type
        enum:
          - Account
          - Card
        type: string
      expirationDate:
        format: date-time
        description: 'Expiration date of card. Only Cards supported (Format: yyyy-MM-dd)'
        type: string
      holderName:
        description: Holder name of account
        type: string
  'Response[RegisterCustomerResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/RegisterCustomerResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  RegisterCustomerResponse:
    description: Register Customer Response
    required:
      - customerId
    type: object
    properties:
      customerId:
        description: Generated Customer Identifier
        type: string
  ResponseMessage:
    type: object
    properties:
      id:
        type: string
      code:
        type: string
      desc:
        type: string
      sev:
        enum:
          - Warning
          - Error
          - Info
        type: string
      cat:
        enum:
          - Business
          - Communication
          - Technical
          - Security
        type: string
  'Request[GetCustomerRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Get Customer Request
        required:
          - customerAppIdentity
          - loyaltySchemaId
        type: object
        properties:
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  GetCustomerRequest:
    description: Get Customer Request
    required:
      - customerAppIdentity
      - loyaltySchemaId
    type: object
    properties:
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Response[GetCustomerResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GetCustomerResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GetCustomerResponse:
    description: Get Customer Response
    required:
      - firstName
      - surname
      - customerAppIdentity
      - phoneNumber
      - email
    type: object
    properties:
      firstName:
        description: Customer's firstname
        type: string
      surname:
        description: Customer's surname
        type: string
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      birthdayYear:
        description: Customer's birthday year
        type: string
      phoneNumber:
        description: Customer's phone number
        type: string
      email:
        description: Customer's email address
        type: string
  'Request[AddAccountRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Add Account Request
        required:
          - customerAppIdentity
          - loyaltySchemaId
          - accountNumber
          - accountType
        type: object
        properties:
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          accountNumber:
            description: Account or Card Number
            type: string
          accountType:
            description: Account Type
            enum:
              - Account
              - Card
            type: string
          expirationDate:
            format: date-time
            description: Expiration date of card. Only Cards supported
            type: string
          holderName:
            description: Holder name of account or card
            type: string
  AddAccountRequest:
    description: Add Account Request
    required:
      - customerAppIdentity
      - loyaltySchemaId
      - accountNumber
      - accountType
    type: object
    properties:
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      accountNumber:
        description: Account or Card Number
        type: string
      accountType:
        description: Account Type
        enum:
          - Account
          - Card
        type: string
      expirationDate:
        format: date-time
        description: Expiration date of card. Only Cards supported
        type: string
      holderName:
        description: Holder name of account or card
        type: string
  'Response[GenericResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GenericResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GenericResponse:
    description: Generic Response
    required:
      - success
    type: object
    properties:
      success:
        description: Indicates if the action executed successfully
        type: boolean
  'Request[GetAccountsRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Get Account Request Type
        required:
          - customerAppIdentity
          - loyaltySchemaId
        type: object
        properties:
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  GetAccountsRequest:
    description: Get Account Request Type
    required:
      - customerAppIdentity
      - loyaltySchemaId
    type: object
    properties:
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Response[GetAccountResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GetAccountResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GetAccountResponse:
    description: Get Account Response Type
    required:
      - accounts
    type: object
    properties:
      accounts:
        description: Customer Account List
        type: array
        items:
          $ref: '#/definitions/Account'
  Account:
    description: Account
    required:
      - accountNumber
      - accountType
    type: object
    properties:
      accountNumber:
        description: Account or Card Number
        type: string
      accountType:
        description: Account Type
        enum:
          - Account
          - Card
        type: string
      holderName:
        description: Holder name of account or card
        type: string
      expirationDate:
        format: date-time
        description: Expiration date of card. Only Cards supported
        type: string
  'Request[GetMerchantCategoriesRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Get Merchant Categories Request Type
        required:
          - loyaltySchemaId
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
  GetMerchantCategoriesRequest:
    description: Get Merchant Categories Request Type
    required:
      - loyaltySchemaId
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Response[GetMerchantCategoriesResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GetMerchantCategoriesResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GetMerchantCategoriesResponse:
    description: Get Merchant Categories Response Type
    required:
      - merchantCategories
    type: object
    properties:
      merchantCategories:
        description: Customer's transactions
        type: array
        items:
          $ref: '#/definitions/MerchantCategory'
  MerchantCategory:
    description: Merchant Category
    required:
      - merchantCategoryCode
      - description
    type: object
    properties:
      merchantCategoryCode:
        description: Merchant Category Code
        type: string
      description:
        description: Merchant Category Description
        type: string
  'Request[ManageMerchantRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Add Merchant Request Type
        required:
          - loyaltySchemaId
          - merchantCategoryCode
          - merchantName
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          merchantCategoryCode:
            description: Merchant Category Code
            type: string
          merchantAppId:
            description: Merchand Id for each Loyalty Schema
            type: string
          merchantName:
            description: Merchant Name
            type: string
          taxId:
            description: Merchant Tax Number
            type: string
          phoneNo:
            description: Merchant Phone Number
            type: string
          longtitude:
            format: double
            description: Merchant Shop Longtitude
            type: number
          latitude:
            format: double
            description: Merchant Shop Latitude
            type: number
          county:
            description: Merchant Shop County
            type: string
          city:
            description: Merchant Shop City
            type: string
          zipcode:
            description: Merchant Shop Zipcode
            type: string
          address:
            description: Merchant Shop Address
            type: string
          vat:
            description: Merchant valid V.A.T.
            type: string
          area:
            description: Merchant Shop Area
            type: string
          dateFrom:
            format: date-time
            description: Merchant Date From
            type: string
          dateTo:
            format: date-time
            description: Merchant Date To
            type: string
  ManageMerchantRequest:
    description: Add Merchant Request Type
    required:
      - loyaltySchemaId
      - merchantCategoryCode
      - merchantName
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      merchantCategoryCode:
        description: Merchant Category Code
        type: string
      merchantAppId:
        description: Merchand Id for each Loyalty Schema
        type: string
      merchantName:
        description: Merchant Name
        type: string
      taxId:
        description: Merchant Tax Number
        type: string
      phoneNo:
        description: Merchant Phone Number
        type: string
      longtitude:
        format: double
        description: Merchant Shop Longtitude
        type: number
      latitude:
        format: double
        description: Merchant Shop Latitude
        type: number
      county:
        description: Merchant Shop County
        type: string
      city:
        description: Merchant Shop City
        type: string
      zipcode:
        description: Merchant Shop Zipcode
        type: string
      address:
        description: Merchant Shop Address
        type: string
      vat:
        description: Merchant valid V.A.T.
        type: string
      area:
        description: Merchant Shop Area
        type: string
      dateFrom:
        format: date-time
        description: Merchant Date From
        type: string
      dateTo:
        format: date-time
        description: Merchant Date To
        type: string
  'Request[GetMerchantsRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Get Merchants Request
        required:
          - loyaltySchemaId
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          dateFrom:
            format: date-time
            description: >-
              Date from which merchant is active (Format:
              yyyy-MM-ddTHH:mm:ss.fffZ)
            type: string
          dateTo:
            format: date-time
            description: >-
              Date to which merchant is active (Format:
              yyyy-MM-ddTHH:mm:ss.fffZ)
            type: string
  GetMerchantsRequest:
    description: Get Merchants Request
    required:
      - loyaltySchemaId
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      dateFrom:
        format: date-time
        description: 'Date from which merchant is active (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      dateTo:
        format: date-time
        description: 'Date to which merchant is active (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
  'Response[GetMerchantsResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GetMerchantsResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GetMerchantsResponse:
    description: Get Merchants Response
    required:
      - merchants
    type: object
    properties:
      merchants:
        description: Merchants
        type: array
        items:
          $ref: '#/definitions/MerchantResponse'
  MerchantResponse:
    description: Merchant Response
    required:
      - merchantName
      - merchantCategory
    type: object
    properties:
      merchantName:
        description: Merchant Name
        type: string
      merchantCategory:
        description: Merchant Category
        type: string
      longtitude:
        format: double
        description: Merchant Shop Longtitude
        type: number
      latitude:
        format: double
        description: Merchant Shop Latitude
        type: number
      address:
        description: Merchant Shop Address
        type: string
      zipcode:
        description: Merchant Shop Zipcode
        type: string
      taxId:
        description: Merchant Tax Number
        type: string
      phoneNo:
        description: Merchant Phone Number
        type: string
      county:
        description: Merchant Shop County
        type: string
      city:
        description: Merchant Shop City
        type: string
      vat:
        description: Merchant valid V.A.T.
        type: string
      area:
        description: Merchant Shop Area
        type: string
  'Request[ManageEventRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Manage Event Request
        required:
          - loyaltySchemaId
          - eventCode
          - policyType
          - rates
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          eventCode:
            description: Event Code
            type: string
          eventDescription:
            description: Event Description
            type: string
          channel:
            description: Event Channel
            enum:
              - Pos
              - ExternalApp
            type: string
          merchantAppId:
            description: Merchant Application identifier for Policy
            type: string
          alias:
            description: Alias
            type: string
          timeFrom:
            description: 'TimeFrom (Format HH:mm)'
            type: string
          timeTo:
            description: 'TimeTo (Format HH:mm)'
            type: string
          policyType:
            description: >-
              Policy Type (Either Collection (Activity, Geolocation, Event, Pos)
              or Redemption (RedemptionWithLowerAmount,
              RedemptionWithHigherAmount))
            enum:
              - Activity
              - Geolocation
              - Event
              - Pos
              - RedemptionWithLowerAmount
              - RedemptionWithHigherAmount
            type: string
          rates:
            description: Rates
            type: array
            items:
              description: Rate
              required:
                - rateType
                - rateValue
                - dateFrom
              type: object
              properties:
                rateType:
                  description: Rate Type
                  enum:
                    - Percent
                    - Amount
                  type: string
                rateValue:
                  format: double
                  description: Value
                  type: number
                latitude:
                  format: double
                  description: Latitude
                  type: number
                longitude:
                  format: double
                  description: Longitude
                  type: number
                radius:
                  format: double
                  description: 'Radius (Unit: meter)'
                  type: number
                dateFrom:
                  format: date-time
                  description: 'Policy Rate Valid Date From (Format: yyyy-MM-dd)'
                  type: string
                dateTo:
                  format: date-time
                  description: 'Policy Rate Valid Date To (Format: yyyy-MM-dd)'
                  type: string
          limits:
            description: Limits
            type: array
            items:
              description: Limit
              required:
                - limitType
                - limitValue
                - dateFrom
              type: object
              properties:
                limitType:
                  description: Limit Type
                  enum:
                    - Amount
                    - Occurence
                  type: string
                direction:
                  description: Limit Direction
                  enum:
                    - Above
                    - Below
                  type: string
                limitValue:
                  format: double
                  description: Value
                  type: number
                dateFrom:
                  format: date-time
                  description: 'Policy Limit Valid Date From (Format: yyyy-MM-dd)'
                  type: string
                dateTo:
                  format: date-time
                  description: 'Policy Limit Valid Date From (Format: yyyy-MM-dd)'
                  type: string
  ManageEventRequest:
    description: Manage Event Request
    required:
      - loyaltySchemaId
      - eventCode
      - policyType
      - rates
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      eventCode:
        description: Event Code
        type: string
      eventDescription:
        description: Event Description
        type: string
      channel:
        description: Event Channel
        enum:
          - Pos
          - ExternalApp
        type: string
      merchantAppId:
        description: Merchant Application identifier for Policy
        type: string
      alias:
        description: Alias
        type: string
      timeFrom:
        description: 'TimeFrom (Format HH:mm)'
        type: string
      timeTo:
        description: 'TimeTo (Format HH:mm)'
        type: string
      policyType:
        description: >-
          Policy Type (Either Collection (Activity, Geolocation, Event, Pos) or
          Redemption (RedemptionWithLowerAmount, RedemptionWithHigherAmount))
        enum:
          - Activity
          - Geolocation
          - Event
          - Pos
          - RedemptionWithLowerAmount
          - RedemptionWithHigherAmount
        type: string
      rates:
        description: Rates
        type: array
        items:
          description: Rate
          required:
            - rateType
            - rateValue
            - dateFrom
          type: object
          properties:
            rateType:
              description: Rate Type
              enum:
                - Percent
                - Amount
              type: string
            rateValue:
              format: double
              description: Value
              type: number
            latitude:
              format: double
              description: Latitude
              type: number
            longitude:
              format: double
              description: Longitude
              type: number
            radius:
              format: double
              description: 'Radius (Unit: meter)'
              type: number
            dateFrom:
              format: date-time
              description: 'Policy Rate Valid Date From (Format: yyyy-MM-dd)'
              type: string
            dateTo:
              format: date-time
              description: 'Policy Rate Valid Date To (Format: yyyy-MM-dd)'
              type: string
      limits:
        description: Limits
        type: array
        items:
          description: Limit
          required:
            - limitType
            - limitValue
            - dateFrom
          type: object
          properties:
            limitType:
              description: Limit Type
              enum:
                - Amount
                - Occurence
              type: string
            direction:
              description: Limit Direction
              enum:
                - Above
                - Below
              type: string
            limitValue:
              format: double
              description: Value
              type: number
            dateFrom:
              format: date-time
              description: 'Policy Limit Valid Date From (Format: yyyy-MM-dd)'
              type: string
            dateTo:
              format: date-time
              description: 'Policy Limit Valid Date From (Format: yyyy-MM-dd)'
              type: string
  Rate:
    description: Rate
    required:
      - rateType
      - rateValue
      - dateFrom
    type: object
    properties:
      rateType:
        description: Rate Type
        enum:
          - Percent
          - Amount
        type: string
      rateValue:
        format: double
        description: Value
        type: number
      latitude:
        format: double
        description: Latitude
        type: number
      longitude:
        format: double
        description: Longitude
        type: number
      radius:
        format: double
        description: 'Radius (Unit: meter)'
        type: number
      dateFrom:
        format: date-time
        description: 'Policy Rate Valid Date From (Format: yyyy-MM-dd)'
        type: string
      dateTo:
        format: date-time
        description: 'Policy Rate Valid Date To (Format: yyyy-MM-dd)'
        type: string
  Limit:
    description: Limit
    required:
      - limitType
      - limitValue
      - dateFrom
    type: object
    properties:
      limitType:
        description: Limit Type
        enum:
          - Amount
          - Occurence
        type: string
      direction:
        description: Limit Direction
        enum:
          - Above
          - Below
        type: string
      limitValue:
        format: double
        description: Value
        type: number
      dateFrom:
        format: date-time
        description: 'Policy Limit Valid Date From (Format: yyyy-MM-dd)'
        type: string
      dateTo:
        format: date-time
        description: 'Policy Limit Valid Date From (Format: yyyy-MM-dd)'
        type: string
  'Request[GetEventRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Get Event Request
        required:
          - loyaltySchemaId
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema Id
            type: string
            example: 00000000-0000-0000-0000-000000000000
  GetEventRequest:
    description: Get Event Request
    required:
      - loyaltySchemaId
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema Id
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Response[GetEventResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GetEventResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GetEventResponse:
    description: Get Event Response
    required:
      - events
    type: object
    properties:
      events:
        description: Event List
        type: array
        items:
          $ref: '#/definitions/Event'
  Event:
    description: Event
    required:
      - eventCode
      - eventDescription
      - channel
    type: object
    properties:
      eventCode:
        description: Event Code
        type: string
      eventDescription:
        description: Event Description
        type: string
      channel:
        description: Event Channel
        enum:
          - Pos
          - ExternalApp
        type: string
  'Request[GetMerchantTariffsRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Get Merchant Tariffs Request
        required:
          - loyaltySchemaId
          - merchantAppId
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          merchantAppId:
            description: Merchand Id for each Loyalty Schema
            type: string
          transactionDate:
            format: date-time
            description: Merchant Tariffs date search criteria
            type: string
  GetMerchantTariffsRequest:
    description: Get Merchant Tariffs Request
    required:
      - loyaltySchemaId
      - merchantAppId
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      merchantAppId:
        description: Merchand Id for each Loyalty Schema
        type: string
      transactionDate:
        format: date-time
        description: Merchant Tariffs date search criteria
        type: string
  'Response[GetMerchantTariffsResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GetMerchantTariffsResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GetMerchantTariffsResponse:
    description: Get Merchant Tariffs Response
    required:
      - tariffs
    type: object
    properties:
      tariffs:
        description: Tariffs
        type: array
        items:
          $ref: '#/definitions/Tariff'
  Tariff:
    description: Tariff
    required:
      - eventCode
      - eventDescription
      - tariffType
      - tariffValue
    type: object
    properties:
      eventCode:
        description: Event Code
        type: string
      eventDescription:
        description: Event Description
        type: string
      tariffType:
        description: 'Tariff Type (e.g. percent, amount)'
        type: string
      tariffValue:
        format: double
        description: Tariff Value
        type: number
  'Request[PointsSimulatorRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Points Simulator Request
        required:
          - loyaltySchemaId
          - eventCode
          - transactionDate
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          merchantAppId:
            description: Merchand Id for each Loyalty Schema
            type: string
          accountNumber:
            description: Customer's Account or Card Number
            type: string
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
          eventCode:
            description: Event Code
            type: string
          transactionAmount:
            format: double
            description: Transaction Amount
            type: number
          transactionDate:
            format: date-time
            description: 'Date of transaction execution (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
            type: string
          currencyCode:
            description: Currency Code (e.g EUR)
            type: string
          latitude:
            format: double
            description: User Latitude
            type: number
          longtitude:
            format: double
            description: User Longtitude
            type: number
  PointsSimulatorRequest:
    description: Points Simulator Request
    required:
      - loyaltySchemaId
      - eventCode
      - transactionDate
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      merchantAppId:
        description: Merchand Id for each Loyalty Schema
        type: string
      accountNumber:
        description: Customer's Account or Card Number
        type: string
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      eventCode:
        description: Event Code
        type: string
      transactionAmount:
        format: double
        description: Transaction Amount
        type: number
      transactionDate:
        format: date-time
        description: 'Date of transaction execution (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      currencyCode:
        description: Currency Code (e.g EUR)
        type: string
      latitude:
        format: double
        description: User Latitude
        type: number
      longtitude:
        format: double
        description: User Longtitude
        type: number
  'Response[PointsCollectionResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/PointsCollectionResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  PointsCollectionResponse:
    description: Points Collection Response
    required:
      - pointsCollected
    type: object
    properties:
      pointsCollected:
        format: int32
        description: Points collected from executed action
        type: integer
  'Request[PointsCollectionRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Points Collection Request
        required:
          - loyaltySchemaId
          - eventCode
          - transactionDate
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          merchantAppId:
            description: Merchand Id for each Loyalty Schema
            type: string
          accountNumber:
            description: Customer's Account or Card Number
            type: string
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
          eventCode:
            description: Event Code
            type: string
          transactionID:
            description: POS Transaction Id. Only POS transactions supported
            type: string
          terminalID:
            description: POS Terminal Id. Only POS transactions supported
            type: string
          batchID:
            description: POS Batch Id. Only POS transactions supported
            type: string
          transactionAmount:
            format: double
            description: Transaction Amount
            type: number
          transactionDate:
            format: date-time
            description: 'Date of transaction execution (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
            type: string
          transactionDescription:
            description: Transaction Description
            type: string
          currencyCode:
            description: Currency Code (e.g EUR)
            type: string
          latitude:
            format: double
            description: User Latitude
            type: number
          longtitude:
            format: double
            description: User Longtitude
            type: number
  PointsCollectionRequest:
    description: Points Collection Request
    required:
      - loyaltySchemaId
      - eventCode
      - transactionDate
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      merchantAppId:
        description: Merchand Id for each Loyalty Schema
        type: string
      accountNumber:
        description: Customer's Account or Card Number
        type: string
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      eventCode:
        description: Event Code
        type: string
      transactionID:
        description: POS Transaction Id. Only POS transactions supported
        type: string
      terminalID:
        description: POS Terminal Id. Only POS transactions supported
        type: string
      batchID:
        description: POS Batch Id. Only POS transactions supported
        type: string
      transactionAmount:
        format: double
        description: Transaction Amount
        type: number
      transactionDate:
        format: date-time
        description: 'Date of transaction execution (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      transactionDescription:
        description: Transaction Description
        type: string
      currencyCode:
        description: Currency Code (e.g EUR)
        type: string
      latitude:
        format: double
        description: User Latitude
        type: number
      longtitude:
        format: double
        description: User Longtitude
        type: number
  'Request[IssueCouponRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Issue Coupon Request
        required:
          - loyaltySchemaId
          - eventCode
          - points
          - transactionDate
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          merchantAppId:
            description: Merchand Id for each Loyalty Schema
            type: string
          accountNumber:
            description: Customer's account number
            type: string
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
          eventCode:
            description: Event Code
            type: string
          points:
            format: int32
            description: Points to redeem
            type: integer
          transactionDate:
            format: date-time
            description: 'Date of transaction execution (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
            type: string
  IssueCouponRequest:
    description: Issue Coupon Request
    required:
      - loyaltySchemaId
      - eventCode
      - points
      - transactionDate
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      merchantAppId:
        description: Merchand Id for each Loyalty Schema
        type: string
      accountNumber:
        description: Customer's account number
        type: string
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      eventCode:
        description: Event Code
        type: string
      points:
        format: int32
        description: Points to redeem
        type: integer
      transactionDate:
        format: date-time
        description: 'Date of transaction execution (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
  'Response[IssueCouponResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/IssueCouponResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  IssueCouponResponse:
    description: Issue Coupon Response
    required:
      - couponCode
      - couponPoints
      - couponAmount
      - success
    type: object
    properties:
      couponCode:
        description: Coupon Code
        type: string
      couponPoints:
        format: int32
        description: Coupon Points
        type: integer
      couponAmount:
        format: double
        description: Coupon Amount
        type: number
      success:
        description: Indicates if coupon issued successfully
        type: boolean
  'Request[PointsRedemptionRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Points Redemption Request
        required:
          - loyaltySchemaId
          - couponCode
          - eventCode
          - transactionDate
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          merchantAppId:
            description: Merchand Id for each Loyalty Schema
            type: string
          accountNumber:
            description: Customer's Account or Card Number
            type: string
          couponCode:
            description: Coupon Code to redeem
            type: string
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
          eventCode:
            description: event Code
            type: string
          transactionAmount:
            format: double
            description: Transaction Amount
            type: number
          transactionDate:
            format: date-time
            description: 'Date of transaction execution (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
            type: string
          currencyCode:
            description: Currency Code (e.g. EUR)
            type: string
          transactionDescription:
            description: Transaction Description
            type: string
          transactionID:
            description: POS Transaction Id. Only POS transactions supported
            type: string
          terminalID:
            description: POS Terminal Id. Only POS transactions supported
            type: string
          batchID:
            description: POS Batch Id. Only POS transactions supported
            type: string
  PointsRedemptionRequest:
    description: Points Redemption Request
    required:
      - loyaltySchemaId
      - couponCode
      - eventCode
      - transactionDate
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      merchantAppId:
        description: Merchand Id for each Loyalty Schema
        type: string
      accountNumber:
        description: Customer's Account or Card Number
        type: string
      couponCode:
        description: Coupon Code to redeem
        type: string
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      eventCode:
        description: event Code
        type: string
      transactionAmount:
        format: double
        description: Transaction Amount
        type: number
      transactionDate:
        format: date-time
        description: 'Date of transaction execution (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      currencyCode:
        description: Currency Code (e.g. EUR)
        type: string
      transactionDescription:
        description: Transaction Description
        type: string
      transactionID:
        description: POS Transaction Id. Only POS transactions supported
        type: string
      terminalID:
        description: POS Terminal Id. Only POS transactions supported
        type: string
      batchID:
        description: POS Batch Id. Only POS transactions supported
        type: string
  'Request[GetBalanceRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Get Balance Request
        required:
          - loyaltySchemaId
          - customerAppIdentity
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
  GetBalanceRequest:
    description: Get Balance Request
    required:
      - loyaltySchemaId
      - customerAppIdentity
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
  'Response[GetBalanceResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GetBalanceResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GetBalanceResponse:
    description: Get Balance Response
    required:
      - pointsCollected
    type: object
    properties:
      pointsCollected:
        format: int32
        description: Points Collected
        type: integer
  'Request[GetTransactionsRequest]':
    required:
      - header
      - payload
    type: object
    properties:
      header:
        required:
          - ID
        type: object
        properties:
          ID:
            type: string
          application:
            type: string
          bank:
            type: string
          hostSession:
            type: string
          channel:
            type: string
          customer:
            format: double
            type: number
          logitude:
            format: double
            type: number
          latitude:
            format: double
            type: number
          go4moreMember:
            type: boolean
          TAN:
            type: string
      payload:
        description: Get Transactions Request
        required:
          - loyaltySchemaId
          - customerAppIdentity
        type: object
        properties:
          loyaltySchemaId:
            format: uuid
            description: Loyalty Schema unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          customerAppIdentity:
            description: Customer Identity for each Loyalty Schema
            type: string
          dateFrom:
            format: date-time
            description: >-
              Transactions Criteria Filter DateTo (Format:
              yyyy-MM-ddTHH:mm:ss.fffZ)
            type: string
          dateTo:
            format: date-time
            description: >-
              Transactions Criteria Filter DateFrom (Format:
              yyyy-MM-ddTHH:mm:ss.fffZ)
            type: string
  GetTransactionsRequest:
    description: Get Transactions Request
    required:
      - loyaltySchemaId
      - customerAppIdentity
    type: object
    properties:
      loyaltySchemaId:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      customerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      dateFrom:
        format: date-time
        description: 'Transactions Criteria Filter DateTo (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      dateTo:
        format: date-time
        description: >-
          Transactions Criteria Filter DateFrom (Format:
          yyyy-MM-ddTHH:mm:ss.fffZ)
        type: string
  'Response[GetTransactionsResponse]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/GetTransactionsResponse'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  GetTransactionsResponse:
    description: Get Transactions Response
    required:
      - transactions
    type: object
    properties:
      transactions:
        description: Customer's transactions
        type: array
        items:
          $ref: '#/definitions/Transaction'
  Transaction:
    description: Transaction
    required:
      - merchantName
      - transactionDescription
      - transactionAmount
      - transactionType
      - transactionPoints
      - eventDescription
      - isCoupon
      - status
    type: object
    properties:
      merchantName:
        description: Merchant Name
        type: string
      transactionDescription:
        description: Transaction Description
        type: string
      transactionAmount:
        format: double
        description: Transaction Amount
        type: number
      transactionType:
        description: Transaction Type
        enum:
          - Collection
          - Redemption
        type: string
      transactionPoints:
        format: int32
        description: Transaction Points
        type: integer
      eventDescription:
        description: Event Description
        type: string
      isCoupon:
        description: IsCoupon is True When TransactionType is Redemption
        type: boolean
      status:
        description: Transaction Status
        enum:
          - Completed
          - Pending
          - Cancelled
        type: string
  SandboxRequest:
    description: Sandbox Request
    type: object
    properties:
      sandboxId:
        description: Sandbox unique identifier. E.g MySandbox
        type: string
  'Response[SandboxDataModel]':
    type: object
    properties:
      payload:
        $ref: '#/definitions/SandboxDataModel'
      exception:
        $ref: '#/definitions/ResponseMessage'
      messages:
        type: array
        items:
          $ref: '#/definitions/ResponseMessage'
      executionTime:
        format: double
        type: number
  SandboxDataModel:
    description: Sandbox Data Model
    type: object
    properties:
      SandboxID:
        description: Sandbox unique identifier. E.g MySandbox
        type: string
      Users:
        description: Sandbox Users. Users remain the same for all Loyalty Schemas
        type: array
        items:
          description: Sandbox User
          type: object
          properties:
            UserId:
              description: Sandbox UserId
              type: string
            Username:
              description: Sandbox Username
              type: string
            ProviderId:
              description: Sandbox Provider unique identifier (e.g NBG.gr)
              type: string
            Provider:
              description: Sandbox Provider (e.g NBG)
              type: string
            CustomerAppIdentity:
              description: Customer App Identity
              type: string
      LoyaltySchemas:
        description: Sandbox Loyalty Schemas
        type: array
        items:
          description: Sandbox loyalty Schema
          type: object
          properties:
            Id:
              format: uuid
              description: Loyalty Schema unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Name:
              description: Loyalty Schema Name
              type: string
            Alias:
              description: Loyalty Schema Alias
              type: string
            Status:
              description: Loyalty Schema Status
              enum:
                - Active
                - Inactive
              type: string
            CreatedOn:
              format: date-time
              description: 'Loyalty Schema Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            UpdatedOn:
              format: date-time
              description: 'Loyalty Schema Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            Merchants:
              description: Loyalty Schema Merchants
              type: array
              items:
                description: Sandbox Merchant
                type: object
                properties:
                  Id:
                    format: uuid
                    description: Merchant unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  MerchantAppId:
                    description: Merchant Application Identifier
                    type: string
                  MerchantName:
                    description: Merchant Name
                    type: string
                  MerchantCategoryId:
                    format: uuid
                    description: Merchant Category identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Longtitude:
                    format: double
                    description: Merchant Shop longtitude
                    type: number
                  Latitude:
                    format: double
                    description: Merchant Shop Latitude
                    type: number
                  Address:
                    description: Merchant Shop Address
                    type: string
                  Area:
                    description: Merchant Shop Area
                    type: string
                  Zipcode:
                    description: Merchant Shop ZipCode
                    type: string
                  MerchantData:
                    description: Merchant Extra Details
                    type: string
                  calculateToClass:
                    description: Deserialization class for Merchant Data
                    type: string
                  DateFrom:
                    format: date-time
                    description: >-
                      Merchant Valid Date From (Format:
                      yyyy-MM-ddTHH:mm:ss.fffZ)
                    type: string
                  DateTo:
                    format: date-time
                    description: 'Merchant Valid Date To (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  CreatedOn:
                    format: date-time
                    description: 'Merchant Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  UpdatedOn:
                    format: date-time
                    description: 'Merchant Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
            MerchantRelationships:
              description: Loyalty Schema Merchant Relationships
              type: array
              items:
                description: Sandbox Merchant Relationship
                type: object
                properties:
                  Id:
                    format: uuid
                    description: Merchant Relationship unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  FranchisorMerchantId:
                    format: uuid
                    description: Franchisor Merchant unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  FranchiseeMerchantId:
                    format: uuid
                    description: Franchisee Merchant unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Status:
                    description: Status
                    enum:
                      - Active
                      - Inactive
                    type: string
                  CreatedOn:
                    format: date-time
                    description: >-
                      Merchant Relationship Created Date (Format:
                      yyyy-MM-ddTHH:mm:ss.fffZ)
                    type: string
                  UpdatedOn:
                    format: date-time
                    description: >-
                      Merchant Relationship Updated Date (Format:
                      yyyy-MM-ddTHH:mm:ss.fffZ)
                    type: string
            Events:
              description: Loyalty Schema Events
              type: array
              items:
                description: Sandbox Event
                type: object
                properties:
                  Id:
                    format: uuid
                    description: Event unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  EventCode:
                    description: Event Code
                    type: string
                  EventDescription:
                    description: Event Description
                    type: string
                  Channel:
                    description: Event Channel
                    enum:
                      - Pos
                      - ExternalApp
                    type: string
                  CreatedOn:
                    format: date-time
                    description: 'Event Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  UpdatedOn:
                    format: date-time
                    description: 'Event Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  Policies:
                    description: Event Specific Policies
                    type: array
                    items:
                      description: Sandbox Policy
                      type: object
                      properties:
                        Id:
                          format: uuid
                          description: Sandbox Policy unique identifier
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        Alias:
                          description: Policy Alias
                          type: string
                        MerchantAppId:
                          description: Merchant Application identifier for Policy
                          type: string
                        SupportedTransactionType:
                          description: Policy Supported TransactionType
                          enum:
                            - Collection
                            - Redemption
                          type: string
                        CalculateToClass:
                          description: Deserialization class for Policy Data
                          type: string
                        PolicyData:
                          description: Policy Data Extra Details
                          type: string
                        TimeFrom:
                          description: 'Policy Valid Time From (Format: HH:mm:ss.fffZ)'
                          type: string
                        TimeTo:
                          description: 'Policy Valid Time To (Format: HH:mm:ss.fffZ)'
                          type: string
                        DateFrom:
                          format: date-time
                          description: >-
                            Policy Valid Date From (Format:
                            yyyy-MM-ddTHH:mm:ss.fffZ)
                          type: string
                        DateTo:
                          format: date-time
                          description: >-
                            Policy Valid Date To (Format:
                            yyyy-MM-ddTHH:mm:ss.fffZ)
                          type: string
                        CreatedOn:
                          format: date-time
                          description: >-
                            Policy Created Date (Format:
                            yyyy-MM-ddTHH:mm:ss.fffZ)
                          type: string
                        UpdatedOn:
                          format: date-time
                          description: >-
                            Policy Updated Date (Format:
                            yyyy-MM-ddTHH:mm:ss.fffZ)
                          type: string
                        IsActive:
                          description: Is Active
                          type: boolean
            MerchantCategories:
              description: Loyalty Schema Merchant Categories
              type: array
              items:
                description: Sandbox Merchant Category
                type: object
                properties:
                  Id:
                    format: uuid
                    description: Merchant Category unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  MerchantCategoryCode:
                    description: Merchant Category Code
                    type: string
                  Description:
                    description: Merchant Category Description
                    type: string
                  CreatedOn:
                    format: date-time
                    description: >-
                      Merchant Category Created Date (Format:
                      yyyy-MM-ddTHH:mm:ss.fffZ)
                    type: string
                  UpdatedOn:
                    format: date-time
                    description: >-
                      Merchant Category Updated Date (Format:
                      yyyy-MM-ddTHH:mm:ss.fffZ)
                    type: string
            Customers:
              description: Loyalty Schema Customers
              type: array
              items:
                description: Sandbox Customer
                type: object
                properties:
                  Id:
                    format: uuid
                    description: Customer unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  CustomerAppIdentity:
                    description: Customer Identity for each Loyalty Schema
                    type: string
                  FirstName:
                    description: Customer's firstname
                    type: string
                  Surname:
                    description: Customer's surname
                    type: string
                  BirthdayYear:
                    description: Customer's birthday year
                    type: string
                  PhoneNumber:
                    description: Customer's phone number
                    type: string
                  Email:
                    description: Customer's email address
                    type: string
                  Status:
                    description: Customer Status
                    enum:
                      - Active
                      - Inactive
                    type: string
                  CreatedOn:
                    format: date-time
                    description: 'Customer Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  UpdatedOn:
                    format: date-time
                    description: 'Customer Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  CustomerPoints:
                    description: Sandbox Customer Points
                    type: object
                    properties:
                      Id:
                        format: uuid
                        description: Customer Points unique identifier
                        type: string
                        example: 00000000-0000-0000-0000-000000000000
                      Points:
                        format: int32
                        description: Customer Points
                        type: integer
                      CreatedOn:
                        format: date-time
                        description: >-
                          Customer Points Created Date (Format:
                          yyyy-MM-ddTHH:mm:ss.fffZ)
                        type: string
                      UpdatedOn:
                        format: date-time
                        description: >-
                          Customer Points Updated Date (Format:
                          yyyy-MM-ddTHH:mm:ss.fffZ)
                        type: string
                  CustomerAccounts:
                    description: Customer Accounts
                    type: array
                    items:
                      description: Sandbox Customer Account
                      type: object
                      properties:
                        Id:
                          format: uuid
                          description: Customer unique identifier
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        AccountType:
                          description: Customer Account Type
                          enum:
                            - Account
                            - Card
                          type: string
                        AccountNumber:
                          description: Customer Account Number
                          type: string
                        AccountDetails:
                          description: Customer Account Extra Details
                          type: string
                        calculateToClass:
                          description: Deserialization class for Account Details
                          type: string
                        Status:
                          description: Customer Account Status
                          enum:
                            - Active
                            - Inactive
                          type: string
                        CreatedOn:
                          format: date-time
                          description: >-
                            Customer Account Created Date (Format:
                            yyyy-MM-ddTHH:mm:ss.fffZ)
                          type: string
                        UpdatedOn:
                          format: date-time
                          description: >-
                            Customer Account Updated Date (Format:
                            yyyy-MM-ddTHH:mm:ss.fffZ)
                          type: string
                  Transactions:
                    description: Customer Transactions
                    type: array
                    items:
                      description: Sandbox Transaction
                      type: object
                      properties:
                        Id:
                          format: uuid
                          description: Transaction unique identifier
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        AccountNumber:
                          description: Transaction Account Number
                          type: string
                        EventCode:
                          description: Transaction Event Code
                          type: string
                        MerchantId:
                          format: uuid
                          description: Transaction Merchant unique identifier
                          type: string
                          example: 00000000-0000-0000-0000-000000000000
                        TransactionDate:
                          format: date-time
                          description: Tranasction Actual Date
                          type: string
                        TransactionType:
                          description: Transaction Type
                          enum:
                            - Collection
                            - Redemption
                          type: string
                        CouponCode:
                          description: Transaction Coupon Code
                          type: string
                        BaselineAmount:
                          format: double
                          description: Transaction Initial Amount
                          type: number
                        Points:
                          format: int32
                          description: Transaction Points
                          type: integer
                        Status:
                          description: Transaction Status
                          enum:
                            - Completed
                            - Pending
                            - Cancelled
                          type: string
                        TransactionData:
                          description: Transaction Extra Details
                          type: string
                        CalculateToClass:
                          description: Deserialization class for Transaction Date
                          type: string
                        CreatedOn:
                          format: date-time
                          description: >-
                            Transaction Created Date (Format:
                            yyyy-MM-ddTHH:mm:ss.fffZ)
                          type: string
                        UpdatedOn:
                          format: date-time
                          description: >-
                            Transaction Updated Date (Format:
                            yyyy-MM-ddTHH:mm:ss.fffZ)
                          type: string
                        TrnFromPosId:
                          description: Transaction Id from POS
                          type: string
                        BatchFromPosId:
                          description: BatchId from POS
                          type: string
                        TerminalFromPosId:
                          description: TerminalId from POS
                          type: string
                        TransactionDescription:
                          description: Transaction Description
                          type: string
  SandboxUser:
    description: Sandbox User
    type: object
    properties:
      UserId:
        description: Sandbox UserId
        type: string
      Username:
        description: Sandbox Username
        type: string
      ProviderId:
        description: Sandbox Provider unique identifier (e.g NBG.gr)
        type: string
      Provider:
        description: Sandbox Provider (e.g NBG)
        type: string
      CustomerAppIdentity:
        description: Customer App Identity
        type: string
  SandboxLoyaltySchema:
    description: Sandbox loyalty Schema
    type: object
    properties:
      Id:
        format: uuid
        description: Loyalty Schema unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Name:
        description: Loyalty Schema Name
        type: string
      Alias:
        description: Loyalty Schema Alias
        type: string
      Status:
        description: Loyalty Schema Status
        enum:
          - Active
          - Inactive
        type: string
      CreatedOn:
        format: date-time
        description: 'Loyalty Schema Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Loyalty Schema Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      Merchants:
        description: Loyalty Schema Merchants
        type: array
        items:
          description: Sandbox Merchant
          type: object
          properties:
            Id:
              format: uuid
              description: Merchant unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            MerchantAppId:
              description: Merchant Application Identifier
              type: string
            MerchantName:
              description: Merchant Name
              type: string
            MerchantCategoryId:
              format: uuid
              description: Merchant Category identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Longtitude:
              format: double
              description: Merchant Shop longtitude
              type: number
            Latitude:
              format: double
              description: Merchant Shop Latitude
              type: number
            Address:
              description: Merchant Shop Address
              type: string
            Area:
              description: Merchant Shop Area
              type: string
            Zipcode:
              description: Merchant Shop ZipCode
              type: string
            MerchantData:
              description: Merchant Extra Details
              type: string
            calculateToClass:
              description: Deserialization class for Merchant Data
              type: string
            DateFrom:
              format: date-time
              description: 'Merchant Valid Date From (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            DateTo:
              format: date-time
              description: 'Merchant Valid Date To (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            CreatedOn:
              format: date-time
              description: 'Merchant Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            UpdatedOn:
              format: date-time
              description: 'Merchant Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
      MerchantRelationships:
        description: Loyalty Schema Merchant Relationships
        type: array
        items:
          description: Sandbox Merchant Relationship
          type: object
          properties:
            Id:
              format: uuid
              description: Merchant Relationship unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            FranchisorMerchantId:
              format: uuid
              description: Franchisor Merchant unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            FranchiseeMerchantId:
              format: uuid
              description: Franchisee Merchant unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Status:
              description: Status
              enum:
                - Active
                - Inactive
              type: string
            CreatedOn:
              format: date-time
              description: >-
                Merchant Relationship Created Date (Format:
                yyyy-MM-ddTHH:mm:ss.fffZ)
              type: string
            UpdatedOn:
              format: date-time
              description: >-
                Merchant Relationship Updated Date (Format:
                yyyy-MM-ddTHH:mm:ss.fffZ)
              type: string
      Events:
        description: Loyalty Schema Events
        type: array
        items:
          description: Sandbox Event
          type: object
          properties:
            Id:
              format: uuid
              description: Event unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            EventCode:
              description: Event Code
              type: string
            EventDescription:
              description: Event Description
              type: string
            Channel:
              description: Event Channel
              enum:
                - Pos
                - ExternalApp
              type: string
            CreatedOn:
              format: date-time
              description: 'Event Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            UpdatedOn:
              format: date-time
              description: 'Event Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            Policies:
              description: Event Specific Policies
              type: array
              items:
                description: Sandbox Policy
                type: object
                properties:
                  Id:
                    format: uuid
                    description: Sandbox Policy unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  Alias:
                    description: Policy Alias
                    type: string
                  MerchantAppId:
                    description: Merchant Application identifier for Policy
                    type: string
                  SupportedTransactionType:
                    description: Policy Supported TransactionType
                    enum:
                      - Collection
                      - Redemption
                    type: string
                  CalculateToClass:
                    description: Deserialization class for Policy Data
                    type: string
                  PolicyData:
                    description: Policy Data Extra Details
                    type: string
                  TimeFrom:
                    description: 'Policy Valid Time From (Format: HH:mm:ss.fffZ)'
                    type: string
                  TimeTo:
                    description: 'Policy Valid Time To (Format: HH:mm:ss.fffZ)'
                    type: string
                  DateFrom:
                    format: date-time
                    description: 'Policy Valid Date From (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  DateTo:
                    format: date-time
                    description: 'Policy Valid Date To (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  CreatedOn:
                    format: date-time
                    description: 'Policy Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  UpdatedOn:
                    format: date-time
                    description: 'Policy Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
                    type: string
                  IsActive:
                    description: Is Active
                    type: boolean
      MerchantCategories:
        description: Loyalty Schema Merchant Categories
        type: array
        items:
          description: Sandbox Merchant Category
          type: object
          properties:
            Id:
              format: uuid
              description: Merchant Category unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            MerchantCategoryCode:
              description: Merchant Category Code
              type: string
            Description:
              description: Merchant Category Description
              type: string
            CreatedOn:
              format: date-time
              description: >-
                Merchant Category Created Date (Format:
                yyyy-MM-ddTHH:mm:ss.fffZ)
              type: string
            UpdatedOn:
              format: date-time
              description: >-
                Merchant Category Updated Date (Format:
                yyyy-MM-ddTHH:mm:ss.fffZ)
              type: string
      Customers:
        description: Loyalty Schema Customers
        type: array
        items:
          description: Sandbox Customer
          type: object
          properties:
            Id:
              format: uuid
              description: Customer unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            CustomerAppIdentity:
              description: Customer Identity for each Loyalty Schema
              type: string
            FirstName:
              description: Customer's firstname
              type: string
            Surname:
              description: Customer's surname
              type: string
            BirthdayYear:
              description: Customer's birthday year
              type: string
            PhoneNumber:
              description: Customer's phone number
              type: string
            Email:
              description: Customer's email address
              type: string
            Status:
              description: Customer Status
              enum:
                - Active
                - Inactive
              type: string
            CreatedOn:
              format: date-time
              description: 'Customer Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            UpdatedOn:
              format: date-time
              description: 'Customer Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            CustomerPoints:
              description: Sandbox Customer Points
              type: object
              properties:
                Id:
                  format: uuid
                  description: Customer Points unique identifier
                  type: string
                  example: 00000000-0000-0000-0000-000000000000
                Points:
                  format: int32
                  description: Customer Points
                  type: integer
                CreatedOn:
                  format: date-time
                  description: >-
                    Customer Points Created Date (Format:
                    yyyy-MM-ddTHH:mm:ss.fffZ)
                  type: string
                UpdatedOn:
                  format: date-time
                  description: >-
                    Customer Points Updated Date (Format:
                    yyyy-MM-ddTHH:mm:ss.fffZ)
                  type: string
            CustomerAccounts:
              description: Customer Accounts
              type: array
              items:
                description: Sandbox Customer Account
                type: object
                properties:
                  Id:
                    format: uuid
                    description: Customer unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  AccountType:
                    description: Customer Account Type
                    enum:
                      - Account
                      - Card
                    type: string
                  AccountNumber:
                    description: Customer Account Number
                    type: string
                  AccountDetails:
                    description: Customer Account Extra Details
                    type: string
                  calculateToClass:
                    description: Deserialization class for Account Details
                    type: string
                  Status:
                    description: Customer Account Status
                    enum:
                      - Active
                      - Inactive
                    type: string
                  CreatedOn:
                    format: date-time
                    description: >-
                      Customer Account Created Date (Format:
                      yyyy-MM-ddTHH:mm:ss.fffZ)
                    type: string
                  UpdatedOn:
                    format: date-time
                    description: >-
                      Customer Account Updated Date (Format:
                      yyyy-MM-ddTHH:mm:ss.fffZ)
                    type: string
            Transactions:
              description: Customer Transactions
              type: array
              items:
                description: Sandbox Transaction
                type: object
                properties:
                  Id:
                    format: uuid
                    description: Transaction unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  AccountNumber:
                    description: Transaction Account Number
                    type: string
                  EventCode:
                    description: Transaction Event Code
                    type: string
                  MerchantId:
                    format: uuid
                    description: Transaction Merchant unique identifier
                    type: string
                    example: 00000000-0000-0000-0000-000000000000
                  TransactionDate:
                    format: date-time
                    description: Tranasction Actual Date
                    type: string
                  TransactionType:
                    description: Transaction Type
                    enum:
                      - Collection
                      - Redemption
                    type: string
                  CouponCode:
                    description: Transaction Coupon Code
                    type: string
                  BaselineAmount:
                    format: double
                    description: Transaction Initial Amount
                    type: number
                  Points:
                    format: int32
                    description: Transaction Points
                    type: integer
                  Status:
                    description: Transaction Status
                    enum:
                      - Completed
                      - Pending
                      - Cancelled
                    type: string
                  TransactionData:
                    description: Transaction Extra Details
                    type: string
                  CalculateToClass:
                    description: Deserialization class for Transaction Date
                    type: string
                  CreatedOn:
                    format: date-time
                    description: >-
                      Transaction Created Date (Format:
                      yyyy-MM-ddTHH:mm:ss.fffZ)
                    type: string
                  UpdatedOn:
                    format: date-time
                    description: >-
                      Transaction Updated Date (Format:
                      yyyy-MM-ddTHH:mm:ss.fffZ)
                    type: string
                  TrnFromPosId:
                    description: Transaction Id from POS
                    type: string
                  BatchFromPosId:
                    description: BatchId from POS
                    type: string
                  TerminalFromPosId:
                    description: TerminalId from POS
                    type: string
                  TransactionDescription:
                    description: Transaction Description
                    type: string
  SandboxMerchant:
    description: Sandbox Merchant
    type: object
    properties:
      Id:
        format: uuid
        description: Merchant unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      MerchantAppId:
        description: Merchant Application Identifier
        type: string
      MerchantName:
        description: Merchant Name
        type: string
      MerchantCategoryId:
        format: uuid
        description: Merchant Category identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Longtitude:
        format: double
        description: Merchant Shop longtitude
        type: number
      Latitude:
        format: double
        description: Merchant Shop Latitude
        type: number
      Address:
        description: Merchant Shop Address
        type: string
      Area:
        description: Merchant Shop Area
        type: string
      Zipcode:
        description: Merchant Shop ZipCode
        type: string
      MerchantData:
        description: Merchant Extra Details
        type: string
      calculateToClass:
        description: Deserialization class for Merchant Data
        type: string
      DateFrom:
        format: date-time
        description: 'Merchant Valid Date From (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      DateTo:
        format: date-time
        description: 'Merchant Valid Date To (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      CreatedOn:
        format: date-time
        description: 'Merchant Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Merchant Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
  SandboxMerchantRelationship:
    description: Sandbox Merchant Relationship
    type: object
    properties:
      Id:
        format: uuid
        description: Merchant Relationship unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      FranchisorMerchantId:
        format: uuid
        description: Franchisor Merchant unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      FranchiseeMerchantId:
        format: uuid
        description: Franchisee Merchant unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Status:
        description: Status
        enum:
          - Active
          - Inactive
        type: string
      CreatedOn:
        format: date-time
        description: 'Merchant Relationship Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Merchant Relationship Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
  SandboxEvent:
    description: Sandbox Event
    type: object
    properties:
      Id:
        format: uuid
        description: Event unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      EventCode:
        description: Event Code
        type: string
      EventDescription:
        description: Event Description
        type: string
      Channel:
        description: Event Channel
        enum:
          - Pos
          - ExternalApp
        type: string
      CreatedOn:
        format: date-time
        description: 'Event Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Event Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      Policies:
        description: Event Specific Policies
        type: array
        items:
          description: Sandbox Policy
          type: object
          properties:
            Id:
              format: uuid
              description: Sandbox Policy unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            Alias:
              description: Policy Alias
              type: string
            MerchantAppId:
              description: Merchant Application identifier for Policy
              type: string
            SupportedTransactionType:
              description: Policy Supported TransactionType
              enum:
                - Collection
                - Redemption
              type: string
            CalculateToClass:
              description: Deserialization class for Policy Data
              type: string
            PolicyData:
              description: Policy Data Extra Details
              type: string
            TimeFrom:
              description: 'Policy Valid Time From (Format: HH:mm:ss.fffZ)'
              type: string
            TimeTo:
              description: 'Policy Valid Time To (Format: HH:mm:ss.fffZ)'
              type: string
            DateFrom:
              format: date-time
              description: 'Policy Valid Date From (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            DateTo:
              format: date-time
              description: 'Policy Valid Date To (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            CreatedOn:
              format: date-time
              description: 'Policy Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            UpdatedOn:
              format: date-time
              description: 'Policy Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            IsActive:
              description: Is Active
              type: boolean
  SandboxMerchantCategory:
    description: Sandbox Merchant Category
    type: object
    properties:
      Id:
        format: uuid
        description: Merchant Category unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      MerchantCategoryCode:
        description: Merchant Category Code
        type: string
      Description:
        description: Merchant Category Description
        type: string
      CreatedOn:
        format: date-time
        description: 'Merchant Category Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Merchant Category Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
  SandboxCustomer:
    description: Sandbox Customer
    type: object
    properties:
      Id:
        format: uuid
        description: Customer unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      CustomerAppIdentity:
        description: Customer Identity for each Loyalty Schema
        type: string
      FirstName:
        description: Customer's firstname
        type: string
      Surname:
        description: Customer's surname
        type: string
      BirthdayYear:
        description: Customer's birthday year
        type: string
      PhoneNumber:
        description: Customer's phone number
        type: string
      Email:
        description: Customer's email address
        type: string
      Status:
        description: Customer Status
        enum:
          - Active
          - Inactive
        type: string
      CreatedOn:
        format: date-time
        description: 'Customer Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Customer Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      CustomerPoints:
        description: Sandbox Customer Points
        type: object
        properties:
          Id:
            format: uuid
            description: Customer Points unique identifier
            type: string
            example: 00000000-0000-0000-0000-000000000000
          Points:
            format: int32
            description: Customer Points
            type: integer
          CreatedOn:
            format: date-time
            description: 'Customer Points Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
            type: string
          UpdatedOn:
            format: date-time
            description: 'Customer Points Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
            type: string
      CustomerAccounts:
        description: Customer Accounts
        type: array
        items:
          description: Sandbox Customer Account
          type: object
          properties:
            Id:
              format: uuid
              description: Customer unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            AccountType:
              description: Customer Account Type
              enum:
                - Account
                - Card
              type: string
            AccountNumber:
              description: Customer Account Number
              type: string
            AccountDetails:
              description: Customer Account Extra Details
              type: string
            calculateToClass:
              description: Deserialization class for Account Details
              type: string
            Status:
              description: Customer Account Status
              enum:
                - Active
                - Inactive
              type: string
            CreatedOn:
              format: date-time
              description: 'Customer Account Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            UpdatedOn:
              format: date-time
              description: 'Customer Account Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
      Transactions:
        description: Customer Transactions
        type: array
        items:
          description: Sandbox Transaction
          type: object
          properties:
            Id:
              format: uuid
              description: Transaction unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            AccountNumber:
              description: Transaction Account Number
              type: string
            EventCode:
              description: Transaction Event Code
              type: string
            MerchantId:
              format: uuid
              description: Transaction Merchant unique identifier
              type: string
              example: 00000000-0000-0000-0000-000000000000
            TransactionDate:
              format: date-time
              description: Tranasction Actual Date
              type: string
            TransactionType:
              description: Transaction Type
              enum:
                - Collection
                - Redemption
              type: string
            CouponCode:
              description: Transaction Coupon Code
              type: string
            BaselineAmount:
              format: double
              description: Transaction Initial Amount
              type: number
            Points:
              format: int32
              description: Transaction Points
              type: integer
            Status:
              description: Transaction Status
              enum:
                - Completed
                - Pending
                - Cancelled
              type: string
            TransactionData:
              description: Transaction Extra Details
              type: string
            CalculateToClass:
              description: Deserialization class for Transaction Date
              type: string
            CreatedOn:
              format: date-time
              description: 'Transaction Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            UpdatedOn:
              format: date-time
              description: 'Transaction Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
              type: string
            TrnFromPosId:
              description: Transaction Id from POS
              type: string
            BatchFromPosId:
              description: BatchId from POS
              type: string
            TerminalFromPosId:
              description: TerminalId from POS
              type: string
            TransactionDescription:
              description: Transaction Description
              type: string
  SandboxPolicy:
    description: Sandbox Policy
    type: object
    properties:
      Id:
        format: uuid
        description: Sandbox Policy unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Alias:
        description: Policy Alias
        type: string
      MerchantAppId:
        description: Merchant Application identifier for Policy
        type: string
      SupportedTransactionType:
        description: Policy Supported TransactionType
        enum:
          - Collection
          - Redemption
        type: string
      CalculateToClass:
        description: Deserialization class for Policy Data
        type: string
      PolicyData:
        description: Policy Data Extra Details
        type: string
      TimeFrom:
        description: 'Policy Valid Time From (Format: HH:mm:ss.fffZ)'
        type: string
      TimeTo:
        description: 'Policy Valid Time To (Format: HH:mm:ss.fffZ)'
        type: string
      DateFrom:
        format: date-time
        description: 'Policy Valid Date From (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      DateTo:
        format: date-time
        description: 'Policy Valid Date To (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      CreatedOn:
        format: date-time
        description: 'Policy Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Policy Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      IsActive:
        description: Is Active
        type: boolean
  SandboxCustomerPoints:
    description: Sandbox Customer Points
    type: object
    properties:
      Id:
        format: uuid
        description: Customer Points unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      Points:
        format: int32
        description: Customer Points
        type: integer
      CreatedOn:
        format: date-time
        description: 'Customer Points Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Customer Points Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
  SandboxCustomerAccount:
    description: Sandbox Customer Account
    type: object
    properties:
      Id:
        format: uuid
        description: Customer unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      AccountType:
        description: Customer Account Type
        enum:
          - Account
          - Card
        type: string
      AccountNumber:
        description: Customer Account Number
        type: string
      AccountDetails:
        description: Customer Account Extra Details
        type: string
      calculateToClass:
        description: Deserialization class for Account Details
        type: string
      Status:
        description: Customer Account Status
        enum:
          - Active
          - Inactive
        type: string
      CreatedOn:
        format: date-time
        description: 'Customer Account Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Customer Account Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
  SandboxTransaction:
    description: Sandbox Transaction
    type: object
    properties:
      Id:
        format: uuid
        description: Transaction unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      AccountNumber:
        description: Transaction Account Number
        type: string
      EventCode:
        description: Transaction Event Code
        type: string
      MerchantId:
        format: uuid
        description: Transaction Merchant unique identifier
        type: string
        example: 00000000-0000-0000-0000-000000000000
      TransactionDate:
        format: date-time
        description: Tranasction Actual Date
        type: string
      TransactionType:
        description: Transaction Type
        enum:
          - Collection
          - Redemption
        type: string
      CouponCode:
        description: Transaction Coupon Code
        type: string
      BaselineAmount:
        format: double
        description: Transaction Initial Amount
        type: number
      Points:
        format: int32
        description: Transaction Points
        type: integer
      Status:
        description: Transaction Status
        enum:
          - Completed
          - Pending
          - Cancelled
        type: string
      TransactionData:
        description: Transaction Extra Details
        type: string
      CalculateToClass:
        description: Deserialization class for Transaction Date
        type: string
      CreatedOn:
        format: date-time
        description: 'Transaction Created Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      UpdatedOn:
        format: date-time
        description: 'Transaction Updated Date (Format: yyyy-MM-ddTHH:mm:ss.fffZ)'
        type: string
      TrnFromPosId:
        description: Transaction Id from POS
        type: string
      BatchFromPosId:
        description: BatchId from POS
        type: string
      TerminalFromPosId:
        description: TerminalId from POS
        type: string
      TransactionDescription:
        description: Transaction Description
        type: string
securityDefinitions:
  Client Id:
    type: apiKey
    description: Application's Id
    name: Client-Id
    in: header
security:
  - Client Id: []
