openapi: 3.0.1
info:
  title: Confirmation of Funds API Specification - UK
  description: >
    ## Functionality at a glance

    This specification describes the Confirmation of Funds API flows and payloads.
    

    The API endpoints described here allow a Card Based Payment Instrument Issuer ('CBPII') to:
    

    Register an intent to confirm funds by creating a "funds confirmation consent" resource with an ASPSP,
    for agreement between the PSU and ASPSP. This consent is a long lived consent, and contains the length
    of time (expiration date) the customer (PSU) would like to provide to the CBPII; and  Subsequently
    make a request to confirm funds are available. Funds can only be confirmed against the currency of the
    account.
   
    ## Quick Getting Started


    1. **Login/Register** to the NBG Technology HUB

    2. Go to **"APPS"**
    
    3. Select your Organization and go to step 4. If you want to create a new Organization click **\"CREATE AN ORGANIZATION\"** and follow the steps below:
        1. Enter the title of your Organization
        2. Enter a short description of your Organization (optional)
        3. Click **"SUBMIT"**

    4. Select the Organization of choice and click **"ADD AN APPLICATION"** 
          1. Fill in the forms (title and short description)
          2. Check **\"Authorization Code\" and \"Client Credentials\"** 
          3. Enter the **OAuth Redirect and Post Logout URIs** (these are the URIs that we will redirect the user upon logging in and logging out respectively)
              
              You can use the following redirect URL to easily test the API through the portal: *https://developer.nbg.gr/oauth2/redoc-callback*
          4. Click **"SUBMIT"**
          5. Store the APPs **"Client ID"** and **"Client Secret"**
    5. Go to **"API PRODUCTS"** and select the **CONFIRMATION OF FUNDS - UK OPEN BANKING API**
    
    6. Click **\"START USING THIS API\"**, choose your app and click
    **"SUBSCRIBE"**

    7. Get an Access Token using the Access Token Flow and the API scopes provided in the Authentication and Authorization (OAuth2) section below

    8. Create a Sandbox

    9. Play with the API
    

    ### Sandbox Flow

    The Sandbox Flow matches the Production Flow. The difference lies into the Data used. Instead of live
    data, the Sandbox flow uses mocked data.




    ### Production Flow  

    The Production Flow is described in the [UK Open Banking v3.1.0
    Specification](https://openbanking.atlassian.net/wiki/spaces/DZ/pages/937951380/Confirmation+of+Funds+API+Specification+-+v3.1)




    ## Authentication and Authorization (OAuth2)

    This API version uses the OAuth2 protocol for authentication and authorization, which means that a
    Bearer (access token) should be acquired. An access token can be retrieved using the client_id and
    client_secret of the APP that you created and subscribed in this API, and your own credentials
    (username, password) that you use to sign in the NBG Technology HUB. The scopes are defined below:


    **Sandbox Scopes:** 

            sandbox-uk-fundsconfirmations-api-v1


    **Production Scopes:** 

            fundsconfirmations


    **Authorization Endpoint:** 

            https://my.nbg.gr/identity/connect/authorize


    **Token Endpoint:** 

            https://my.nbg.gr/identity/connect/token


    See more [here](https://developer.nbg.gr/oauth-document)

    ## Create your Sandbox

    Create a new Sandbox application by invoking the POST /sandbox. This call will generate a new Sandbox
    with a unique sandbox-id.


    When you create a sandbox, users and sandbox specific data are generated as sample data.


    **_Important!_** Don't lose your sandbox_id, since you will need it for all the API calls. Sandbox
    endpoints are not included in the production version API.


  

    ## Start Testing

    Once you have your sandbox-id, you can start invoking the rest of the operations by providing the
    mandatory http header **sandbox-id**  and the http headers described below.


    ## Important notes


    **Request headers**


    The following HTTP header parameters are required for every call:


    1. Authorization. The Auth2 Token

    2. x-fapi-financial-id. The unique id of the ASPSP to which the request is issued (Default: NBG)

    3. sandbox-id. Your Sandbox ID


    **Consent**


    In order to be able to effectively start using the Endpoints the appropriate Consent needs to be
    created and set to the 'Authorised' status. 


    ## Error Codes

    The error codes and their description can be found
    [here](https://openbanking.atlassian.net/wiki/spaces/DZ/pages/937656404/Read+Write+Data+API+Specification+-+v3.1#Read/WriteDataAPISpecification-v3.1-ErrorResponseStructure)


    # Implementation Specifics 

    Below you may find more specific information & limitations regarding the implementation followed in
    the Production API.

    ## Token Endpoint Client Authentication

    At this point the supported __Client Authentication__ method is "__Client Secret Basic__" - usage of
    "Client ID" & "Client Secret".

    ## Consent Authorization

    In order for a PSU to Authorize a Consent, they need to be redirected to the appropriate Consent UI.
    <br /><br />  In order for this redirection to take place the TPP needs to follow the Authorization
    Endpoint by ammending the generated "Consent ID", like this:
    https://my.nbg.gr/identity/connect/authorize?consent_id={{consent_id}}

    After a query to endpoint 

        POST/ funds-confirmations

    and the successful response, the respective consent will be revoked.


    # Feedback and Questions

    We would love to hear your feedback and answer your questions. Send us at
    [developer@nbg.gr](developer@nbg.gr)



    Check out our [Sandbox Postman
    Collection](https://github.com/myNBGcode/PostmanCollections/tree/master/Confirmation%20of%20Funds%20-%20UK%20Open%20Banking)
     ________________________________________

    Created by [**NBG**](https://www.nbg.gr/).

  version: v3.1.0
servers:
  - url: 'https://apis.nbg.gr/sandbox/uk.openbanking.fundsconfirmation/oauth2/v3.1.0'
paths:
  /funds-confirmation-consents:
    post:
      tags:
        - Consents
      summary: Create Funds Confirmation Consent
      parameters:
        - name: x-fapi-financial-id
          in: header
          description: The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.
          required: true
          schema:
            type: string
            default: NBG
        - name: x-fapi-customer-last-logged-time
          in: header
          description: |-
            The time when the PSU last logged in with the TPP. 
            All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
            Sun, 10 Sep 2017 19:43:31 UTC
          schema:
            pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$'
            type: string
        - name: x-fapi-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          schema:
            type: string
        - name: x-fapi-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          required: true
          schema:
            type: string
            default: 'Bearer '
        - name: x-customer-user-agent
          in: header
          description: Indicates the user-agent that the PSU is using.
          schema:
            type: string
        - name: client-id
          in: header
          description: Application's Id ( sandbox only )
          required: true
          schema:
            type: string
        - name: sandbox-id
          in: header
          description: The unique id of the sandbox to be used
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OBFundsConfirmationConsent1'
          application/json:
            schema:
              $ref: '#/components/schemas/OBFundsConfirmationConsent1'
      responses:
        '201':
          description: Funds Confirmation Consent Created
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                type: string
                description: An RFC4122 UID used as a correlation id
                format: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBFundsConfirmationConsentResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBFundsConfirmationConsentResponse1'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                type: integer
                description: Number in seconds to wait
                format: ''
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
  '/funds-confirmation-consents/{consentId}':
    get:
      tags:
        - Consents
      summary: Get Funds Confirmation Consent
      parameters:
        - name: consentId
          in: path
          description: ConsentId
          required: true
          schema:
            type: string
            description: ConsentId
            nullable: true
        - name: x-fapi-financial-id
          in: header
          description: The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.
          required: true
          schema:
            type: string
            default: NBG
        - name: x-fapi-customer-last-logged-time
          in: header
          description: |-
            The time when the PSU last logged in with the TPP. 
            All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
            Sun, 10 Sep 2017 19:43:31 UTC
          schema:
            pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$'
            type: string
        - name: x-fapi-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          schema:
            type: string
        - name: x-fapi-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          required: true
          schema:
            type: string
            default: 'Bearer '
        - name: x-customer-user-agent
          in: header
          description: Indicates the user-agent that the PSU is using.
          schema:
            type: string
        - name: client-id
          in: header
          description: Application's Id ( sandbox only )
          required: true
          schema:
            type: string
        - name: sandbox-id
          in: header
          description: The unique id of the sandbox to be used
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Funds Confirmation Consent Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                type: string
                description: An RFC4122 UID used as a correlation id
                format: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBFundsConfirmationConsentResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBFundsConfirmationConsentResponse1'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                type: integer
                description: Number in seconds to wait
                format: ''
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
    delete:
      tags:
        - Consents
      summary: Delete Funds Confirmation Consent
      parameters:
        - name: consentId
          in: path
          description: ConsentId
          required: true
          schema:
            type: string
            description: ConsentId
            nullable: true
        - name: x-fapi-financial-id
          in: header
          description: The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.
          required: true
          schema:
            type: string
            default: NBG
        - name: x-fapi-customer-last-logged-time
          in: header
          description: |-
            The time when the PSU last logged in with the TPP. 
            All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
            Sun, 10 Sep 2017 19:43:31 UTC
          schema:
            pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$'
            type: string
        - name: x-fapi-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          schema:
            type: string
        - name: x-fapi-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          required: true
          schema:
            type: string
            default: 'Bearer '
        - name: x-customer-user-agent
          in: header
          description: Indicates the user-agent that the PSU is using.
          schema:
            type: string
        - name: client-id
          in: header
          description: Application's Id ( sandbox only )
          required: true
          schema:
            type: string
        - name: sandbox-id
          in: header
          description: The unique id of the sandbox to be used
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Funds Confirmation Consent Deleted
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                type: string
                description: An RFC4122 UID used as a correlation id
                format: ''
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                type: integer
                description: Number in seconds to wait
                format: ''
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
  /funds-confirmations:
    post:
      tags:
        - Funds
      summary: Create Funds Confirmation
      parameters:
        - name: x-fapi-financial-id
          in: header
          description: The unique id of the ASPSP to which the request is issued. The unique id will be issued by OB.
          required: true
          schema:
            type: string
            default: NBG
        - name: x-fapi-customer-last-logged-time
          in: header
          description: |-
            The time when the PSU last logged in with the TPP. 
            All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: 
            Sun, 10 Sep 2017 19:43:31 UTC
          schema:
            pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$'
            type: string
        - name: x-fapi-customer-ip-address
          in: header
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          schema:
            type: string
        - name: x-fapi-interaction-id
          in: header
          description: An RFC4122 UID used as a correlation id.
          schema:
            type: string
        - name: Authorization
          in: header
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          required: true
          schema:
            type: string
            default: 'Bearer '
        - name: x-customer-user-agent
          in: header
          description: Indicates the user-agent that the PSU is using.
          schema:
            type: string
        - name: client-id
          in: header
          description: Application's Id ( sandbox only )
          required: true
          schema:
            type: string
        - name: sandbox-id
          in: header
          description: The unique id of the sandbox to be used
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/OBFundsConfirmation1'
          application/json:
            schema:
              $ref: '#/components/schemas/OBFundsConfirmation1'
      responses:
        '201':
          description: Funds Confirmation Created
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id
              schema:
                type: string
                description: An RFC4122 UID used as a correlation id
                format: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBFundsConfirmationResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBFundsConfirmationResponse1'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              schema:
                type: integer
                description: Number in seconds to wait
                format: ''
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
  /sandbox:
    post:
      tags:
        - Sandbox
      summary: Create Sandbox
      requestBody:
        description: SandboxRequest
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/SandboxRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SandboxRequest'
      responses:
        '201':
          description: Created
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Sandbox'
            application/json:
              schema:
                $ref: '#/components/schemas/Sandbox'
        '400':
          description: Bad request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
    put:
      tags:
        - Sandbox
      summary: Import Sandbox
      requestBody:
        description: Sandbox
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/Sandbox'
          application/json:
            schema:
              $ref: '#/components/schemas/Sandbox'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
  '/sandbox/{sandboxId}':
    get:
      tags:
        - Sandbox
      summary: Get Sandbox
      parameters:
        - name: sandboxId
          in: path
          description: Sandbox Id
          required: true
          schema:
            type: string
            description: Sandbox Id
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Sandbox'
            application/json:
              schema:
                $ref: '#/components/schemas/Sandbox'
        '400':
          description: Bad request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
    delete:
      tags:
        - Sandbox
      summary: Delete Sandbox
      parameters:
        - name: sandboxId
          in: path
          description: Sandbox Id
          required: true
          schema:
            type: string
            description: Sandbox Id
            nullable: true
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
        '500':
          description: Internal Server Error
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
            application/json:
              schema:
                $ref: '#/components/schemas/OBErrorResponse1'
components:
  schemas:
    OBCashAccountDebtor4:
      required:
        - Identification
        - SchemeName
      type: object
      properties:
        SchemeName:
          maxLength: 40
          minLength: 0
          type: string
          description: Gets or Sets SchemeName
        Identification:
          maxLength: 256
          minLength: 0
          type: string
          description: Identification assigned by an institution to identify an account. This identification is known by the account owner.
        Name:
          maxLength: 70
          minLength: 0
          type: string
          description: 'Name of the account, as assigned by the account servicing institution. Usage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.'
          nullable: true
        SecondaryIdentification:
          maxLength: 34
          minLength: 0
          type: string
          description: 'This is secondary identification of the account, as assigned by the account servicing institution.  This can be used by building societies to additionally identify accounts with a roll number (in addition to a sort code and account number combination).'
          nullable: true
      description: Unambiguous identification of the account of the debtor to which a confirmation of funds consent will be applied.
    OBFundsConfirmationConsentData1:
      required:
        - DebtorAccount
      type: object
      properties:
        ExpirationDateTime:
          type: string
          description: 'Specified date and time the funds confirmation authorisation will expire.  If this is not populated, the authorisation will be open ended. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
          format: date-time
          nullable: true
        DebtorAccount:
          $ref: '#/components/schemas/OBCashAccountDebtor4'
      description: ''
    OBFundsConfirmationConsent1:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBFundsConfirmationConsentData1'
      description: ''
    OBExternalRequestStatus1Code:
      enum:
        - Authorised
        - AwaitingAuthorisation
        - Rejected
        - Revoked
      type: string
      description: Specifies the status of consent resource in code form.
    OBFundsConfirmationConsentDataResponse1:
      required:
        - ConsentId
        - CreationDateTime
        - DebtorAccount
        - Status
        - StatusUpdateDateTime
      type: object
      properties:
        ConsentId:
          type: string
          description: Unique identification as assigned to identify the funds confirmation consent resource.
        CreationDateTime:
          type: string
          description: 'Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
          format: date-time
        Status:
          $ref: '#/components/schemas/OBExternalRequestStatus1Code'
        StatusUpdateDateTime:
          type: string
          description: 'Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
          format: date-time
        ExpirationDateTime:
          type: string
          description: 'Specified date and time the funds confirmation authorisation will expire. If this is not populated, the authorisation will be open ended. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
          format: date-time
          nullable: true
        DebtorAccount:
          $ref: '#/components/schemas/OBCashAccountDebtor4'
      description: ''
    Links:
      required:
        - Self
      type: object
      properties:
        Self:
          type: string
          description: Gets or Sets Self
        First:
          type: string
          description: Gets or Sets First
          nullable: true
        Prev:
          type: string
          description: Gets or Sets Prev
          nullable: true
        Next:
          type: string
          description: Gets or Sets Next
          nullable: true
        Last:
          type: string
          description: Gets or Sets Last
          nullable: true
      description: Links relevant to the payload
    Meta:
      type: object
      properties:
        TotalPages:
          type: integer
          description: Gets or Sets TotalPages
          format: int32
          nullable: true
        FirstAvailableDateTime:
          type: string
          description: Gets or Sets FirstAvailableDateTime
          nullable: true
        LastAvailableDateTime:
          type: string
          description: Gets or Sets LastAvailableDateTime
          nullable: true
      description: Meta Data relevant to the payload
    OBFundsConfirmationConsentResponse1:
      required:
        - Data
        - Links
        - Meta
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBFundsConfirmationConsentDataResponse1'
        Links:
          $ref: '#/components/schemas/Links'
        Meta:
          $ref: '#/components/schemas/Meta'
      description: ''
    ErrorCode:
      enum:
        - UK.OBIE.Field.Expected
        - UK.OBIE.Field.Invalid
        - UK.OBIE.Field.InvalidDate
        - UK.OBIE.Field.Missing
        - UK.OBIE.Field.Unexpected
        - UK.OBIE.Header.Invalid
        - UK.OBIE.Header.Missing
        - UK.OBIE.Resource.ConsentMismatch
        - UK.OBIE.Resource.InvalidConsentStatus
        - UK.OBIE.Resource.InvalidFormat
        - UK.OBIE.Resource.NotFound
        - UK.OBIE.Rules.AfterCutOffDateTime
        - UK.OBIE.Signature.Invalid
        - UK.OBIE.Signature.InvalidClaim
        - UK.OBIE.Signature.MissingClaim
        - UK.OBIE.Signature.Malformed
        - UK.OBIE.Signature.Missing
        - UK.OBIE.Signature.Unexpected
        - UK.OBIE.Unsupported.AccountIdentifier
        - UK.OBIE.Unsupported.AccountSecondaryIdentifier
        - UK.OBIE.Unsupported.Currency
        - UK.OBIE.Unsupported.Frequency
        - UK.OBIE.Unsupported.LocalInstrument
        - UK.OBIE.Unsupported.Scheme
        - UK.OBIE.UnexpectedError
      type: string
    OBError1:
      required:
        - ErrorCode
        - Message
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          type: string
        Path:
          type: string
          nullable: true
        Url:
          type: string
          nullable: true
    OBErrorResponse1:
      required:
        - Code
        - Errors
        - Message
      type: object
      properties:
        Code:
          type: string
        Id:
          type: string
          nullable: true
        Message:
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/OBError1'
    OBActiveOrHistoricCurrencyAndAmount:
      required:
        - Amount
        - Currency
      type: object
      properties:
        Amount:
          pattern: '^\d{1,13}[\.,]\d{1,5}$'
          type: string
          description: Gets or Sets Amount
        Currency:
          pattern: '^[A-Z]{3,3}$'
          type: string
          description: 'A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 "Codes for the representation of currencies and funds".'
      description: Amount of money to be confirmed as available funds in the debtor account. Contains an Amount and a Currency.
    OBFundsConfirmationData1:
      required:
        - ConsentId
        - InstructedAmount
        - Reference
      type: object
      properties:
        ConsentId:
          maxLength: 128
          minLength: 0
          type: string
          description: Unique identification as assigned by the ASPSP to uniquely identify the funds confirmation consent resource.
        Reference:
          maxLength: 35
          minLength: 0
          type: string
          description: 'Unique reference, as assigned by the CBPII, to unambiguously refer to the request related to the payment transaction.'
        InstructedAmount:
          $ref: '#/components/schemas/OBActiveOrHistoricCurrencyAndAmount'
      description: ''
    OBFundsConfirmation1:
      required:
        - Data
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBFundsConfirmationData1'
      description: ''
    OBFundsConfirmationDataResponse1:
      required:
        - ConsentId
        - CreationDateTime
        - FundsAvailable
        - FundsConfirmationId
        - InstructedAmount
        - Reference
      type: object
      properties:
        FundsConfirmationId:
          type: string
          description: Unique identification as assigned by the ASPSP to uniquely identify the funds confirmation resource.
        ConsentId:
          type: string
          description: Unique identification as assigned by the ASPSP to uniquely identify the funds confirmation consent resource.
        CreationDateTime:
          type: string
          description: 'Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00'
          format: date-time
        FundsAvailable:
          type: boolean
          description: Flag to indicate the result of a confirmation of funds check.
        Reference:
          type: string
          description: 'Unique reference, as assigned by the CBPII, to unambiguously refer to the request related to the payment transaction.'
        InstructedAmount:
          $ref: '#/components/schemas/OBActiveOrHistoricCurrencyAndAmount'
      description: ''
    OBFundsConfirmationResponse1:
      required:
        - Data
        - Links
        - Meta
      type: object
      properties:
        Data:
          $ref: '#/components/schemas/OBFundsConfirmationDataResponse1'
        Links:
          $ref: '#/components/schemas/Links'
        Meta:
          $ref: '#/components/schemas/Meta'
      description: ''
    SandboxRequest:
      required:
        - sandboxId
      type: object
      properties:
        sandboxId:
          pattern: '^[a-zA-Z0-9_-]+$'
          type: string
          description: Sandbox id
      description: Sandbox request
    SandboxBankAccount:
      required:
        - balance
        - currency
        - iban
      type: object
      properties:
        currency:
          type: string
          description: 'Currency ( EUR, USD,...)'
        iban:
          type: string
          description: IBAN
        balance:
          type: number
          description: Available balance
          format: double
      description: Sandbox bank account
    SandboxUser:
      type: object
      properties:
        userId:
          type: string
          description: Connected user id
          nullable: true
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/SandboxBankAccount'
          description: List of accounts
          nullable: true
      description: Sandbox user
    Sandbox:
      required:
        - sandboxId
      type: object
      properties:
        sandboxId:
          pattern: '^[a-zA-Z0-9_-]+$'
          type: string
          description: Sandbox id
        users:
          type: array
          items:
            $ref: '#/components/schemas/SandboxUser'
          description: List of users
          nullable: true
      description: Sandbox model
  securitySchemes:
    Client Id:
      type: apiKey
      description: Application's Id
      name: Client-Id
      in: header
security:
  - Client Id: []