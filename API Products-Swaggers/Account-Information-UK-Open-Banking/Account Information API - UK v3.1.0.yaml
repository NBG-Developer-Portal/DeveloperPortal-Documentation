swagger: '2.0'
info:
  title: Account Information API - UK
  version: v3.1.0
  description: >
    ## Functionality at a glance


    Start integrating your application with NBG Bank:


    Access the list of user accounts and its information (e.g. beneficiaries, 
    transactions):


    * Create the Consent with the appropriate permissions in order to be able to
    access the API Endpoints

    * Retrieve the list of accounts

    * Retrieve an account's details

    * Retrieve an account's balances

    * Retrieve an account's transactions

    * Retrieve an account's beneficiaries

    * Retrieve an account's standing orders

    * Retrieve an account's party

    * Retrieve an account's scheduled payments

    * Retrieve an account's statements


    NBG "Account Information" API that implements the [UK Open Banking
    Specification
    v3.1.](https://openbanking.atlassian.net/wiki/spaces/DZ/overview?mode=global) 


    ## Quick Getting Started

    1. Login/Register to the NBG Technology HUB

    2. Go to **"APPS"**
    
    3. Select your Organization and go to step 4. If you want to create a new Organization click **\"CREATE AN ORGANIZATION\"** and follow the steps below:
        1. Enter the title of your Organization
        2. Enter a short description of your Organization (optional)
        3. Click **"SUBMIT"**

    4. Select the Organization of choice and click **"ADD AN APPLICATION"** 
          1. Fill in the forms (title and short description)
          2. Check **\"Authorization Code\" and \"Client Credentials\"** 
          3. Enter the **OAuth Redirect and Post Logout URIs** (these are the URIs that we will redirect the user upon logging in and logging out respectively)
              
              You can use the following redirect URL to easily test the API through the portal: *https://developer.nbg.gr/oauth2/redoc-callback*
          4. Click **"SUBMIT"**
          5. Store the APPs **"Client ID"** and **"Client Secret"**
          
    5. Go to **"API PRODUCTS"** and select the **Account Information API - UK**

    6. Click **\"START USING THIS API\"**, choose your app and click
    **"SUBSCRIBE"**

    7. Get an Access Token using the credentials you signed in as a developer

    8. Create a Sandbox

    9. Play with the API 



    ## Authentication and Authorization (OAuth2)

    This API version uses the OAuth2 protocol for authentication and
    authorization, which means that a Bearer (access token) should be acquired.
    An access token can be retrieved using the client_id and client_secret of
    the APP that you created and subscribed in this API, and your own
    credentials (username, password) that you use to sign in the NBG Technology
    HUB. The scopes are defined below:


    **Sandbox Scopes:** openid profile **sandbox-uk-account-info-api-v1**


    **Production Scopes:** openid profile **accounts**


    **Authorization Endpoint:** https://my.nbg.gr/identity/connect/authorize


    **Token Endpoint:** https://my.nbg.gr/identity/connect/token


    See more [here](https://developer.nbg.gr/oauth-document)



    ## Create your Sandbox

    Create a new Sandbox application by invoking the POST /sandbox. This call
    will generate a new Sandbox with a unique sandbox-id.


    __Important!__ Before proceeding save the sandbox id you just created.


    When you create a sandbox, users and sandbox specific data are generated as
    sample data.


    Each sandbox created through NBG Account sandbox API is compatible with
    other NBG Open Bank sandbox APIs.


    ## Start Testing

    Once you have your sandbox-id, you can start invoking the rest of the
    operations by providing the mandatory http header **sandbox-id**  and the
    http headers described below.


    ## Important notes


    **Request headers**


    The following HTTP header parameters are required for every call:


    1. Authorization. The Auth2 Token

    2. x-fapi-financial-id. The unique id of the ASPSP to which the request is
    issued (Default: NBG)

    3. x-subject-bank-id. The unique id of the target bank (Default: GR-NBG)

    4. sandbox-id. Your Sandbox ID


    **Consent**


    In order to be able to effectively start using the Endpoints the appropriate
    Consent needs to be created and set to the 'Authorised' status. 


    In order to create the Consent you need to at least set the required
    **permissions** and the **Risk** sections. 


    Optionally you may set the 


    1. ExpirationDateTime. When the Consent expires 


    2. TransactionFromDateTime. Start Date to retrieve the transactions 


    3. TransactionToDateTime. End Date to retrieve the transactions 


    ## Error Codes

    The error codes and their description can be found
    [here](https://openbanking.atlassian.net/wiki/spaces/DZ/pages/937656404/Read+Write+Data+API+Specification+-+v3.1#Read/WriteDataAPISpecification-v3.1-ErrorResponseStructure)


    ## Feedback and Questions

    We would love to hear your feedback and answer your questions. Send us at
    [developer@nbg.gr](developer@nbg.gr)


    Check out our [Sandbox Postman
    Collection](https://github.com/myNBGcode/PostmanCollections/tree/master/Account%20Information%20-%20UK%20Open%20Banking/)!


    ________________________________________

    Created by [**NBG**](https://www.nbg.gr/).


    ------------------------------------------------------------------------------------------ 

    ------------------------------------------------------------------------------------------


     # Entities 

     Below, the main entities are documented.
     <a name=AccountId></a> 
    ## AccountId 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| A unique and immutable identifier used to identify the account
    resource. This identifier has no meaning to the account owner.|

     <a name=OBAccount3></a> 
    ## OBAccount3 

    Unambiguous identification of the account to which credit and debit entries
    are made. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | Currency| Identification of the currency in which the account is held. 

    Usage: Currency should only be used in case one and the same account number
    covers several currencies

    and the initiating party needs to identify which currency needs to be used
    for settlement on the account.| string|

    | AccountType | Entity |
    <details><summary>[OBExternalAccountType1Code](#OBExternalAccountType1Code)</summary><ul></ul></details>
    | 

    | AccountSubType | Entity |
    <details><summary>[OBExternalAccountSubType1Code](#OBExternalAccountSubType1Code)</summary><ul></ul></details>
    | 

    | Description| Specifies the description of the account type.| string|

    | Nickname| The nickname of the account, assigned by the account owner in
    order to provide an additional means of identification of the account.|
    string|

    | Account| Provides the details to identify an account.|
    array[[OBCashAccount5](#OBCashAccount5)]|

    | Servicer | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification5](#OBBranchAndFinancialInstitutionIdentification5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> </ul></details> | 

     <a name=OBAccount3Basic></a> 
    ## OBAccount3Basic 

    Unambiguous identification of the account to which credit and debit entries
    are made. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | Currency| Identification of the currency in which the account is held. 

    Usage: Currency should only be used in case one and the same account number
    covers several currencies

    and the initiating party needs to identify which currency needs to be used
    for settlement on the account.| string|

    | AccountType | Entity |
    <details><summary>[OBExternalAccountType1Code](#OBExternalAccountType1Code)</summary><ul></ul></details>
    | 

    | AccountSubType | Entity |
    <details><summary>[OBExternalAccountSubType1Code](#OBExternalAccountSubType1Code)</summary><ul></ul></details>
    | 

    | Description| Specifies the description of the account type.| string|

    | Nickname| The nickname of the account, assigned by the account owner in
    order to provide an additional means of identification of the account.|
    string|

     <a name=OBAccount3Detail></a> 
    ## OBAccount3Detail 

    Unambiguous identification of the account to which credit and debit entries
    are made. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | Currency| Identification of the currency in which the account is held. 

    Usage: Currency should only be used in case one and the same account number
    covers several currencies

    and the initiating party needs to identify which currency needs to be used
    for settlement on the account.| string|

    | AccountType | Entity |
    <details><summary>[OBExternalAccountType1Code](#OBExternalAccountType1Code)</summary><ul></ul></details>
    | 

    | AccountSubType | Entity |
    <details><summary>[OBExternalAccountSubType1Code](#OBExternalAccountSubType1Code)</summary><ul></ul></details>
    | 

    | Description| Specifies the description of the account type.| string|

    | Nickname| The nickname of the account, assigned by the account owner in
    order to provide an additional means of identification of the account.|
    string|

    | Account| Provides the details to identify an account.|
    array[[OBCashAccount5](#OBCashAccount5)]|

    | Servicer | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification5](#OBBranchAndFinancialInstitutionIdentification5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> </ul></details> | 

     <a name=OBActiveCurrencyAndAmount_SimpleType></a> 
    ## OBActiveCurrencyAndAmount_SimpleType 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| A number of monetary units specified in an active currency where
    the unit of currency is explicit and compliant with ISO 4217.|

     <a name=OBActiveOrHistoricCurrencyAndAmount></a> 
    ## OBActiveOrHistoricCurrencyAndAmount 

    Amount of money of the cash balance after a transaction entry is applied to
    the account.. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Amount | Entity |
    <details><summary>[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)</summary><ul></ul></details>
    | 

    | Currency| A code allocated to a currency by a Maintenance Agency under an
    international identification scheme, as described in the latest edition of
    the international standard ISO 4217 "Codes for the representation of
    currencies and funds".| string|

     <a name=OBAddressTypeCode></a> 
    ## OBAddressTypeCode 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Identifies the nature of the postal address.| <ul
    style="padding-left:
    0"><li>Business</li><li>Correspondence</li><li>DeliveryTo</li><li>MailTo</li><li>POBox</li><li>Postal</li><li>Residential</li><li>Statement</li></ul>|

     <a name=OBBCAData1></a> 
    ## OBBCAData1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | ProductDetails | Entity |
    <details><summary>[ProductDetails](#ProductDetails)</summary><ul><li>Segment
    [array]</li> <li>FeeFreeLength [number]</li> <li>FeeFreeLengthPeriod
    [string]</li> <li>Notes [array]</li> </ul></details> | 

    | CreditInterest | Entity |
    <details><summary>[CreditInterest](#CreditInterest)</summary><ul><li>TierBandSet
    [array[[CreditInterest_TierBandSet](#CreditInterest_TierBandSet)]]</li>
    </ul></details> | 

    | Overdraft | Entity |
    <details><summary>[Overdraft](#Overdraft)</summary><ul><li>Notes
    [array]</li> <li>OverdraftTierBandSet
    [array[[Overdraft_OverdraftTierBandSet](#Overdraft_OverdraftTierBandSet)]]</li>
    </ul></details> | 

    | OtherFeesCharges| Contains details of fees and charges which are not
    associated with either Overdraft or features/benefits|
    array[[OBBCAData1_OtherFeesCharges](#OBBCAData1_OtherFeesCharges)]|

     <a name=OBBalanceType1Code></a> 
    ## OBBalanceType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Balance type, in a coded form.| <ul style="padding-left:
    0"><li>ClosingAvailable</li><li>ClosingBooked</li><li>ClosingCleared</li><li>Expected</li><li>ForwardAvailable</li><li>Information</li><li>InterimAvailable</li><li>InterimBooked</li><li>InterimCleared</li><li>OpeningAvailable</li><li>OpeningBooked</li><li>OpeningCleared</li><li>PreviouslyClosedBooked</li></ul>|

     <a name=OBBankTransactionCodeStructure1></a> 
    ## OBBankTransactionCodeStructure1 

    Set of elements used to fully identify the type of underlying transaction
    resulting in an entry. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| Specifies the family within a domain.| string|

    | SubCode| Specifies the sub-product family within a specific family.|
    string|

     <a name=OBBeneficiary3></a> 
    ## OBBeneficiary3 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | BeneficiaryId| A unique and immutable identifier used to identify the
    beneficiary resource. This identifier has no meaning to the account owner.|
    string|

    | Reference| Unique reference, as assigned by the creditor, to unambiguously
    refer to the payment transaction.

    Usage: If available, the initiating party should provide this reference in
    the structured remittance information, to enable reconciliation by the
    creditor upon receipt of the amount of money.

    If the business context requires the use of a creditor reference or a
    payment remit identification, and only one identifier can be passed through
    the end-to-end chain, the creditor's reference or payment remittance
    identification should be quoted in the end-to-end transaction
    identification.| string|

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification6](#OBBranchAndFinancialInstitutionIdentification6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li><details><summary>PostalAddress
    [[OBPostalAddress6](#OBPostalAddress6)]</summary><ul><li><details><summary>AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li><li>Department
    [string]</li> <li>SubDepartment [string]</li> <li>StreetName [string]</li>
    <li>BuildingNumber [string]</li> <li>PostCode [string]</li> <li>TownName
    [string]</li> <li>CountrySubDivision [string]</li> <li>Country [string]</li>
    <li>AddressLine [array]</li> </ul></details></li></ul></details> | 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount5](#OBCashAccount5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

     <a name=OBBeneficiary3Basic></a> 
    ## OBBeneficiary3Basic 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | BeneficiaryId| A unique and immutable identifier used to identify the
    beneficiary resource. This identifier has no meaning to the account owner.|
    string|

    | Reference| Unique reference, as assigned by the creditor, to unambiguously
    refer to the payment transaction.

    Usage: If available, the initiating party should provide this reference in
    the structured remittance information, to enable reconciliation by the
    creditor upon receipt of the amount of money.

    If the business context requires the use of a creditor reference or a
    payment remit identification, and only one identifier can be passed through
    the end-to-end chain, the creditor's reference or payment remittance
    identification should be quoted in the end-to-end transaction
    identification.| string|

     <a name=OBBeneficiary3Detail></a> 
    ## OBBeneficiary3Detail 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | BeneficiaryId| A unique and immutable identifier used to identify the
    beneficiary resource. This identifier has no meaning to the account owner.|
    string|

    | Reference| Unique reference, as assigned by the creditor, to unambiguously
    refer to the payment transaction.

    Usage: If available, the initiating party should provide this reference in
    the structured remittance information, to enable reconciliation by the
    creditor upon receipt of the amount of money.

    If the business context requires the use of a creditor reference or a
    payment remit identification, and only one identifier can be passed through
    the end-to-end chain, the creditor's reference or payment remittance
    identification should be quoted in the end-to-end transaction
    identification.| string|

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification6](#OBBranchAndFinancialInstitutionIdentification6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li><details><summary>PostalAddress
    [[OBPostalAddress6](#OBPostalAddress6)]</summary><ul><li><details><summary>AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li><li>Department
    [string]</li> <li>SubDepartment [string]</li> <li>StreetName [string]</li>
    <li>BuildingNumber [string]</li> <li>PostCode [string]</li> <li>TownName
    [string]</li> <li>CountrySubDivision [string]</li> <li>Country [string]</li>
    <li>AddressLine [array]</li> </ul></details></li></ul></details> | 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount5](#OBCashAccount5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

     <a name=OBCashBalance1></a> 
    ## OBCashBalance1 

    Set of elements used to define the balance details. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | CreditDebitIndicator| Indicates whether the balance is a credit or a debit
    balance. 

    Usage: A zero balance is considered to be a credit balance.| string|

    | Type | Entity |
    <details><summary>[OBBalanceType1Code](#OBBalanceType1Code)</summary><ul></ul></details>
    | 

    | DateTime| Indicates the date (and time) of the balance.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | CreditLine| Set of elements used to provide details on the credit line.|
    array[[OBCreditLine1](#OBCreditLine1)]|

     <a name=OBCreditDebitCode></a> 
    ## OBCreditDebitCode 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| -| <ul style="padding-left: 0"><li>Credit</li><li>Debit</li></ul>|

     <a name=OBCreditLine1></a> 
    ## OBCreditLine1 

    Set of elements used to provide details on the credit line. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Included| Indicates whether or not the credit line is included in the
    balance of the account.

    Usage: If not present, credit line is not included in the balance amount of
    the account.| boolean|

    | Type | Entity |
    <details><summary>[OBExternalLimitType1Code](#OBExternalLimitType1Code)</summary><ul></ul></details>
    | 

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=OBCurrencyExchange5></a> 
    ## OBCurrencyExchange5 

    Set of elements used to provide details on the currency exchange. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | SourceCurrency| Currency from which an amount is to be converted in a
    currency conversion.| string|

    | TargetCurrency| Currency from which an amount is to be converted in a
    currency conversion.| string|

    | UnitCurrency| Currency from which an amount is to be converted in a
    currency conversion.| string|

    | ExchangeRate| Factor used to convert an amount from one currency into
    another. This reflects the price at which one currency was bought with
    another currency.

    Usage: ExchangeRate expresses the ratio between UnitCurrency and
    QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).| number|

    | ContractIdentification| Unique identification to unambiguously identify
    the foreign exchange contract.| string|

    | QuotationDate| Date and time at which an exchange rate is quoted.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | InstructedAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=OBDirectDebit1></a> 
    ## OBDirectDebit1 

    Account to or from which a cash entry is made. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | DirectDebitId| A unique and immutable identifier used to identify the
    direct debit resource. This identifier has no meaning to the account owner.|
    string|

    | MandateIdentification| Direct Debit reference. For AUDDIS service users
    provide Core Reference. For non AUDDIS service users provide Core reference
    if possible or last used reference.| string|

    | DirectDebitStatusCode | Entity |
    <details><summary>[OBExternalDirectDebitStatus1Code](#OBExternalDirectDebitStatus1Code)</summary><ul></ul></details>
    | 

    | Name| Name of Service User.| string|

    | PreviousPaymentDateTime| Date of most recent direct debit collection.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | PreviousPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=OBEntryStatus1Code></a> 
    ## OBEntryStatus1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Status of a transaction entry on the books of the account servicer.|
    <ul style="padding-left: 0"><li>Booked</li><li>Pending</li></ul>|

     <a name=OBExternalAccountSubType1Code></a> 
    ## OBExternalAccountSubType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the sub type of account (product family group).| <ul
    style="padding-left:
    0"><li>ChargeCard</li><li>CreditCard</li><li>CurrentAccount</li><li>EMoney</li><li>Loan</li><li>Mortgage</li><li>PrePaidCard</li><li>Savings</li></ul>|

     <a name=OBExternalAccountType1Code></a> 
    ## OBExternalAccountType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the type of account (personal or business).| <ul
    style="padding-left: 0"><li>Business</li><li>Personal</li></ul>|

     <a name=OBExternalCardAuthorisationType1Code></a> 
    ## OBExternalCardAuthorisationType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| The card authorisation type.| <ul style="padding-left:
    0"><li>ConsumerDevice</li><li>Contactless</li><li>None</li><li>PIN</li></ul>|

     <a name=OBExternalCardSchemeType1Code></a> 
    ## OBExternalCardSchemeType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Name of the card scheme.| <ul style="padding-left:
    0"><li>AmericanExpress</li><li>Diners</li><li>Discover</li><li>MasterCard</li><li>VISA</li></ul>|

     <a name=OBExternalDirectDebitStatus1Code></a> 
    ## OBExternalDirectDebitStatus1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the status of the direct debit in code form.| <ul
    style="padding-left: 0"><li>Active</li><li>Inactive</li></ul>|

     <a name=OBExternalLimitType1Code></a> 
    ## OBExternalLimitType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Limit type, in a coded form.| <ul style="padding-left:
    0"><li>Available</li><li>Credit</li><li>Emergency</li><li>Pre-Agreed</li><li>Temporary</li></ul>|

     <a name=OBExternalOfferType1Code></a> 
    ## OBExternalOfferType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Offer type, in a coded form.| <ul style="padding-left:
    0"><li>BalanceTransfer</li><li>LimitIncrease</li><li>MoneyTransfer</li><li>Other</li><li>PromotionalRate</li></ul>|

     <a name=OBExternalPartyType1Code></a> 
    ## OBExternalPartyType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Party type, in a coded form.| <ul style="padding-left:
    0"><li>Delegate</li><li>Joint</li><li>Sole</li></ul>|

     <a name=OBExternalPermissions1Code></a> 
    ## OBExternalPermissions1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the Open Banking account access data types. This is a list
    of the data clusters being consented by the PSU, and requested for
    authorisation with the ASPSP.| <ul style="padding-left:
    0"><li>ReadAccountsBasic</li><li>ReadAccountsDetail</li><li>ReadBalances</li><li>ReadBeneficiariesBasic</li><li>ReadBeneficiariesDetail</li><li>ReadDirectDebits</li><li>ReadOffers</li><li>ReadPAN</li><li>ReadParty</li><li>ReadPartyPSU</li><li>ReadProducts</li><li>ReadScheduledPaymentsBasic</li><li>ReadScheduledPaymentsDetail</li><li>ReadStandingOrdersBasic</li><li>ReadStandingOrdersDetail</li><li>ReadStatementsBasic</li><li>ReadStatementsDetail</li><li>ReadTransactionsBasic</li><li>ReadTransactionsCredits</li><li>ReadTransactionsDebits</li><li>ReadTransactionsDetail</li></ul>|

     <a name=OBExternalProductType1Code></a> 
    ## OBExternalProductType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Descriptive code for the product category. 

    If ProductType - "Other" is chosen, the object OtherProductType must be
    populated with name, and description.| <ul style="padding-left:
    0"><li>BusinessCurrentAccount</li><li>CommercialCreditCard</li><li>Other</li><li>PersonalCurrentAccount</li><li>SMELoan</li></ul>|

     <a name=OBExternalRequestStatus1Code></a> 
    ## OBExternalRequestStatus1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the status of consent resource in code form.| <ul
    style="padding-left:
    0"><li>Authorised</li><li>AwaitingAuthorisation</li><li>Rejected</li><li>Revoked</li></ul>|

     <a name=OBExternalScheduleType1Code></a> 
    ## OBExternalScheduleType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the scheduled payment date type requested| <ul
    style="padding-left: 0"><li>Arrival</li><li>Execution</li></ul>|

     <a name=OBExternalStandingOrderStatus1Code></a> 
    ## OBExternalStandingOrderStatus1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Specifies the status of the standing order in code form.| <ul
    style="padding-left: 0"><li>Active</li><li>Inactive</li></ul>|

     <a name=OBExternalStatementType1Code></a> 
    ## OBExternalStatementType1Code 

    ### Attributes 


    | Type| Description| Example| Values|

    | -----| -----| -----| -----|

    | enum| Statement type, in a coded form.| <ul style="padding-left:
    0"><li>AccountClosure</li><li>AccountOpening</li><li>Annual</li><li>Interim</li><li>RegularPeriodic</li></ul>|

     <a name=OBMerchantDetails1></a> 
    ## OBMerchantDetails1 

    Details of the merchant involved in the transaction. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | MerchantName| Name by which the merchant is known.| string|

    | MerchantCategoryCode| Category code conform to ISO 18245, related to the
    type of services or goods the merchant provides for the transaction.|
    string|

     <a name=OBOffer1></a> 
    ## OBOffer1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | OfferId| A unique and immutable identifier used to identify the offer
    resource. This identifier has no meaning to the account owner.| string|

    | OfferType | Entity |
    <details><summary>[OBExternalOfferType1Code](#OBExternalOfferType1Code)</summary><ul></ul></details>
    | 

    | Description| Further details of the offer.| string|

    | StartDateTime| Date and time at which the offer starts.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | EndDateTime| Date and time at which the offer ends.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | Rate| Rate associated with the offer type.| string|

    | Value| Value associated with the offer type.| integer|

    | Term| Further details of the term of the offer.| string|

    | URL| URL (Uniform Resource Locator) where documentation on the offer can
    be found| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | Fee | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=OBPCAData1></a> 
    ## OBPCAData1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | ProductDetails | Entity |
    <details><summary>[ProductDetails_1](#ProductDetails_1)</summary><ul><li>Segment
    [array]</li> <li>MonthlyMaximumCharge [string]</li> <li>Notes [array]</li>
    </ul></details> | 

    | CreditInterest | Entity |
    <details><summary>[CreditInterest_1](#CreditInterest_1)</summary><ul><li>TierBandSet
    [array[[CreditInterest_1_TierBandSet](#CreditInterest_1_TierBandSet)]]</li>
    </ul></details> | 

    | Overdraft | Entity |
    <details><summary>[Overdraft_1](#Overdraft_1)</summary><ul><li>Notes
    [array]</li> <li>OverdraftTierBandSet
    [array[[Overdraft_1_OverdraftTierBandSet](#Overdraft_1_OverdraftTierBandSet)]]</li>
    </ul></details> | 

    | OtherFeesCharges | Entity |
    <details><summary>[OtherFeesCharges](#OtherFeesCharges)</summary><ul><li>FeeChargeDetail
    [array[[OtherFeesCharges_FeeChargeDetail](#OtherFeesCharges_FeeChargeDetail)]]</li>
    <li>FeeChargeCap
    [array[[OtherFeesCharges_FeeChargeCap](#OtherFeesCharges_FeeChargeCap)]]</li>
    </ul></details> | 

     <a name=OBParty1></a> 
    ## OBParty1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | PartyId| A unique and immutable identifier used to identify the customer
    resource. This identifier has no meaning to the account owner.| string|

    | PartyNumber| Number assigned by an agent to identify its customer.|
    string|

    | PartyType | Entity |
    <details><summary>[OBExternalPartyType1Code](#OBExternalPartyType1Code)</summary><ul></ul></details>
    | 

    | Name| Name by which a party is known and which is usually used to identify
    that party.| string|

    | EmailAddress| Address for electronic mail (e-mail).| string|

    | Phone| Collection of information that identifies a phone number, as
    defined by telecom services.| string|

    | Mobile| Collection of information that identifies a mobile phone number,
    as defined by telecom services.| string|

    | Address| Postal address of a party.|
    array[[OBPostalAddress8](#OBPostalAddress8)]|

     <a name=OBPostalAddress6></a> 
    ## OBPostalAddress6 

    Information that locates and identifies a specific address, as defined by
    postal services. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AddressType | Entity |
    <details><summary>[OBAddressTypeCode](#OBAddressTypeCode)</summary><ul></ul></details>
    | 

    | Department| Identification of a division of a large organisation or
    building.| string|

    | SubDepartment| Identification of a sub-division of a large organisation or
    building.| string|

    | StreetName| Name of a street or thoroughfare.| string|

    | BuildingNumber| Number that identifies the position of a building on a
    street.| string|

    | PostCode| Identifier consisting of a group of letters and/or numbers that
    is added to a postal address to assist the sorting of mail.| string|

    | TownName| Name of a built-up area, with defined boundaries, and a local
    government.| string|

    | CountrySubDivision| Identifies a subdivision of a country such as state,
    region, county.| string|

    | Country| Nation with its own government.| string|

    | AddressLine| Information that locates and identifies a specific address,
    as defined by postal services, presented in free format text.| array|

     <a name=OBPostalAddress8></a> 
    ## OBPostalAddress8 

    Postal address of a party. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AddressType | Entity |
    <details><summary>[OBAddressTypeCode](#OBAddressTypeCode)</summary><ul></ul></details>
    | 

    | AddressLine| Information that locates and identifies a specific address,
    as defined by postal services, that is presented in free format text.|
    array|

    | StreetName| Name of a street or thoroughfare.| string|

    | BuildingNumber| Number that identifies the position of a building on a
    street.| string|

    | PostCode| Identifier consisting of a group of letters and/or numbers that
    is added to a postal address to assist the sorting of mail.| string|

    | TownName| Name of a built-up area, with defined boundaries, and a local
    government.| string|

    | CountrySubDivision| Identifies a subdivision of a country eg, state,
    region, county.| string|

    | Country| Nation with its own government, occupying a particular
    territory.| string|

     <a name=OBProduct2></a> 
    ## OBProduct2 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | ProductName| The name of the product used for marketing purposes from a
    customer perspective. I.e. what the customer would recognise.| string|

    | ProductId| Identifier within the parent organisation for the product. Must
    be unique in the organisation.| string|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | SecondaryProductId| Identifier within the parent organisation for the
    product. Must be unique in the organisation.| string|

    | ProductType | Entity |
    <details><summary>[OBExternalProductType1Code](#OBExternalProductType1Code)</summary><ul></ul></details>
    | 

    | MarketingStateId| Unique and unambiguous identification of a Product
    Marketing State.| string|

    | OtherProductType | Entity |
    <details><summary>[OBOtherProductType1](#OBOtherProductType1)</summary><ul><li>Name
    [string]</li> <li>Description [string]</li> </ul></details> | 

    | BCA | Entity |
    <details><summary>[OBBCAData1](#OBBCAData1)</summary><ul><li><details><summary>ProductDetails
    [[ProductDetails](#ProductDetails)]</summary><ul><li>Segment [array]</li>
    <li>FeeFreeLength [number]</li> <li>FeeFreeLengthPeriod [string]</li>
    <li>Notes [array]</li>
    </ul></details></li><li><details><summary>CreditInterest
    [[CreditInterest](#CreditInterest)]</summary><ul><li>TierBandSet
    [array[[CreditInterest_TierBandSet](#CreditInterest_TierBandSet)]]</li>
    </ul></details></li><li><details><summary>Overdraft
    [[Overdraft](#Overdraft)]</summary><ul><li>Notes [array]</li>
    <li>OverdraftTierBandSet
    [array[[Overdraft_OverdraftTierBandSet](#Overdraft_OverdraftTierBandSet)]]</li>
    </ul></details></li><li>OtherFeesCharges
    [array[[OBBCAData1_OtherFeesCharges](#OBBCAData1_OtherFeesCharges)]]</li>
    </ul></details> | 

    | PCA | Entity |
    <details><summary>[OBPCAData1](#OBPCAData1)</summary><ul><li><details><summary>ProductDetails
    [[ProductDetails_1](#ProductDetails_1)]</summary><ul><li>Segment
    [array]</li> <li>MonthlyMaximumCharge [string]</li> <li>Notes [array]</li>
    </ul></details></li><li><details><summary>CreditInterest
    [[CreditInterest_1](#CreditInterest_1)]</summary><ul><li>TierBandSet
    [array[[CreditInterest_1_TierBandSet](#CreditInterest_1_TierBandSet)]]</li>
    </ul></details></li><li><details><summary>Overdraft
    [[Overdraft_1](#Overdraft_1)]</summary><ul><li>Notes [array]</li>
    <li>OverdraftTierBandSet
    [array[[Overdraft_1_OverdraftTierBandSet](#Overdraft_1_OverdraftTierBandSet)]]</li>
    </ul></details></li><li><details><summary>OtherFeesCharges
    [[OtherFeesCharges](#OtherFeesCharges)]</summary><ul><li>FeeChargeDetail
    [array[[OtherFeesCharges_FeeChargeDetail](#OtherFeesCharges_FeeChargeDetail)]]</li>
    <li>FeeChargeCap
    [array[[OtherFeesCharges_FeeChargeCap](#OtherFeesCharges_FeeChargeCap)]]</li>
    </ul></details></li></ul></details> | 

     <a name=OBReadAccount3></a> 
    ## OBReadAccount3 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadAccount3_Data](#OBReadAccount3_Data)</summary><ul><li>Account
    [array[[OBAccount3](#OBAccount3)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadBalance1></a> 
    ## OBReadBalance1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadBalance1_Data](#OBReadBalance1_Data)</summary><ul><li>Balance
    [array[[OBCashBalance1](#OBCashBalance1)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadBeneficiary3></a> 
    ## OBReadBeneficiary3 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadBeneficiary3_Data](#OBReadBeneficiary3_Data)</summary><ul><li>Beneficiary
    [array[[OBBeneficiary3](#OBBeneficiary3)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadConsent1></a> 
    ## OBReadConsent1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data| -| object|

    | Risk| The Risk section is sent by the initiating party to the ASPSP. It is
    used to specify additional details for risk scoring for Account Info.|
    object|

     <a name=OBReadConsentResponse1></a> 
    ## OBReadConsentResponse1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadConsentResponse1_Data](#OBReadConsentResponse1_Data)</summary><ul><li>ConsentId
    [string]</li> <li>CreationDateTime [string]</li>
    <li><details><summary>Status
    [[OBExternalRequestStatus1Code](#OBExternalRequestStatus1Code)]</summary><ul></ul></details></li><li>StatusUpdateDateTime
    [string]</li> <li>Permissions
    [array[[OBExternalPermissions1Code](#OBExternalPermissions1Code)]]</li>
    <li>ExpirationDateTime [string]</li> <li>TransactionFromDateTime
    [string]</li> <li>TransactionToDateTime [string]</li> </ul></details> | 

    | Risk | Entity |
    <details><summary>[OBRisk2](#OBRisk2)</summary><ul></ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadData1></a> 
    ## OBReadData1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Permissions| Specifies the Open Banking account access data types. This is
    a list of the data clusters being consented by the PSU, and requested for
    authorisation with the ASPSP.| array|

    | ExpirationDateTime| Specified date and time the permissions will expire.

    If this is not populated, the permissions will be open ended.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | TransactionFromDateTime| Specified start date and time for the transaction
    query period.

    If this is not populated, the start date will be open ended, and data will
    be returned from the earliest available transaction.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | TransactionToDateTime| Specified end date and time for the transaction
    query period.

    If this is not populated, the end date will be open ended, and data will be
    returned to the latest available transaction.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

     <a name=OBReadDirectDebit1></a> 
    ## OBReadDirectDebit1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadDirectDebit1_Data](#OBReadDirectDebit1_Data)</summary><ul><li>DirectDebit
    [array[[OBDirectDebit1](#OBDirectDebit1)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadOffer1></a> 
    ## OBReadOffer1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadOffer1_Data](#OBReadOffer1_Data)</summary><ul><li>Offer
    [array[[OBOffer1](#OBOffer1)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadParty1></a> 
    ## OBReadParty1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadParty1_Data](#OBReadParty1_Data)</summary><ul><li><details><summary>Party
    [[OBParty1](#OBParty1)]</summary><ul><li>PartyId [string]</li>
    <li>PartyNumber [string]</li> <li><details><summary>PartyType
    [[OBExternalPartyType1Code](#OBExternalPartyType1Code)]</summary><ul></ul></details></li><li>Name
    [string]</li> <li>EmailAddress [string]</li> <li>Phone [string]</li>
    <li>Mobile [string]</li> <li>Address
    [array[[OBPostalAddress8](#OBPostalAddress8)]]</li>
    </ul></details></li></ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadProduct2></a> 
    ## OBReadProduct2 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadProduct2_Data](#OBReadProduct2_Data)</summary><ul><li>Product
    [array[[OBProduct2](#OBProduct2)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadScheduledPayment2></a> 
    ## OBReadScheduledPayment2 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadScheduledPayment2_Data](#OBReadScheduledPayment2_Data)</summary><ul><li>ScheduledPayment
    [array[[OBScheduledPayment2](#OBScheduledPayment2)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadStandingOrder4></a> 
    ## OBReadStandingOrder4 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadStandingOrder4_Data](#OBReadStandingOrder4_Data)</summary><ul><li>StandingOrder
    [array[[OBStandingOrder4](#OBStandingOrder4)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadStatement1></a> 
    ## OBReadStatement1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadStatement1_Data](#OBReadStatement1_Data)</summary><ul><li>Statement
    [array[[OBStatement1](#OBStatement1)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBReadTransaction4></a> 
    ## OBReadTransaction4 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Data | Entity |
    <details><summary>[OBReadTransaction4_Data](#OBReadTransaction4_Data)</summary><ul><li>Transaction
    [array[[OBTransaction4](#OBTransaction4)]]</li> </ul></details> | 

    | Links | Entity | <details><summary>[Links](#Links)</summary><ul><li>Self
    [string]</li> <li>First [string]</li> <li>Prev [string]</li> <li>Next
    [string]</li> <li>Last [string]</li> </ul></details> | 

    | Meta | Entity |
    <details><summary>[Meta](#Meta)</summary><ul><li>TotalPages [integer]</li>
    <li><details><summary>FirstAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li><li><details><summary>LastAvailableDateTime
    [[ISODateTime](#ISODateTime)]</summary><ul></ul></details></li></ul></details>
    | 

     <a name=OBScheduledPayment2></a> 
    ## OBScheduledPayment2 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | ScheduledPaymentId| A unique and immutable identifier used to identify the
    scheduled payment resource. This identifier has no meaning to the account
    owner.| string|

    | ScheduledPaymentDateTime| The date on which the scheduled payment will be
    made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | ScheduledType | Entity |
    <details><summary>[OBExternalScheduleType1Code](#OBExternalScheduleType1Code)</summary><ul></ul></details>
    | 

    | Reference| Unique reference, as assigned by the creditor, to unambiguously
    refer to the payment transaction.

    Usage: If available, the initiating party should provide this reference in
    the structured remittance information, to enable reconciliation by the
    creditor upon receipt of the amount of money.

    If the business context requires the use of a creditor reference or a
    payment remit identification, and only one identifier can be passed through
    the end-to-end chain, the creditor's reference or payment remittance
    identification should be quoted in the end-to-end transaction
    identification.| string|

    | InstructedAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification5](#OBBranchAndFinancialInstitutionIdentification5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> </ul></details> | 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount5](#OBCashAccount5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

     <a name=OBScheduledPayment2Basic></a> 
    ## OBScheduledPayment2Basic 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | ScheduledPaymentId| A unique and immutable identifier used to identify the
    scheduled payment resource. This identifier has no meaning to the account
    owner.| string|

    | ScheduledPaymentDateTime| The date on which the scheduled payment will be
    made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | ScheduledType | Entity |
    <details><summary>[OBExternalScheduleType1Code](#OBExternalScheduleType1Code)</summary><ul></ul></details>
    | 

    | Reference| Unique reference, as assigned by the creditor, to unambiguously
    refer to the payment transaction.

    Usage: If available, the initiating party should provide this reference in
    the structured remittance information, to enable reconciliation by the
    creditor upon receipt of the amount of money.

    If the business context requires the use of a creditor reference or a
    payment remit identification, and only one identifier can be passed through
    the end-to-end chain, the creditor's reference or payment remittance
    identification should be quoted in the end-to-end transaction
    identification.| string|

    | InstructedAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=OBScheduledPayment2Detail></a> 
    ## OBScheduledPayment2Detail 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | ScheduledPaymentId| A unique and immutable identifier used to identify the
    scheduled payment resource. This identifier has no meaning to the account
    owner.| string|

    | ScheduledPaymentDateTime| The date on which the scheduled payment will be
    made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | ScheduledType | Entity |
    <details><summary>[OBExternalScheduleType1Code](#OBExternalScheduleType1Code)</summary><ul></ul></details>
    | 

    | Reference| Unique reference, as assigned by the creditor, to unambiguously
    refer to the payment transaction.

    Usage: If available, the initiating party should provide this reference in
    the structured remittance information, to enable reconciliation by the
    creditor upon receipt of the amount of money.

    If the business context requires the use of a creditor reference or a
    payment remit identification, and only one identifier can be passed through
    the end-to-end chain, the creditor's reference or payment remittance
    identification should be quoted in the end-to-end transaction
    identification.| string|

    | InstructedAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification5](#OBBranchAndFinancialInstitutionIdentification5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> </ul></details> | 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount5](#OBCashAccount5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

     <a name=OBStandingOrder4></a> 
    ## OBStandingOrder4 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | StandingOrderId| A unique and immutable identifier used to identify the
    standing order resource. This identifier has no meaning to the account
    owner.| string|

    | Frequency| Individual Definitions:

    EvryDay - Every day

    EvryWorkgDay - Every working day

    IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within
    the week (01 to 07)

    WkInMnthDay - A monthly interval, specifying the week of the month (01 to
    05) and day within the week (01 to 07)

    IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24),
    specifying the day within the month (-5 to -1, 1 to 31)

    QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)

    ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th
    December. 

    SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.

    RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th
    December. 

    Individual Patterns:

    EvryDay (ScheduleCode)

    EvryWorkgDay (ScheduleCode)

    IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks +
    DayInWeek)

    WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)

    IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths +
    DayInMonth)

    QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay

    The regular expression for this element combines five smaller versions for
    each permitted pattern. To aid legibility - the components are presented
    individually here:

    EvryDay

    EvryWorkgDay

    IntrvlWkDay:0[1-9]:0[1-7]

    WkInMnthDay:0[1-5]:0[1-7]

    IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])

    QtrDay:(ENGLISH|SCOTTISH|RECEIVED)

    Full Regular Expression:

    ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$|
    string|

    | Reference| Unique reference, as assigned by the creditor, to unambiguously
    refer to the payment transaction.

    Usage: If available, the initiating party should provide this reference in
    the structured remittance information, to enable reconciliation by the
    creditor upon receipt of the amount of money.

    If the business context requires the use of a creditor reference or a
    payment remit identification, and only one identifier can be passed through
    the end-to-end chain, the creditor's reference or payment remittance
    identification should be quoted in the end-to-end transaction
    identification.| string|

    | FirstPaymentDateTime| The date on which the first payment for a Standing
    Order schedule will be made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | NextPaymentDateTime| The date on which the next payment for a Standing
    Order schedule will be made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | FinalPaymentDateTime| The date on which the final payment for a Standing
    Order schedule will be made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | StandingOrderStatusCode | Entity |
    <details><summary>[OBExternalStandingOrderStatus1Code](#OBExternalStandingOrderStatus1Code)</summary><ul></ul></details>
    | 

    | FirstPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | NextPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | FinalPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><ul></ul></details>
    | 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification5](#OBBranchAndFinancialInstitutionIdentification5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> </ul></details> | 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount5](#OBCashAccount5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

     <a name=OBStandingOrder4Basic></a> 
    ## OBStandingOrder4Basic 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | StandingOrderId| A unique and immutable identifier used to identify the
    standing order resource. This identifier has no meaning to the account
    owner.| string|

    | Frequency| Individual Definitions:

    EvryDay - Every day

    EvryWorkgDay - Every working day

    IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within
    the week (01 to 07)

    WkInMnthDay - A monthly interval, specifying the week of the month (01 to
    05) and day within the week (01 to 07)

    IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24),
    specifying the day within the month (-5 to -1, 1 to 31)

    QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)

    ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th
    December. 

    SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.

    RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th
    December. 

    Individual Patterns:

    EvryDay (ScheduleCode)

    EvryWorkgDay (ScheduleCode)

    IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks +
    DayInWeek)

    WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)

    IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths +
    DayInMonth)

    QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay

    The regular expression for this element combines five smaller versions for
    each permitted pattern. To aid legibility - the components are presented
    individually here:

    EvryDay

    EvryWorkgDay

    IntrvlWkDay:0[1-9]:0[1-7]

    WkInMnthDay:0[1-5]:0[1-7]

    IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])

    QtrDay:(ENGLISH|SCOTTISH|RECEIVED)

    Full Regular Expression:

    ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$|
    string|

    | Reference| Unique reference, as assigned by the creditor, to unambiguously
    refer to the payment transaction.

    Usage: If available, the initiating party should provide this reference in
    the structured remittance information, to enable reconciliation by the
    creditor upon receipt of the amount of money.

    If the business context requires the use of a creditor reference or a
    payment remit identification, and only one identifier can be passed through
    the end-to-end chain, the creditor's reference or payment remittance
    identification should be quoted in the end-to-end transaction
    identification.| string|

    | FirstPaymentDateTime| The date on which the first payment for a Standing
    Order schedule will be made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | NextPaymentDateTime| The date on which the next payment for a Standing
    Order schedule will be made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | FinalPaymentDateTime| The date on which the final payment for a Standing
    Order schedule will be made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | StandingOrderStatusCode | Entity |
    <details><summary>[OBExternalStandingOrderStatus1Code](#OBExternalStandingOrderStatus1Code)</summary><ul></ul></details>
    | 

    | FirstPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | NextPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | FinalPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><ul></ul></details>
    | 

     <a name=OBStandingOrder4Detail></a> 
    ## OBStandingOrder4Detail 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | StandingOrderId| A unique and immutable identifier used to identify the
    standing order resource. This identifier has no meaning to the account
    owner.| string|

    | Frequency| Individual Definitions:

    EvryDay - Every day

    EvryWorkgDay - Every working day

    IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within
    the week (01 to 07)

    WkInMnthDay - A monthly interval, specifying the week of the month (01 to
    05) and day within the week (01 to 07)

    IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24),
    specifying the day within the month (-5 to -1, 1 to 31)

    QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)

    ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th
    December. 

    SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.

    RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th
    December. 

    Individual Patterns:

    EvryDay (ScheduleCode)

    EvryWorkgDay (ScheduleCode)

    IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks +
    DayInWeek)

    WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)

    IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths +
    DayInMonth)

    QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay

    The regular expression for this element combines five smaller versions for
    each permitted pattern. To aid legibility - the components are presented
    individually here:

    EvryDay

    EvryWorkgDay

    IntrvlWkDay:0[1-9]:0[1-7]

    WkInMnthDay:0[1-5]:0[1-7]

    IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])

    QtrDay:(ENGLISH|SCOTTISH|RECEIVED)

    Full Regular Expression:

    ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$|
    string|

    | Reference| Unique reference, as assigned by the creditor, to unambiguously
    refer to the payment transaction.

    Usage: If available, the initiating party should provide this reference in
    the structured remittance information, to enable reconciliation by the
    creditor upon receipt of the amount of money.

    If the business context requires the use of a creditor reference or a
    payment remit identification, and only one identifier can be passed through
    the end-to-end chain, the creditor's reference or payment remittance
    identification should be quoted in the end-to-end transaction
    identification.| string|

    | FirstPaymentDateTime| The date on which the first payment for a Standing
    Order schedule will be made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | NextPaymentDateTime| The date on which the next payment for a Standing
    Order schedule will be made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | FinalPaymentDateTime| The date on which the final payment for a Standing
    Order schedule will be made.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | StandingOrderStatusCode | Entity |
    <details><summary>[OBExternalStandingOrderStatus1Code](#OBExternalStandingOrderStatus1Code)</summary><ul></ul></details>
    | 

    | FirstPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | NextPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | FinalPaymentAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><ul></ul></details>
    | 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification5](#OBBranchAndFinancialInstitutionIdentification5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> </ul></details> | 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount5](#OBCashAccount5)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

     <a name=OBStatement1></a> 
    ## OBStatement1 

    Provides further details on a statement resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | StatementId| Unique identifier for the statement resource within an
    servicing institution. This identifier is both unique and immutable.|
    string|

    | StatementReference| Unique reference for the statement. This reference may
    be optionally populated if available.| string|

    | Type | Entity |
    <details><summary>[OBExternalStatementType1Code](#OBExternalStatementType1Code)</summary><ul></ul></details>
    | 

    | StartDateTime| Date and time at which the statement period starts.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | EndDateTime| Date and time at which the statement period ends.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | CreationDateTime| Date and time at which the resource was created.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | StatementDescription| Other descriptions that may be available for the
    statement resource.| array|

    | StatementBenefit| Set of elements used to provide details of a benefit or
    reward amount for the statement resource.|
    array[[OBStatementBenefit1](#OBStatementBenefit1)]|

    | StatementFee| Set of elements used to provide details of a fee for the
    statement resource.| array[[OBStatementFee1](#OBStatementFee1)]|

    | StatementInterest| Set of elements used to provide details of a generic
    interest amount related to the statement resource.|
    array[[OBStatementInterest1](#OBStatementInterest1)]|

    | StatementDateTime| Set of elements used to provide details of a generic
    date time for the statement resource.|
    array[[OBStatementDateTime1](#OBStatementDateTime1)]|

    | StatementRate| Set of elements used to provide details of a generic rate
    related to the statement resource.|
    array[[OBStatementRate1](#OBStatementRate1)]|

    | StatementValue| Set of elements used to provide details of a generic
    number value related to the statement resource.|
    array[[OBStatementValue1](#OBStatementValue1)]|

    | StatementAmount| Set of elements used to provide details of a generic
    amount for the statement resource.|
    array[[OBStatementAmount1](#OBStatementAmount1)]|

     <a name=OBStatement1Basic></a> 
    ## OBStatement1Basic 

    Provides further details on a statement resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | StatementId| Unique identifier for the statement resource within an
    servicing institution. This identifier is both unique and immutable.|
    string|

    | StatementReference| Unique reference for the statement. This reference may
    be optionally populated if available.| string|

    | Type | Entity |
    <details><summary>[OBExternalStatementType1Code](#OBExternalStatementType1Code)</summary><ul></ul></details>
    | 

    | StartDateTime| Date and time at which the statement period starts.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | EndDateTime| Date and time at which the statement period ends.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | CreationDateTime| Date and time at which the resource was created.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | StatementDescription| Other descriptions that may be available for the
    statement resource.| array|

    | StatementBenefit| Set of elements used to provide details of a benefit or
    reward amount for the statement resource.|
    array[[OBStatementBenefit1](#OBStatementBenefit1)]|

    | StatementFee| Set of elements used to provide details of a fee for the
    statement resource.| array[[OBStatementFee1](#OBStatementFee1)]|

    | StatementInterest| Set of elements used to provide details of a generic
    interest amount related to the statement resource.|
    array[[OBStatementInterest1](#OBStatementInterest1)]|

    | StatementDateTime| Set of elements used to provide details of a generic
    date time for the statement resource.|
    array[[OBStatementDateTime1](#OBStatementDateTime1)]|

    | StatementRate| Set of elements used to provide details of a generic rate
    related to the statement resource.|
    array[[OBStatementRate1](#OBStatementRate1)]|

    | StatementValue| Set of elements used to provide details of a generic
    number value related to the statement resource.|
    array[[OBStatementValue1](#OBStatementValue1)]|

     <a name=OBStatement1Detail></a> 
    ## OBStatement1Detail 

    Provides further details on a statement resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | StatementId| Unique identifier for the statement resource within an
    servicing institution. This identifier is both unique and immutable.|
    string|

    | StatementReference| Unique reference for the statement. This reference may
    be optionally populated if available.| string|

    | Type | Entity |
    <details><summary>[OBExternalStatementType1Code](#OBExternalStatementType1Code)</summary><ul></ul></details>
    | 

    | StartDateTime| Date and time at which the statement period starts.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | EndDateTime| Date and time at which the statement period ends.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | CreationDateTime| Date and time at which the resource was created.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | StatementDescription| Other descriptions that may be available for the
    statement resource.| array|

    | StatementBenefit| Set of elements used to provide details of a benefit or
    reward amount for the statement resource.|
    array[[OBStatementBenefit1](#OBStatementBenefit1)]|

    | StatementFee| Set of elements used to provide details of a fee for the
    statement resource.| array[[OBStatementFee1](#OBStatementFee1)]|

    | StatementInterest| Set of elements used to provide details of a generic
    interest amount related to the statement resource.|
    array[[OBStatementInterest1](#OBStatementInterest1)]|

    | StatementDateTime| Set of elements used to provide details of a generic
    date time for the statement resource.|
    array[[OBStatementDateTime1](#OBStatementDateTime1)]|

    | StatementRate| Set of elements used to provide details of a generic rate
    related to the statement resource.|
    array[[OBStatementRate1](#OBStatementRate1)]|

    | StatementValue| Set of elements used to provide details of a generic
    number value related to the statement resource.|
    array[[OBStatementValue1](#OBStatementValue1)]|

    | StatementAmount| Set of elements used to provide details of a generic
    amount for the statement resource.|
    array[[OBStatementAmount1](#OBStatementAmount1)]|

     <a name=OBStatementAmount1></a> 
    ## OBStatementAmount1 

    Set of elements used to provide details of a generic amount for the
    statement resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | CreditDebitIndicator| Indicates whether the amount is a credit or a
    debit. 

    Usage: A zero amount is considered to be a credit amount.| string|

    | Type | Entity |
    <details><summary>[OBExternalStatementAmountType1Code](#OBExternalStatementAmountType1Code)</summary><ul></ul></details>
    | 

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=OBStatementBenefit1></a> 
    ## OBStatementBenefit1 

    Set of elements used to provide details of a benefit or reward amount for
    the statement resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Type | Entity |
    <details><summary>[OBExternalStatementBenefitType1Code](#OBExternalStatementBenefitType1Code)</summary><ul></ul></details>
    | 

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=OBStatementDateTime1></a> 
    ## OBStatementDateTime1 

    Set of elements used to provide details of a generic date time for the
    statement resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | DateTime| Date and time associated with the date time type.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | Type | Entity |
    <details><summary>[OBExternalStatementDateTimeType1Code](#OBExternalStatementDateTimeType1Code)</summary><ul></ul></details>
    | 

     <a name=OBStatementFee1></a> 
    ## OBStatementFee1 

    Set of elements used to provide details of a fee for the statement
    resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | CreditDebitIndicator| Indicates whether the amount is a credit or a
    debit. 

    Usage: A zero amount is considered to be a credit amount.| string|

    | Type | Entity |
    <details><summary>[OBExternalStatementFeeType1Code](#OBExternalStatementFeeType1Code)</summary><ul></ul></details>
    | 

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=OBStatementInterest1></a> 
    ## OBStatementInterest1 

    Set of elements used to provide details of a generic interest amount related
    to the statement resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | CreditDebitIndicator| Indicates whether the amount is a credit or a
    debit. 

    Usage: A zero amount is considered to be a credit amount.| string|

    | Type | Entity |
    <details><summary>[OBExternalStatementInterestType1Code](#OBExternalStatementInterestType1Code)</summary><ul></ul></details>
    | 

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=OBStatementRate1></a> 
    ## OBStatementRate1 

    Set of elements used to provide details of a generic rate related to the
    statement resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Rate| Rate associated with the statement rate type.| string|

    | Type | Entity |
    <details><summary>[OBExternalStatementRateType1Code](#OBExternalStatementRateType1Code)</summary><ul></ul></details>
    | 

     <a name=OBStatementValue1></a> 
    ## OBStatementValue1 

    Set of elements used to provide details of a generic number value related to
    the statement resource. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Value| Value associated with the statement value type.| integer|

    | Type | Entity |
    <details><summary>[OBExternalStatementValueType1Code](#OBExternalStatementValueType1Code)</summary><ul></ul></details>
    | 

     <a name=OBTransaction4></a> 
    ## OBTransaction4 

    Provides further details on an entry in the report. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | TransactionId| Unique identifier for the transaction within an servicing
    institution. This identifier is both unique and immutable.| string|

    | TransactionReference| Unique reference for the transaction. This reference
    is optionally populated, and may as an example be the FPID in the Faster
    Payments context.| string|

    | StatementReference| Unique reference for the statement. This reference may
    be optionally populated if available.| array|

    | CreditDebitIndicator| Indicates whether the transaction is a credit or a
    debit entry.| string|

    | Status | Entity |
    <details><summary>[OBEntryStatus1Code](#OBEntryStatus1Code)</summary><ul></ul></details>
    | 

    | BookingDateTime| Date and time when a transaction entry is posted to an
    account on the account servicer's books.

    Usage: Booking date is the expected booking date, unless the status is
    booked, in which case it is the actual booking date.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | ValueDateTime| Date and time at which assets become available to the
    account owner in case of a credit entry, or cease to be available to the
    account owner in case of a debit transaction entry.

    Usage: If transaction entry status is pending and value date is present,
    then the value date refers to an expected/requested value date.

    For transaction entries subject to availability/float and for which
    availability information is provided, the value date must not be used. In
    this case the availability component identifies the number of availability
    days.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | AddressLine| Information that locates and identifies a specific address
    for a transaction entry, that is presented in free format text.| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | ChargeAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | CurrencyExchange | Entity |
    <details><summary>[OBCurrencyExchange5](#OBCurrencyExchange5)</summary><ul><li>SourceCurrency
    [string]</li> <li>TargetCurrency [string]</li> <li>UnitCurrency
    [string]</li> <li>ExchangeRate [number]</li> <li>ContractIdentification
    [string]</li> <li>QuotationDate [string]</li>
    <li><details><summary>InstructedAmount
    [[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)]</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details></li></ul></details> | 

    | BankTransactionCode | Entity |
    <details><summary>[OBBankTransactionCodeStructure1](#OBBankTransactionCodeStructure1)</summary><ul><li>Code
    [string]</li> <li>SubCode [string]</li> </ul></details> | 

    | ProprietaryBankTransactionCode | Entity |
    <details><summary>[OBTransaction4_ProprietaryBankTransactionCode](#OBTransaction4_ProprietaryBankTransactionCode)</summary><ul><li>Code
    [string]</li> <li>Issuer [string]</li> </ul></details> | 

    | CardInstrument | Entity |
    <details><summary>[OBTransactionCardInstrument1](#OBTransactionCardInstrument1)</summary><ul><li><details><summary>CardSchemeName
    [[OBExternalCardSchemeType1Code](#OBExternalCardSchemeType1Code)]</summary><ul></ul></details></li><li><details><summary>AuthorisationType
    [[OBExternalCardAuthorisationType1Code](#OBExternalCardAuthorisationType1Code)]</summary><ul></ul></details></li><li>Name
    [string]</li> <li>Identification [string]</li> </ul></details> | 

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><ul></ul></details>
    | 

    | TransactionInformation | Entity |
    <details><summary>[TransactionInformation](#TransactionInformation)</summary><ul></ul></details>
    | 

    | Balance | Entity |
    <details><summary>[OBTransactionCashBalance](#OBTransactionCashBalance)</summary><ul><li>CreditDebitIndicator
    [string]</li> <li><details><summary>Type
    [[OBBalanceType1Code](#OBBalanceType1Code)]</summary><ul></ul></details></li><li><details><summary>Amount
    [[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)]</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details></li></ul></details> | 

    | MerchantDetails | Entity |
    <details><summary>[OBMerchantDetails1](#OBMerchantDetails1)</summary><ul><li>MerchantName
    [string]</li> <li>MerchantCategoryCode [string]</li> </ul></details> | 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification6](#OBBranchAndFinancialInstitutionIdentification6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li><details><summary>PostalAddress
    [[OBPostalAddress6](#OBPostalAddress6)]</summary><ul><li><details><summary>AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li><li>Department
    [string]</li> <li>SubDepartment [string]</li> <li>StreetName [string]</li>
    <li>BuildingNumber [string]</li> <li>PostCode [string]</li> <li>TownName
    [string]</li> <li>CountrySubDivision [string]</li> <li>Country [string]</li>
    <li>AddressLine [array]</li> </ul></details></li></ul></details> | 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount6](#OBCashAccount6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

    | DebtorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification6](#OBBranchAndFinancialInstitutionIdentification6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li><details><summary>PostalAddress
    [[OBPostalAddress6](#OBPostalAddress6)]</summary><ul><li><details><summary>AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li><li>Department
    [string]</li> <li>SubDepartment [string]</li> <li>StreetName [string]</li>
    <li>BuildingNumber [string]</li> <li>PostCode [string]</li> <li>TownName
    [string]</li> <li>CountrySubDivision [string]</li> <li>Country [string]</li>
    <li>AddressLine [array]</li> </ul></details></li></ul></details> | 

    | DebtorAccount | Entity |
    <details><summary>[OBCashAccount6](#OBCashAccount6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

     <a name=OBTransaction4Basic></a> 
    ## OBTransaction4Basic 

    Provides further details on an entry in the report. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | TransactionId| Unique identifier for the transaction within an servicing
    institution. This identifier is both unique and immutable.| string|

    | TransactionReference| Unique reference for the transaction. This reference
    is optionally populated, and may as an example be the FPID in the Faster
    Payments context.| string|

    | StatementReference| Unique reference for the statement. This reference may
    be optionally populated if available.| array|

    | CreditDebitIndicator| Indicates whether the transaction is a credit or a
    debit entry.| string|

    | Status | Entity |
    <details><summary>[OBEntryStatus1Code](#OBEntryStatus1Code)</summary><ul></ul></details>
    | 

    | BookingDateTime| Date and time when a transaction entry is posted to an
    account on the account servicer's books.

    Usage: Booking date is the expected booking date, unless the status is
    booked, in which case it is the actual booking date.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | ValueDateTime| Date and time at which assets become available to the
    account owner in case of a credit entry, or cease to be available to the
    account owner in case of a debit transaction entry.

    Usage: If transaction entry status is pending and value date is present,
    then the value date refers to an expected/requested value date.

    For transaction entries subject to availability/float and for which
    availability information is provided, the value date must not be used. In
    this case the availability component identifies the number of availability
    days.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | AddressLine| Information that locates and identifies a specific address
    for a transaction entry, that is presented in free format text.| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | ChargeAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | CurrencyExchange | Entity |
    <details><summary>[OBCurrencyExchange5](#OBCurrencyExchange5)</summary><ul><li>SourceCurrency
    [string]</li> <li>TargetCurrency [string]</li> <li>UnitCurrency
    [string]</li> <li>ExchangeRate [number]</li> <li>ContractIdentification
    [string]</li> <li>QuotationDate [string]</li>
    <li><details><summary>InstructedAmount
    [[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)]</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details></li></ul></details> | 

    | BankTransactionCode | Entity |
    <details><summary>[OBBankTransactionCodeStructure1](#OBBankTransactionCodeStructure1)</summary><ul><li>Code
    [string]</li> <li>SubCode [string]</li> </ul></details> | 

    | ProprietaryBankTransactionCode | Entity |
    <details><summary>[OBTransaction4_ProprietaryBankTransactionCode](#OBTransaction4_ProprietaryBankTransactionCode)</summary><ul><li>Code
    [string]</li> <li>Issuer [string]</li> </ul></details> | 

    | CardInstrument | Entity |
    <details><summary>[OBTransactionCardInstrument1](#OBTransactionCardInstrument1)</summary><ul><li><details><summary>CardSchemeName
    [[OBExternalCardSchemeType1Code](#OBExternalCardSchemeType1Code)]</summary><ul></ul></details></li><li><details><summary>AuthorisationType
    [[OBExternalCardAuthorisationType1Code](#OBExternalCardAuthorisationType1Code)]</summary><ul></ul></details></li><li>Name
    [string]</li> <li>Identification [string]</li> </ul></details> | 

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><ul></ul></details>
    | 

     <a name=OBTransaction4Detail></a> 
    ## OBTransaction4Detail 

    Provides further details on an entry in the report. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | AccountId | Entity |
    <details><summary>[AccountId](#AccountId)</summary><ul></ul></details> | 

    | TransactionId| Unique identifier for the transaction within an servicing
    institution. This identifier is both unique and immutable.| string|

    | TransactionReference| Unique reference for the transaction. This reference
    is optionally populated, and may as an example be the FPID in the Faster
    Payments context.| string|

    | StatementReference| Unique reference for the statement. This reference may
    be optionally populated if available.| array|

    | CreditDebitIndicator| Indicates whether the transaction is a credit or a
    debit entry.| string|

    | Status | Entity |
    <details><summary>[OBEntryStatus1Code](#OBEntryStatus1Code)</summary><ul></ul></details>
    | 

    | BookingDateTime| Date and time when a transaction entry is posted to an
    account on the account servicer's books.

    Usage: Booking date is the expected booking date, unless the status is
    booked, in which case it is the actual booking date.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | ValueDateTime| Date and time at which assets become available to the
    account owner in case of a credit entry, or cease to be available to the
    account owner in case of a debit transaction entry.

    Usage: If transaction entry status is pending and value date is present,
    then the value date refers to an expected/requested value date.

    For transaction entries subject to availability/float and for which
    availability information is provided, the value date must not be used. In
    this case the availability component identifies the number of availability
    days.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | AddressLine| Information that locates and identifies a specific address
    for a transaction entry, that is presented in free format text.| string|

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | ChargeAmount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

    | CurrencyExchange | Entity |
    <details><summary>[OBCurrencyExchange5](#OBCurrencyExchange5)</summary><ul><li>SourceCurrency
    [string]</li> <li>TargetCurrency [string]</li> <li>UnitCurrency
    [string]</li> <li>ExchangeRate [number]</li> <li>ContractIdentification
    [string]</li> <li>QuotationDate [string]</li>
    <li><details><summary>InstructedAmount
    [[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)]</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details></li></ul></details> | 

    | BankTransactionCode | Entity |
    <details><summary>[OBBankTransactionCodeStructure1](#OBBankTransactionCodeStructure1)</summary><ul><li>Code
    [string]</li> <li>SubCode [string]</li> </ul></details> | 

    | ProprietaryBankTransactionCode | Entity |
    <details><summary>[OBTransaction4_ProprietaryBankTransactionCode](#OBTransaction4_ProprietaryBankTransactionCode)</summary><ul><li>Code
    [string]</li> <li>Issuer [string]</li> </ul></details> | 

    | CardInstrument | Entity |
    <details><summary>[OBTransactionCardInstrument1](#OBTransactionCardInstrument1)</summary><ul><li><details><summary>CardSchemeName
    [[OBExternalCardSchemeType1Code](#OBExternalCardSchemeType1Code)]</summary><ul></ul></details></li><li><details><summary>AuthorisationType
    [[OBExternalCardAuthorisationType1Code](#OBExternalCardAuthorisationType1Code)]</summary><ul></ul></details></li><li>Name
    [string]</li> <li>Identification [string]</li> </ul></details> | 

    | SupplementaryData | Entity |
    <details><summary>[OBSupplementaryData1](#OBSupplementaryData1)</summary><ul></ul></details>
    | 

    | TransactionInformation | Entity |
    <details><summary>[TransactionInformation](#TransactionInformation)</summary><ul></ul></details>
    | 

    | Balance | Entity |
    <details><summary>[OBTransactionCashBalance](#OBTransactionCashBalance)</summary><ul><li>CreditDebitIndicator
    [string]</li> <li><details><summary>Type
    [[OBBalanceType1Code](#OBBalanceType1Code)]</summary><ul></ul></details></li><li><details><summary>Amount
    [[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)]</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details></li></ul></details> | 

    | MerchantDetails | Entity |
    <details><summary>[OBMerchantDetails1](#OBMerchantDetails1)</summary><ul><li>MerchantName
    [string]</li> <li>MerchantCategoryCode [string]</li> </ul></details> | 

    | CreditorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification6](#OBBranchAndFinancialInstitutionIdentification6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li><details><summary>PostalAddress
    [[OBPostalAddress6](#OBPostalAddress6)]</summary><ul><li><details><summary>AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li><li>Department
    [string]</li> <li>SubDepartment [string]</li> <li>StreetName [string]</li>
    <li>BuildingNumber [string]</li> <li>PostCode [string]</li> <li>TownName
    [string]</li> <li>CountrySubDivision [string]</li> <li>Country [string]</li>
    <li>AddressLine [array]</li> </ul></details></li></ul></details> | 

    | CreditorAccount | Entity |
    <details><summary>[OBCashAccount6](#OBCashAccount6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

    | DebtorAgent | Entity |
    <details><summary>[OBBranchAndFinancialInstitutionIdentification6](#OBBranchAndFinancialInstitutionIdentification6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li><details><summary>PostalAddress
    [[OBPostalAddress6](#OBPostalAddress6)]</summary><ul><li><details><summary>AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li><li>Department
    [string]</li> <li>SubDepartment [string]</li> <li>StreetName [string]</li>
    <li>BuildingNumber [string]</li> <li>PostCode [string]</li> <li>TownName
    [string]</li> <li>CountrySubDivision [string]</li> <li>Country [string]</li>
    <li>AddressLine [array]</li> </ul></details></li></ul></details> | 

    | DebtorAccount | Entity |
    <details><summary>[OBCashAccount6](#OBCashAccount6)</summary><ul><li><details><summary>SchemeName
    [[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)]</summary><ul></ul></details></li><li>Identification
    [string]</li> <li>Name [string]</li> <li>SecondaryIdentification
    [string]</li> </ul></details> | 

     <a name=OBTransactionCardInstrument1></a> 
    ## OBTransactionCardInstrument1 

    Set of elements to describe the card instrument used in the transaction. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | CardSchemeName | Entity |
    <details><summary>[OBExternalCardSchemeType1Code](#OBExternalCardSchemeType1Code)</summary><ul></ul></details>
    | 

    | AuthorisationType | Entity |
    <details><summary>[OBExternalCardAuthorisationType1Code](#OBExternalCardAuthorisationType1Code)</summary><ul></ul></details>
    | 

    | Name| Name of the cardholder using the card instrument.| string|

    | Identification| Identification assigned by an institution to identify the
    card instrument used in the transaction. This identification is known by the
    account owner, and may be masked.| string|

     <a name=OBTransactionCashBalance></a> 
    ## OBTransactionCashBalance 

    Set of elements used to define the balance as a numerical representation of
    the net increases and decreases in an account after a transaction entry is
    applied to the account. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | CreditDebitIndicator| Indicates whether the balance is a credit or a debit
    balance. 

    Usage: A zero balance is considered to be a credit balance.| string|

    | Type | Entity |
    <details><summary>[OBBalanceType1Code](#OBBalanceType1Code)</summary><ul></ul></details>
    | 

    | Amount | Entity |
    <details><summary>[OBActiveOrHistoricCurrencyAndAmount](#OBActiveOrHistoricCurrencyAndAmount)</summary><ul><li><details><summary>Amount
    [[OBActiveCurrencyAndAmount_SimpleType](#OBActiveCurrencyAndAmount_SimpleType)]</summary><ul></ul></details></li><li>Currency
    [string]</li> </ul></details> | 

     <a name=TransactionInformation></a> 
    ## TransactionInformation 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Further details of the transaction. 

    This is the transaction narrative, which is unstructured text.|

     <a name=OBOtherProductType1></a> 
    ## OBOtherProductType1 

    This field provides extension to the ProductType enumeration.

    If ProductType - "Other" is chosen, this field must be populated with name,
    and description for ASPSP specific product type. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Name| Name of "Other" product type.| string|

    | Description| Description of "Other" product type.| string|

     <a name=OBSupplementaryData1></a> 
    ## OBSupplementaryData1 

    Additional information that can not be captured in the structured fields
    and/or any other specific block. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

     <a name=OBBranchAndFinancialInstitutionIdentification5></a> 
    ## OBBranchAndFinancialInstitutionIdentification5 

    Party that manages the account on behalf of the account owner, that is
    manages the registration and booking of entries on the account, calculates
    balances on the account and provides information about the account.

    This is the servicer of the beneficiary account. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | SchemeName | Entity |
    <details><summary>[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)</summary><ul></ul></details>
    | 

    | Identification| Unique and unambiguous identification of the servicing
    institution.| string|

     <a name=OBExternalFinancialInstitutionIdentification4Code></a> 
    ## OBExternalFinancialInstitutionIdentification4Code 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Name of the identification scheme, in a coded form as published in
    an external list.| UK.OBIE.BICFI|

     <a name=OBCashAccount5></a> 
    ## OBCashAccount5 

    Provides the details to identify the beneficiary account. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | SchemeName | Entity |
    <details><summary>[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)</summary><ul></ul></details>
    | 

    | Identification| Beneficiary account identification.| string|

    | Name| Name of the account, as assigned by the account servicing
    institution.

    Usage: The account name is the name or names of the account owner(s)
    represented at an account level. The account name is not the product name or
    the nickname of the account.| string|

    | SecondaryIdentification| This is secondary identification of the account,
    as assigned by the account servicing institution. 

    This can be used by building societies to additionally identify accounts
    with a roll number (in addition to a sort code and account number
    combination).| string|

     <a name=OBCashAccount6></a> 
    ## OBCashAccount6 

    Unambiguous identification of the account of the debtor, in the case of a
    crebit transaction. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | SchemeName | Entity |
    <details><summary>[OBExternalAccountIdentification4Code](#OBExternalAccountIdentification4Code)</summary><ul></ul></details>
    | 

    | Identification| Identification assigned by an institution to identify an
    account. This identification is known by the account owner.| string|

    | Name| Name of the account, as assigned by the account servicing
    institution.

    Usage: The account name is the name or names of the account owner(s)
    represented at an account level. The account name is not the product name or
    the nickname of the account.| string|

    | SecondaryIdentification| This is secondary identification of the account,
    as assigned by the account servicing institution. 

    This can be used by building societies to additionally identify accounts
    with a roll number (in addition to a sort code and account number
    combination).| string|

     <a name=OBExternalAccountIdentification4Code></a> 
    ## OBExternalAccountIdentification4Code 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Name of the identification scheme, in a coded form as published in
    an external list.|
    UK.OBIE.BBAN,UK.OBIE.IBAN,UK.OBIE.PAN,UK.OBIE.Paym,UK.OBIE.SortCodeAccountNumber|

     <a name=OBExternalStatementBenefitType1Code></a> 
    ## OBExternalStatementBenefitType1Code 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Benefit type, in a coded form.|
    UK.OBIE.Cashback,UK.OBIE.Insurance,UK.OBIE.TravelDiscount,UK.OBIE.TravelInsurance|

     <a name=OBExternalStatementFeeType1Code></a> 
    ## OBExternalStatementFeeType1Code 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Fee type, in a coded form.|
    UK.OBIE.Annual,UK.OBIE.BalanceTransfer,UK.OBIE.CashAdvance,UK.OBIE.CashTransaction,UK.OBIE.ForeignCashTransaction,UK.OBIE.ForeignTransaction,UK.OBIE.Gambling,UK.OBIE.LatePayment,UK.OBIE.MoneyTransfer,UK.OBIE.Monthly,UK.OBIE.Overlimit,UK.OBIE.PostalOrder,UK.OBIE.PrizeEntry,UK.OBIE.StatementCopy,UK.OBIE.Total|

     <a name=OBExternalStatementInterestType1Code></a> 
    ## OBExternalStatementInterestType1Code 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Interest amount type, in a coded form.|
    UK.OBIE.BalanceTransfer,UK.OBIE.Cash,UK.OBIE.EstimatedNext,UK.OBIE.Purchase,UK.OBIE.Total|

     <a name=OBExternalStatementDateTimeType1Code></a> 
    ## OBExternalStatementDateTimeType1Code 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Date time type, in a coded form.|
    UK.OBIE.BalanceTransferPromoEnd,UK.OBIE.DirectDebitDue,UK.OBIE.LastPayment,UK.OBIE.LastStatement,UK.OBIE.NextStatement,UK.OBIE.PaymentDue,UK.OBIE.PurchasePromoEnd,UK.OBIE.StatementAvailable|

     <a name=OBExternalStatementRateType1Code></a> 
    ## OBExternalStatementRateType1Code 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Statement rate type, in a coded form.|
    UK.OBIE.AnnualBalanceTransfer,UK.OBIE.AnnualBalanceTransferAfterPromo,UK.OBIE.AnnualBalanceTransferPromo,UK.OBIE.AnnualCash,UK.OBIE.AnnualPurchase,UK.OBIE.AnnualPurchaseAfterPromo,UK.OBIE.AnnualPurchasePromo,UK.OBIE.MonthlyBalanceTransfer,UK.OBIE.MonthlyCash,UK.OBIE.MonthlyPurchase|

     <a name=OBExternalStatementValueType1Code></a> 
    ## OBExternalStatementValueType1Code 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Statement value type, in a coded form.|
    UK.OBIE.AirMilesPoints,UK.OBIE.AirMilesPointsBalance,UK.OBIE.Credits,UK.OBIE.Debits,UK.OBIE.HotelPoints,UK.OBIE.HotelPointsBalance,UK.OBIE.RetailShoppingPoints,UK.OBIE.RetailShoppingPointsBalance|

     <a name=OBExternalStatementAmountType1Code></a> 
    ## OBExternalStatementAmountType1Code 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| Amount type, in a coded form.|
    UK.OBIE.ArrearsClosingBalance,UK.OBIE.AvailableBalance,UK.OBIE.AverageBalanceWhenInCredit,UK.OBIE.AverageBalanceWhenInDebit,UK.OBIE.AverageDailyBalance,UK.OBIE.BalanceTransferClosingBalance,UK.OBIE.CashClosingBalance,UK.OBIE.ClosingBalance,UK.OBIE.CreditLimit,UK.OBIE.CurrentPayment,UK.OBIE.DirectDebitPaymentDue,UK.OBIE.FSCSInsurance,UK.OBIE.MinimumPaymentDue,UK.OBIE.PendingTransactionsBalance,UK.OBIE.PreviousClosingBalance,UK.OBIE.PreviousPayment,UK.OBIE.PurchaseClosingBalance,UK.OBIE.StartingBalance,UK.OBIE.TotalAdjustments,UK.OBIE.TotalCashAdvances,UK.OBIE.TotalCharges,UK.OBIE.TotalCredits,UK.OBIE.TotalDebits,UK.OBIE.TotalPurchases|

     <a name=OBBranchAndFinancialInstitutionIdentification6></a> 
    ## OBBranchAndFinancialInstitutionIdentification6 

    Financial institution servicing an account for the debtor. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | SchemeName | Entity |
    <details><summary>[OBExternalFinancialInstitutionIdentification4Code](#OBExternalFinancialInstitutionIdentification4Code)</summary><ul></ul></details>
    | 

    | Identification| Unique and unambiguous identification of a financial
    institution or a branch of a financial institution.| string|

    | Name| Name by which an agent is known and which is usually used to
    identify that agent.| string|

    | PostalAddress | Entity |
    <details><summary>[OBPostalAddress6](#OBPostalAddress6)</summary><ul><li><details><summary>AddressType
    [[OBAddressTypeCode](#OBAddressTypeCode)]</summary><ul></ul></details></li><li>Department
    [string]</li> <li>SubDepartment [string]</li> <li>StreetName [string]</li>
    <li>BuildingNumber [string]</li> <li>PostCode [string]</li> <li>TownName
    [string]</li> <li>CountrySubDivision [string]</li> <li>Country [string]</li>
    <li>AddressLine [array]</li> </ul></details> | 

     <a name=OBError1></a> 
    ## OBError1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | ErrorCode| Low level textual error code, e.g., UK.OBIE.Field.Missing|
    string|

    | Message| A description of the error that occurred. e.g., 'A mandatory
    field isn't supplied' or 'RequestedExecutionDateTime must be in future'

    OBIE doesn't standardise this field| string|

    | Path| Recommended but optional reference to the JSON Path of the field
    with error, e.g., Data.Initiation.InstructedAmount.Currency| string|

    | Url| URL to help remediate the problem, or provide more information, or to
    API Reference, or help etc| string|

     <a name=OBErrorResponse1></a> 
    ## OBErrorResponse1 

    An array of detail error codes, and messages, and URLs to documentation to
    help remediation. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| High level textual error code, to help categorize the errors.|
    string|

    | Id| A unique reference for the error instance, for audit purposes, in case
    of unknown/unclassified errors.| string|

    | Message| Brief Error message, e.g., 'There is something wrong with the
    request parameters provided'| string|

    | Errors| -| array[[OBError1](#OBError1)]|

     <a name=ISODateTime></a> 
    ## ISODateTime 

    ### Attributes 


    | Type| Description| Example|

    | -----| -----| -----|

    | string| All dates in the JSON payloads are represented in ISO 8601
    date-time format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00|

     <a name=Links></a> 
    ## Links 

    Links relevant to the payload 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Self| -| string|

    | First| -| string|

    | Prev| -| string|

    | Next| -| string|

    | Last| -| string|

     <a name=Meta></a> 
    ## Meta 

    Meta Data relevant to the payload 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | TotalPages| -| integer|

    | FirstAvailableDateTime | Entity |
    <details><summary>[ISODateTime](#ISODateTime)</summary><ul></ul></details>
    | 

    | LastAvailableDateTime | Entity |
    <details><summary>[ISODateTime](#ISODateTime)</summary><ul></ul></details>
    | 

     <a name=OBRisk2></a> 
    ## OBRisk2 

    The Risk section is sent by the initiating party to the ASPSP. It is used to
    specify additional details for risk scoring for Account Info. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

     <a name=SandboxRequest></a> 
    ## SandboxRequest 

    The root of the SandboxRequest type's schema. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | sandboxId| your sandbox id| string|

     <a name=SandboxDataModel></a> 
    ## SandboxDataModel 

    Sandbox Data Model 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | sandboxId| -| string|

    | users| -| array|

     <a name=ProductDetails></a> 
    ## ProductDetails 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Segment| Market segmentation is a marketing term referring to the
    aggregating of prospective buyers into groups, or segments, that have common
    needs and respond similarly to a marketing action. Market segmentation
    enables companies to target different categories of consumers who perceive
    the full value of certain products and services differently from one
    another.


    Read more: Market Segmentation
    http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 

    With respect to BCA products, they are segmented in relation to different
    markets that they wish to focus on. | array|

    | FeeFreeLength| The length/duration of the fee free period| number|

    | FeeFreeLengthPeriod| The unit of period (days, weeks, months etc.) of the
    promotional length| string|

    | Notes| Optional additional notes to supplement the Core product details|
    array|

     <a name=OtherBankInterestType></a> 
    ## OtherBankInterestType 

    Other interest rate types which are not available in the standard code list 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=OtherApplicationFrequency></a> 
    ## OtherApplicationFrequency 

    Other application frequencies that are not available in the standard code
    list 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=OtherCalculationFrequency></a> 
    ## OtherCalculationFrequency 

    Other calculation frequency which is not available in the standard code
    set. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=CreditInterest_TierBand></a> 
    ## CreditInterest_TierBand 

    Tier Band Details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Identification| Unique and unambiguous identification of a  Tier Band for
    a BCA.| string|

    | TierValueMinimum| Minimum deposit value for which the credit interest tier
    applies.| string|

    | TierValueMaximum| Maximum deposit value for which the credit interest tier
    applies.| string|

    | CalculationFrequency| How often is credit interest calculated for the
    account.| string|

    | ApplicationFrequency| How often is interest applied to the BCA for this
    tier/band i.e. how often the financial institution pays accumulated interest
    to the customer's BCA.| string|

    | DepositInterestAppliedCoverage| Amount on which Interest applied.| string|

    | FixedVariableInterestRateType| Type of interest rate, Fixed or Variable|
    string|

    | AER| The annual equivalent rate (AER) is interest that is calculated under
    the assumption that any interest paid is combined with the original balance
    and the next interest payment will be based on the slightly higher account
    balance. Overall, this means that interest can be compounded several times
    in a year depending on the number of times that interest payments are made. 


    Read more: Annual Equivalent Rate (AER)
    http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A| string|

    | BankInterestRateType| Interest rate types, other than AER, which financial
    institutions may use to describe the annual interest rate payable to the
    BCA.| string|

    | BankInterestRate| Bank Interest for the BCA product| string|

    | Notes| Optional additional notes to supplement the Tier Band details|
    array|

    | OtherBankInterestType | Entity |
    <details><summary>[OtherBankInterestType](#OtherBankInterestType)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OtherApplicationFrequency](#OtherApplicationFrequency)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OtherCalculationFrequency](#OtherCalculationFrequency)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

     <a name=CreditInterest_TierBandSet></a> 
    ## CreditInterest_TierBandSet 

    The group of tiers or bands for which credit interest can be applied. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandMethod| The methodology of how credit interest is paid/applied. It
    can be:-


    1. Banded

    Interest rates are banded. i.e. Increasing rate on whole balance as balance
    increases.


    2. Tiered

    Interest rates are tiered. i.e. increasing rate for each tier as balance
    increases, but interest paid on tier fixed for that tier and not on whole
    balance.


    3. Whole

    The same interest rate is applied irrespective of the BCA balance| string|

    | CalculationMethod| Methods of calculating interest| string|

    | Destination| Describes whether accrued interest is payable only to the BCA
    or to another bank account| string|

    | Notes| Optional additional notes to supplement the Tier Band Set details|
    array|

    | TierBand| Tier Band Details|
    array[[CreditInterest_TierBand](#CreditInterest_TierBand)]|

     <a name=CreditInterest></a> 
    ## CreditInterest 

    Details about the interest that may be payable to the BCA account holders 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandSet| The group of tiers or bands for which credit interest can be
    applied.| array[[CreditInterest_TierBandSet](#CreditInterest_TierBandSet)]|

     <a name=Overdraft_OtherFeeType></a> 
    ## Overdraft_OtherFeeType 

    Other fee type code which is not available in the standard code set 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=Overdraft_OverdraftFeeChargeCap></a> 
    ## Overdraft_OverdraftFeeChargeCap 

    Details about any caps (maximum charges) that apply to a particular
    fee/charge. Capping can either be based on an amount (in gbp), an amount (in
    items) or a rate. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| Fee/charge type which is being capped| array|

    | MinMaxType| Min Max type| string|

    | FeeCapOccurrence| Indicates whether the advertised overdraft rate is
    guaranteed to be offered to a borrower by the bank e.g. if it’s part of a
    government scheme, or whether the rate may vary dependent on the applicant’s
    circumstances.| number|

    | FeeCapAmount| Cap amount charged for a fee/charge| string|

    | CappingPeriod| Period e.g. day, week, month etc. for which the fee/charge
    is capped| string|

    | Notes| Notes related to Overdraft fee charge cap| array|

    | OtherFeeType| Other fee type code which is not available in the standard
    code set| array[[Overdraft_OtherFeeType](#Overdraft_OtherFeeType)]|

     <a name=OtherFeeType></a> 
    ## OtherFeeType 

    Other Fee type which is not available in the standard code set 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=OtherFeeRateType></a> 
    ## OtherFeeRateType 

    Other fee rate type code which is not available in the standard code set 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=Overdraft_OverdraftFeeChargeDetail></a> 
    ## Overdraft_OverdraftFeeChargeDetail 

    Details about the fees/charges 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| Overdraft fee type| string|

    | NegotiableIndicator| Indicates whether fee and charges are negotiable|
    boolean|

    | OverdraftControlIndicator| Indicates if the fee/charge is already covered
    by an 'Overdraft Control' fee or not.| boolean|

    | IncrementalBorrowingAmount| Every additional tranche of an overdraft
    balance to which an overdraft fee is applied| string|

    | FeeAmount| Amount charged for an overdraft fee/charge (where it is charged
    in terms of an amount rather than a rate)| string|

    | FeeRate| Rate charged for overdraft fee/charge (where it is charged in
    terms of a rate rather than an amount)| string|

    | FeeRateType| Rate type for overdraft fee/charge (where it is charged in
    terms of a rate rather than an amount)| string|

    | ApplicationFrequency| Frequency at which the overdraft charge is applied
    to the account| string|

    | CalculationFrequency| How often is the overdraft fee/charge calculated for
    the account.| string|

    | Notes| Free text for capturing any other info related to Overdraft Fees
    Charge Details| array|

    | OverdraftFeeChargeCap| Details about any caps (maximum charges) that apply
    to a particular fee/charge. Capping can either be based on an amount (in
    gbp), an amount (in items) or a rate.|
    array[[Overdraft_OverdraftFeeChargeCap](#Overdraft_OverdraftFeeChargeCap)]|

    | OtherFeeType | Entity |
    <details><summary>[OtherFeeType](#OtherFeeType)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherFeeRateType | Entity |
    <details><summary>[OtherFeeRateType](#OtherFeeRateType)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OtherApplicationFrequency](#OtherApplicationFrequency)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OtherCalculationFrequency](#OtherCalculationFrequency)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

     <a name=Overdraft_OverdraftFeesCharges></a> 
    ## Overdraft_OverdraftFeesCharges 

    Overdraft fees and charges 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | OverdraftFeeChargeCap| Details about any caps (maximum charges) that apply
    to a particular fee/charge. Capping can either be based on an amount (in
    gbp), an amount (in items) or a rate.|
    array[[Overdraft_OverdraftFeeChargeCap](#Overdraft_OverdraftFeeChargeCap)]|

    | OverdraftFeeChargeDetail| Details about the fees/charges|
    array[[Overdraft_OverdraftFeeChargeDetail](#Overdraft_OverdraftFeeChargeDetail)]|

     <a name=Overdraft_OverdraftTierBand></a> 
    ## Overdraft_OverdraftTierBand 

    Provides overdraft details for a specific tier or band 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Identification| Unique and unambiguous identification of a  Tier Band for
    a overdraft.| string|

    | TierValueMin| Minimum value of Overdraft Tier/Band| string|

    | TierValueMax| Maximum value of Overdraft Tier/Band| string|

    | EAR| EAR means Effective Annual Rate and/or Equivalent Annual Rate
    (frequently

    used interchangeably), being the actual annual interest rate of an
    Overdraft.| string|

    | AgreementLengthMin| Specifies the minimum length of a band for a fixed
    overdraft agreement| number|

    | AgreementLengthMax| Specifies the maximum length of a band for a fixed
    overdraft agreement| number|

    | AgreementPeriod| Specifies the period of a fixed length overdraft
    agreement| string|

    | OverdraftInterestChargingCoverage| Refers to which interest rate is
    applied when interests are tiered. For example, if an overdraft balance is
    £2k and the interest tiers are:- 0-£500 0.1%, 500-1000 0.2%, 1000-10000
    0.5%, then the applicable interest rate could either be 0.5% of the entire
    balance (since the account balance sits in the top interest tier) or
    (0.1%*500)+(0.2%*500)+(0.5%*1000). In the 1st situation, we say the interest
    is applied to the ‘Whole’ of the account balance,  and in the 2nd that it is
    ‘Tiered’.| string|

    | BankGuaranteedIndicator| Indicates whether the advertised overdraft rate
    is guaranteed to be offered to a borrower by the bank e.g. if it’s part of a
    government scheme, or whether the rate may vary dependent on the applicant’s
    circumstances.| boolean|

    | Notes| Optional additional notes to supplement the Tier/band details|
    array|

    | OverdraftFeesCharges| Overdraft fees and charges|
    array[[Overdraft_OverdraftFeesCharges](#Overdraft_OverdraftFeesCharges)]|

     <a name=Overdraft_OverdraftFeesCharges_1></a> 
    ## Overdraft_OverdraftFeesCharges_1 

    Overdraft fees and charges details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | OverdraftFeeChargeCap| Details about any caps (maximum charges) that apply
    to a particular fee/charge. Capping can either be based on an amount (in
    gbp), an amount (in items) or a rate.|
    array[[Overdraft_OverdraftFeeChargeCap](#Overdraft_OverdraftFeeChargeCap)]|

    | OverdraftFeeChargeDetail| Details about the fees/charges|
    array[[Overdraft_OverdraftFeeChargeDetail](#Overdraft_OverdraftFeeChargeDetail)]|

     <a name=Overdraft_OverdraftTierBandSet></a> 
    ## Overdraft_OverdraftTierBandSet 

    Tier band set details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandMethod| The methodology of how overdraft is charged. It can be:

    'Whole'  Where the same charge/rate is applied to the entirety of the
    overdraft balance (where charges are applicable). 

    'Tiered' Where different charges/rates are applied dependent on overdraft
    maximum and minimum balance amount tiers defined by the lending financial
    organisation

    'Banded' Where different charges/rates are applied dependent on overdraft
    maximum and minimum balance amount bands defined by a government
    organisation.| string|

    | OverdraftType| An overdraft can either be 'committed' which means that the
    facility cannot be withdrawn without reasonable notification before it's
    agreed end date, or 'on demand' which means that the financial institution
    can demand repayment at any point in time.| string|

    | Identification| Unique and unambiguous identification of a  Tier Band for
    a overdraft product.| string|

    | AuthorisedIndicator| Indicates if the Overdraft is authorised (Y) or
    unauthorised (N)| boolean|

    | BufferAmount| When a customer exceeds their credit limit, a financial
    institution will not charge the customer unauthorised overdraft charges if
    they do not exceed by more than the buffer amount. Note: Authorised
    overdraft charges may still apply.| string|

    | Notes| Optional additional notes to supplement the overdraft Tier Band Set
    details| array|

    | OverdraftTierBand| Provides overdraft details for a specific tier or band|
    array[[Overdraft_OverdraftTierBand](#Overdraft_OverdraftTierBand)]|

    | OverdraftFeesCharges| Overdraft fees and charges details|
    array[[Overdraft_OverdraftFeesCharges_1](#Overdraft_OverdraftFeesCharges_1)]|

     <a name=Overdraft></a> 
    ## Overdraft 

    Borrowing details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Notes| Associated Notes about the overdraft rates| array|

    | OverdraftTierBandSet| Tier band set details|
    array[[Overdraft_OverdraftTierBandSet](#Overdraft_OverdraftTierBandSet)]|

     <a name=OtherTariffType></a> 
    ## OtherTariffType 

    Other tariff type which is not in the standard list. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=OBBCAData1_FeeChargeCap></a> 
    ## OBBCAData1_FeeChargeCap 

    Details about any caps (maximum charges) that apply to a particular or group
    of fee/charge 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| Fee/charge type which is being capped| array|

    | MinMaxType| Min Max type| string|

    | FeeCapOccurrence| fee/charges are captured dependent on the number of
    occurrences rather than capped at a particular amount| number|

    | FeeCapAmount| Cap amount charged for a fee/charge (where it is charged in
    terms of an amount rather than a rate)| string|

    | CappingPeriod| Period e.g. day, week, month etc. for which the fee/charge
    is capped| string|

    | Notes| Free text for adding  extra details for fee charge cap| array|

    | OtherFeeType| Other fee type code which is not available in the standard
    code set| array[[Overdraft_OtherFeeType](#Overdraft_OtherFeeType)]|

     <a name=OtherFeeCategoryType></a> 
    ## OtherFeeCategoryType 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=OtherFeeType_1></a> 
    ## OtherFeeType_1 

    Other Fee/charge type which is not available in the standard code set 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | FeeCategory| Categorisation of fees and charges into standard categories.|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=OtherFeeRateType_1></a> 
    ## OtherFeeRateType_1 

    Other fee rate type which is not available in the standard code set 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=OtherApplicationFrequency_1></a> 
    ## OtherApplicationFrequency_1 

    Other application frequencies not covered in the standard code list 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=OtherCalculationFrequency_1></a> 
    ## OtherCalculationFrequency_1 

    Other calculation frequency which is not available in standard code set. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| The four letter Mnemonic used within an XML file to identify a code|
    string|

    | Name| Long name associated with the code| string|

    | Description| Description to describe the purpose of the code| string|

     <a name=FeeApplicableRange></a> 
    ## FeeApplicableRange 

    Range or amounts or rates for which the fee/charge applies 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | MinimumAmount| Minimum Amount on which fee/charge is applicable (where it
    is expressed as an amount)| string|

    | MaximumAmount| Maximum Amount on which fee is applicable (where it is
    expressed as an amount)| string|

    | MinimumRate| Minimum rate on which fee/charge is applicable(where it is
    expressed as an rate)| string|

    | MaximumRate| Maximum rate on which fee/charge is applicable(where it is
    expressed as an rate)| string|

     <a name=OBBCAData1_FeeChargeDetail></a> 
    ## OBBCAData1_FeeChargeDetail 

    Other fees/charges details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeCategory| Categorisation of fees and charges into standard categories.|
    string|

    | FeeType| Fee/Charge Type| string|

    | NegotiableIndicator| Fee/charge which is usually negotiable rather than a
    fixed amount| boolean|

    | FeeAmount| Fee Amount charged for a fee/charge (where it is charged in
    terms of an amount rather than a rate)| string|

    | FeeRate| Rate charged for Fee/Charge (where it is charged in terms of a
    rate rather than an amount)| string|

    | FeeRateType| Rate type for Fee/Charge (where it is charged in terms of a
    rate rather than an amount)| string|

    | ApplicationFrequency| How frequently the fee/charge is applied to the
    account| string|

    | CalculationFrequency| How frequently the fee/charge is calculated| string|

    | Notes| Optional additional notes to supplement the fee/charge details.|
    array|

    | FeeChargeCap| Details about any caps (maximum charges) that apply to a
    particular or group of fee/charge|
    array[[OBBCAData1_FeeChargeCap](#OBBCAData1_FeeChargeCap)]|

    | OtherFeeCategoryType | Entity |
    <details><summary>[OtherFeeCategoryType](#OtherFeeCategoryType)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherFeeType | Entity |
    <details><summary>[OtherFeeType_1](#OtherFeeType_1)</summary><ul><li>Code
    [string]</li> <li>FeeCategory [string]</li> <li>Name [string]</li>
    <li>Description [string]</li> </ul></details> | 

    | OtherFeeRateType | Entity |
    <details><summary>[OtherFeeRateType_1](#OtherFeeRateType_1)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OtherApplicationFrequency_1](#OtherApplicationFrequency_1)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OtherCalculationFrequency_1](#OtherCalculationFrequency_1)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | FeeApplicableRange | Entity |
    <details><summary>[FeeApplicableRange](#FeeApplicableRange)</summary><ul><li>MinimumAmount
    [string]</li> <li>MaximumAmount [string]</li> <li>MinimumRate [string]</li>
    <li>MaximumRate [string]</li> </ul></details> | 

     <a name=OBBCAData1_OtherFeesCharges></a> 
    ## OBBCAData1_OtherFeesCharges 

    Contains details of fees and charges which are not associated with either
    Overdraft or features/benefits 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | TariffType| TariffType which defines the fee and charges.| string|

    | TariffName| Name of the tariff| string|

    | OtherTariffType | Entity |
    <details><summary>[OtherTariffType](#OtherTariffType)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | FeeChargeDetail| Other fees/charges details|
    array[[OBBCAData1_FeeChargeDetail](#OBBCAData1_FeeChargeDetail)]|

    | FeeChargeCap| Details about any caps (maximum charges) that apply to a
    particular or group of fee/charge|
    array[[OBBCAData1_FeeChargeCap](#OBBCAData1_FeeChargeCap)]|

     <a name=ProductDetails_1></a> 
    ## ProductDetails_1 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Segment| Market segmentation is a marketing term referring to the
    aggregating of prospective buyers into groups, or segments, that have common
    needs and respond similarly to a marketing action. Market segmentation
    enables companies to target different categories of consumers who perceive
    the full value of certain products and services differently from one
    another.


    Read more: Market Segmentation
    http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 

    With respect to PCA products, they are segmented in relation to different
    markets that they wish to focus on. | array|

    | MonthlyMaximumCharge| The maximum relevant charges that could accrue as
    defined fully in Part 7 of the CMA order| string|

    | Notes| Optional additional notes to supplement the Core product details|
    array|

     <a name=CreditInterest_1_TierBand></a> 
    ## CreditInterest_1_TierBand 

    Tier Band Details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Identification| Unique and unambiguous identification of a  Tier Band for
    a PCA.| string|

    | TierValueMinimum| Minimum deposit value for which the credit interest tier
    applies.| string|

    | TierValueMaximum| Maximum deposit value for which the credit interest tier
    applies.| string|

    | CalculationFrequency| How often is credit interest calculated for the
    account.| string|

    | ApplicationFrequency| How often is interest applied to the PCA for this
    tier/band i.e. how often the financial institution pays accumulated interest
    to the customer's PCA.| string|

    | DepositInterestAppliedCoverage| Amount on which Interest applied.| string|

    | FixedVariableInterestRateType| Type of interest rate, Fixed or Variable|
    string|

    | AER| The annual equivalent rate (AER) is interest that is calculated under
    the assumption that any interest paid is combined with the original balance
    and the next interest payment will be based on the slightly higher account
    balance. Overall, this means that interest can be compounded several times
    in a year depending on the number of times that interest payments are made. 


    Read more: Annual Equivalent Rate (AER)
    http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A| string|

    | BankInterestRateType| Interest rate types, other than AER, which financial
    institutions may use to describe the annual interest rate payable to the
    PCA.| string|

    | BankInterestRate| Bank Interest for the PCA product| string|

    | Notes| Optional additional notes to supplement the Tier Band details|
    array|

    | OtherBankInterestType | Entity |
    <details><summary>[OtherBankInterestType](#OtherBankInterestType)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OtherApplicationFrequency](#OtherApplicationFrequency)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OtherCalculationFrequency](#OtherCalculationFrequency)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

     <a name=CreditInterest_1_TierBandSet></a> 
    ## CreditInterest_1_TierBandSet 

    The group of tiers or bands for which credit interest can be applied. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandMethod| The methodology of how credit interest is charged. It can
    be:-


    1. Banded

    Interest rates are banded. i.e. Increasing rate on whole balance as balance
    increases.


    2. Tiered

    Interest rates are tiered. i.e. increasing rate for each tier as balance
    increases, but interest paid on tier fixed for that tier and not on whole
    balance.


    3. Whole

    The same interest rate is applied irrespective of the PCA balance| string|

    | CalculationMethod| Methods of calculating interest| string|

    | Destination| Describes whether accrued interest is payable only to the PCA
    or to another bank account| string|

    | Notes| Optional additional notes to supplement the Tier Band Set details|
    array|

    | TierBand| Tier Band Details|
    array[[CreditInterest_1_TierBand](#CreditInterest_1_TierBand)]|

     <a name=CreditInterest_1></a> 
    ## CreditInterest_1 

    Details about the interest that may be payable to the PCA account holders 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandSet| The group of tiers or bands for which credit interest can be
    applied.|
    array[[CreditInterest_1_TierBandSet](#CreditInterest_1_TierBandSet)]|

     <a name=Overdraft_1_OverdraftFeeChargeCap></a> 
    ## Overdraft_1_OverdraftFeeChargeCap 

    Details about any caps (maximum charges) that apply to a particular
    fee/charge 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| Fee/charge type which is being capped| array|

    | OverdraftControlIndicator| Specifies for the overdraft control
    feature/benefit| boolean|

    | MinMaxType| Indicates that this is the minimum/ maximum fee/charge that
    can be applied by the financial institution| string|

    | FeeCapOccurrence| fee/charges are captured dependent on the number of
    occurrences rather than capped at a particular amount| number|

    | FeeCapAmount| Cap amount charged for a fee/charge| string|

    | CappingPeriod| Period e.g. day, week, month etc. for which the fee/charge
    is capped| string|

    | Notes| Notes related to Overdraft fee charge cap| array|

    | OtherFeeType| Other fee type code which is not available in the standard
    code set| array[[Overdraft_OtherFeeType](#Overdraft_OtherFeeType)]|

     <a name=Overdraft_1_OverdraftFeeChargeDetail></a> 
    ## Overdraft_1_OverdraftFeeChargeDetail 

    Details about the fees/charges 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| Overdraft fee type| string|

    | OverdraftControlIndicator| Specifies for the overdraft control
    feature/benefit| boolean|

    | IncrementalBorrowingAmount| Every additional tranche of an overdraft
    balance to which an overdraft fee is applied| string|

    | FeeAmount| Amount charged for an overdraft fee/charge (where it is charged
    in terms of an amount rather than a rate)| string|

    | FeeRate| Rate charged for overdraft fee/charge (where it is charged in
    terms of a rate rather than an amount)| string|

    | FeeRateType| Rate type for overdraft fee/charge (where it is charged in
    terms of a rate rather than an amount)| string|

    | ApplicationFrequency| Frequency at which the overdraft charge is applied
    to the account| string|

    | CalculationFrequency| How often is the overdraft fee/charge calculated for
    the account.| string|

    | Notes| Free text for capturing any other info related to Overdraft Fees
    Charge Details| array|

    | OtherFeeType | Entity |
    <details><summary>[OtherFeeType](#OtherFeeType)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherFeeRateType | Entity |
    <details><summary>[OtherFeeRateType](#OtherFeeRateType)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OtherApplicationFrequency](#OtherApplicationFrequency)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OtherCalculationFrequency](#OtherCalculationFrequency)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OverdraftFeeChargeCap | Entity |
    <details><summary>[Overdraft_1_OverdraftFeeChargeCap](#Overdraft_1_OverdraftFeeChargeCap)</summary><ul><li>FeeType
    [array]</li> <li>OverdraftControlIndicator [boolean]</li> <li>MinMaxType
    [string]</li> <li>FeeCapOccurrence [number]</li> <li>FeeCapAmount
    [string]</li> <li>CappingPeriod [string]</li> <li>Notes [array]</li>
    <li>OtherFeeType
    [array[[Overdraft_OtherFeeType](#Overdraft_OtherFeeType)]]</li>
    </ul></details> | 

     <a name=Overdraft_1_OverdraftFeesCharges></a> 
    ## Overdraft_1_OverdraftFeesCharges 

    Overdraft fees and charges 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | OverdraftFeeChargeCap| Details about any caps (maximum charges) that apply
    to a particular fee/charge|
    array[[Overdraft_1_OverdraftFeeChargeCap](#Overdraft_1_OverdraftFeeChargeCap)]|

    | OverdraftFeeChargeDetail| Details about the fees/charges|
    array[[Overdraft_1_OverdraftFeeChargeDetail](#Overdraft_1_OverdraftFeeChargeDetail)]|

     <a name=Overdraft_1_OverdraftTierBand></a> 
    ## Overdraft_1_OverdraftTierBand 

    Provides overdraft details for a specific tier or band 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Identification| Unique and unambiguous identification of a  Tier Band for
    a overdraft.| string|

    | TierValueMin| Minimum value of Overdraft Tier/Band| string|

    | TierValueMax| Maximum value of Overdraft Tier/Band| string|

    | OverdraftInterestChargingCoverage| Interest charged on whole amount or
    tiered/banded| string|

    | BankGuaranteedIndicator| Indicates that a bank provides the overdraft
    limit up to TierValueMIn to all customers automatically| boolean|

    | EAR| EAR means Effective Annual Rate and/or Equivalent Annual Rate
    (frequently

    used interchangeably), being the actual annual interest rate of an
    Overdraft.| string|

    | Notes| Optional additional notes to supplement the Tier/band details|
    array|

    | OverdraftFeesCharges| Overdraft fees and charges|
    array[[Overdraft_1_OverdraftFeesCharges](#Overdraft_1_OverdraftFeesCharges)]|

     <a name=Overdraft_1_OverdraftFeesCharges_1></a> 
    ## Overdraft_1_OverdraftFeesCharges_1 

    Overdraft fees and charges details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | OverdraftFeeChargeCap| Details about any caps (maximum charges) that apply
    to a particular fee/charge|
    array[[Overdraft_1_OverdraftFeeChargeCap](#Overdraft_1_OverdraftFeeChargeCap)]|

    | OverdraftFeeChargeDetail| Details about the fees/charges|
    array[[Overdraft_1_OverdraftFeeChargeDetail](#Overdraft_1_OverdraftFeeChargeDetail)]|

     <a name=Overdraft_1_OverdraftTierBandSet></a> 
    ## Overdraft_1_OverdraftTierBandSet 

    Tier band set details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | TierBandMethod| The methodology of how overdraft is charged. It can be:

    'Whole'  Where the same charge/rate is applied to the entirety of the
    overdraft balance (where charges are applicable). 

    'Tiered' Where different charges/rates are applied dependent on overdraft
    maximum and minimum balance amount tiers defined by the lending financial
    organisation

    'Banded' Where different charges/rates are applied dependent on overdraft
    maximum and minimum balance amount bands defined by a government
    organisation.| string|

    | OverdraftType| An overdraft can either be 'committed' which means that the
    facility cannot be withdrawn without reasonable notification before it's
    agreed end date, or 'on demand' which means that the financial institution
    can demand repayment at any point in time.| string|

    | Identification| Unique and unambiguous identification of a  Tier Band for
    a overdraft product.| string|

    | AuthorisedIndicator| Indicates if the Overdraft is authorised (Y) or
    unauthorised (N)| boolean|

    | BufferAmount| When a customer exceeds their credit limit, a financial
    institution will not charge the customer unauthorised overdraft charges if
    they do not exceed by more than the buffer amount. Note: Authorised
    overdraft charges may still apply.| string|

    | Notes| Optional additional notes to supplement the overdraft Tier Band Set
    details| array|

    | OverdraftTierBand| Provides overdraft details for a specific tier or band|
    array[[Overdraft_1_OverdraftTierBand](#Overdraft_1_OverdraftTierBand)]|

    | OverdraftFeesCharges| Overdraft fees and charges details|
    array[[Overdraft_1_OverdraftFeesCharges_1](#Overdraft_1_OverdraftFeesCharges_1)]|

     <a name=Overdraft_1></a> 
    ## Overdraft_1 

    Details about Overdraft rates, fees & charges 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Notes| Associated Notes about the overdraft rates| array|

    | OverdraftTierBandSet| Tier band set details|
    array[[Overdraft_1_OverdraftTierBandSet](#Overdraft_1_OverdraftTierBandSet)]|

     <a name=OtherFeesCharges_FeeChargeCap></a> 
    ## OtherFeesCharges_FeeChargeCap 

    Details about any caps (maximum charges) that apply to a particular
    fee/charge 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeType| Fee/charge type which is being capped| array|

    | MinMaxType| Indicates that this is the minimum/ maximum fee/charge that
    can be applied by the financial institution| string|

    | FeeCapOccurrence| fee/charges are captured dependent on the number of
    occurrences rather than capped at a particular amount| number|

    | FeeCapAmount| Cap amount charged for a fee/charge (where it is charged in
    terms of an amount rather than a rate)| string|

    | CappingPeriod| Period e.g. day, week, month etc. for which the fee/charge
    is capped| string|

    | Notes| Free text for adding  extra details for fee charge cap| array|

    | OtherFeeType| Other fee type code which is not available in the standard
    code set| array[[Overdraft_OtherFeeType](#Overdraft_OtherFeeType)]|

     <a name=OtherFeesCharges_FeeChargeDetail></a> 
    ## OtherFeesCharges_FeeChargeDetail 

    Other fees/charges details 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeCategory| Categorisation of fees and charges into standard categories.|
    string|

    | FeeType| Fee/Charge Type| string|

    | FeeAmount| Fee Amount charged for a fee/charge (where it is charged in
    terms of an amount rather than a rate)| string|

    | FeeRate| Rate charged for Fee/Charge (where it is charged in terms of a
    rate rather than an amount)| string|

    | FeeRateType| Rate type for Fee/Charge (where it is charged in terms of a
    rate rather than an amount)| string|

    | ApplicationFrequency| How frequently the fee/charge is applied to the
    account| string|

    | CalculationFrequency| How frequently the fee/charge is calculated| string|

    | Notes| Optional additional notes to supplement the fee/charge details.|
    array|

    | OtherFeeCategoryType | Entity |
    <details><summary>[OtherFeeCategoryType](#OtherFeeCategoryType)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherFeeType | Entity |
    <details><summary>[OtherFeeType_1](#OtherFeeType_1)</summary><ul><li>Code
    [string]</li> <li>FeeCategory [string]</li> <li>Name [string]</li>
    <li>Description [string]</li> </ul></details> | 

    | OtherFeeRateType | Entity |
    <details><summary>[OtherFeeRateType_1](#OtherFeeRateType_1)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherApplicationFrequency | Entity |
    <details><summary>[OtherApplicationFrequency_1](#OtherApplicationFrequency_1)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | OtherCalculationFrequency | Entity |
    <details><summary>[OtherCalculationFrequency_1](#OtherCalculationFrequency_1)</summary><ul><li>Code
    [string]</li> <li>Name [string]</li> <li>Description [string]</li>
    </ul></details> | 

    | FeeChargeCap| Details about any caps (maximum charges) that apply to a
    particular fee/charge|
    array[[OtherFeesCharges_FeeChargeCap](#OtherFeesCharges_FeeChargeCap)]|

    | FeeApplicableRange | Entity |
    <details><summary>[FeeApplicableRange](#FeeApplicableRange)</summary><ul><li>MinimumAmount
    [string]</li> <li>MaximumAmount [string]</li> <li>MinimumRate [string]</li>
    <li>MaximumRate [string]</li> </ul></details> | 

     <a name=OtherFeesCharges></a> 
    ## OtherFeesCharges 

    Contains details of fees and charges which are not associated with either
    borrowing or features/benefits 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | FeeChargeDetail| Other fees/charges details|
    array[[OtherFeesCharges_FeeChargeDetail](#OtherFeesCharges_FeeChargeDetail)]|

    | FeeChargeCap| Details about any caps (maximum charges) that apply to a
    particular fee/charge|
    array[[OtherFeesCharges_FeeChargeCap](#OtherFeesCharges_FeeChargeCap)]|

     <a name=OBReadAccount3_Data></a> 
    ## OBReadAccount3_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Account| Unambiguous identification of the account to which credit and
    debit entries are made.| array[[OBAccount3](#OBAccount3)]|

     <a name=OBReadBalance1_Data></a> 
    ## OBReadBalance1_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Balance| Set of elements used to define the balance details.|
    array[[OBCashBalance1](#OBCashBalance1)]|

     <a name=OBReadBeneficiary3_Data></a> 
    ## OBReadBeneficiary3_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Beneficiary| -| array[[OBBeneficiary3](#OBBeneficiary3)]|

     <a name=OBReadConsentResponse1_Data></a> 
    ## OBReadConsentResponse1_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | ConsentId| Unique identification as assigned to identify the account
    access consent resource.| string|

    | CreationDateTime| Date and time at which the resource was created.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | Status | Entity |
    <details><summary>[OBExternalRequestStatus1Code](#OBExternalRequestStatus1Code)</summary><ul></ul></details>
    | 

    | StatusUpdateDateTime| Date and time at which the resource status was
    updated.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | Permissions| Specifies the Open Banking account access data types. This is
    a list of the data clusters being consented by the PSU, and requested for
    authorisation with the ASPSP.|
    array[[OBExternalPermissions1Code](#OBExternalPermissions1Code)]|

    | ExpirationDateTime| Specified date and time the permissions will expire.

    If this is not populated, the permissions will be open ended.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | TransactionFromDateTime| Specified start date and time for the transaction
    query period.

    If this is not populated, the start date will be open ended, and data will
    be returned from the earliest available transaction.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

    | TransactionToDateTime| Specified end date and time for the transaction
    query period.

    If this is not populated, the end date will be open ended, and data will be
    returned to the latest available transaction.

    All dates in the JSON payloads are represented in ISO 8601 date-time
    format. 

    All date-time fields in responses must include the timezone. An example is
    below:

    2017-04-05T10:43:07+00:00| string|

     <a name=OBReadDirectDebit1_Data></a> 
    ## OBReadDirectDebit1_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | DirectDebit| Account to or from which a cash entry is made.|
    array[[OBDirectDebit1](#OBDirectDebit1)]|

     <a name=OBReadOffer1_Data></a> 
    ## OBReadOffer1_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Offer| -| array[[OBOffer1](#OBOffer1)]|

     <a name=OBReadParty1_Data></a> 
    ## OBReadParty1_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Party | Entity |
    <details><summary>[OBParty1](#OBParty1)</summary><ul><li>PartyId
    [string]</li> <li>PartyNumber [string]</li> <li><details><summary>PartyType
    [[OBExternalPartyType1Code](#OBExternalPartyType1Code)]</summary><ul></ul></details></li><li>Name
    [string]</li> <li>EmailAddress [string]</li> <li>Phone [string]</li>
    <li>Mobile [string]</li> <li>Address
    [array[[OBPostalAddress8](#OBPostalAddress8)]]</li> </ul></details> | 

     <a name=OBReadProduct2_Data></a> 
    ## OBReadProduct2_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Product| -| array[[OBProduct2](#OBProduct2)]|

     <a name=OBReadScheduledPayment2_Data></a> 
    ## OBReadScheduledPayment2_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | ScheduledPayment| -| array[[OBScheduledPayment2](#OBScheduledPayment2)]|

     <a name=OBReadStandingOrder4_Data></a> 
    ## OBReadStandingOrder4_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | StandingOrder| -| array[[OBStandingOrder4](#OBStandingOrder4)]|

     <a name=OBReadStatement1_Data></a> 
    ## OBReadStatement1_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Statement| Provides further details on a statement resource.|
    array[[OBStatement1](#OBStatement1)]|

     <a name=OBReadTransaction4_Data></a> 
    ## OBReadTransaction4_Data 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Transaction| Provides further details on an entry in the report.|
    array[[OBTransaction4](#OBTransaction4)]|

     <a name=OBTransaction4_ProprietaryBankTransactionCode></a> 
    ## OBTransaction4_ProprietaryBankTransactionCode 

    Set of elements to fully identify a proprietary bank transaction code. 


    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | Code| Proprietary bank transaction code to identify the underlying
    transaction.| string|

    | Issuer| Identification of the issuer of the proprietary bank transaction
    code.| string|

     <a name=SandboxDataModel_consents></a> 
    ## SandboxDataModel_consents 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | ID| -| string|

    | creationDateTime| -| string|

    | status| -| string|

    | permissions| -|
    array[[OBExternalPermissions1Code](#OBExternalPermissions1Code)]|

    | expirationDateTime| -| string|

    | statusUpdateDateTime| -| string|

    | transactionFromDateTime| -| string|

    | transactionToDateTime| -| string|

     <a name=SandboxDataModel_accounts_info></a> 
    ## SandboxDataModel_accounts_info 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | accountId| -| string|

    | currency| -| string|

    | iban| -| string|

    | accountType| -| string|

    | accountSubType| -| string|

    | description| -| string|

    | nickName| -| string|

     <a name=SandboxDataModel_accounts_party_address></a> 
    ## SandboxDataModel_accounts_party_address 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | type| -| string|

    | streetName| -| string|

    | buildingNumber| -| string|

    | postCode| -| string|

    | townName| -| string|

    | country| -| string|

     <a name=SandboxDataModel_accounts_party></a> 
    ## SandboxDataModel_accounts_party 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | id| -| string|

    | number| -| string|

    | name| -| string|

    | email| -| string|

    | phone| -| string|

    | mobile| -| string|

    | address | Entity |
    <details><summary>[SandboxDataModel_accounts_party_address](#SandboxDataModel_accounts_party_address)</summary><ul><li>type
    [string]</li> <li>streetName [string]</li> <li>buildingNumber [string]</li>
    <li>postCode [string]</li> <li>townName [string]</li> <li>country
    [string]</li> </ul></details> | 

     <a name=SandboxDataModel_accounts_beneficiaries></a> 
    ## SandboxDataModel_accounts_beneficiaries 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | name| -| string|

     <a name=SandboxDataModel_accounts_balances></a> 
    ## SandboxDataModel_accounts_balances 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | type| -| string|

    | amount| -| number|

     <a name=SandboxDataModel_accounts_standingOrders></a> 
    ## SandboxDataModel_accounts_standingOrders 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | id| -| string|

    | frequency| -| string|

    | firstCollectionDate| -| string|

    | finalCollectionDate| -| string|

    | status| -| string|

     <a name=SandboxDataModel_accounts_scheduledPayments></a> 
    ## SandboxDataModel_accounts_scheduledPayments 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | executionDate| -| string|

    | type| -| string|

    | amount| -| number|

     <a name=SandboxDataModel_accounts_statements></a> 
    ## SandboxDataModel_accounts_statements 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | id| -| string|

    | type| -| string|

    | startDateTime| -| string|

    | endDateTime| -| string|

    | title| -| string|

     <a name=SandboxDataModel_accounts_transactions></a> 
    ## SandboxDataModel_accounts_transactions 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | id| -| string|

    | amount| -| number|

    | currency| -| string|

    | creditDebit| -| string|

    | status| -| string|

    | valeur| -| string|

    | bookingDateTime| -| string|

    | description| -| string|

    | accountingBalance| -| number|

    | balanceType| -| string|

     <a name=SandboxDataModel_accounts></a> 
    ## SandboxDataModel_accounts 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | info | Entity |
    <details><summary>[SandboxDataModel_accounts_info](#SandboxDataModel_accounts_info)</summary><ul><li>accountId
    [string]</li> <li>currency [string]</li> <li>iban [string]</li>
    <li>accountType [string]</li> <li>accountSubType [string]</li>
    <li>description [string]</li> <li>nickName [string]</li> </ul></details> | 

    | party | Entity |
    <details><summary>[SandboxDataModel_accounts_party](#SandboxDataModel_accounts_party)</summary><ul><li>id
    [string]</li> <li>number [string]</li> <li>name [string]</li> <li>email
    [string]</li> <li>phone [string]</li> <li>mobile [string]</li>
    <li><details><summary>address
    [[SandboxDataModel_accounts_party_address](#SandboxDataModel_accounts_party_address)]</summary><ul><li>type
    [string]</li> <li>streetName [string]</li> <li>buildingNumber [string]</li>
    <li>postCode [string]</li> <li>townName [string]</li> <li>country
    [string]</li> </ul></details></li></ul></details> | 

    | beneficiaries| -|
    array[[SandboxDataModel_accounts_beneficiaries](#SandboxDataModel_accounts_beneficiaries)]|

    | balances| -|
    array[[SandboxDataModel_accounts_balances](#SandboxDataModel_accounts_balances)]|

    | standingOrders| -|
    array[[SandboxDataModel_accounts_standingOrders](#SandboxDataModel_accounts_standingOrders)]|

    | scheduledPayments| -|
    array[[SandboxDataModel_accounts_scheduledPayments](#SandboxDataModel_accounts_scheduledPayments)]|

    | statements| -|
    array[[SandboxDataModel_accounts_statements](#SandboxDataModel_accounts_statements)]|

    | transactions| -|
    array[[SandboxDataModel_accounts_transactions](#SandboxDataModel_accounts_transactions)]|

     <a name=SandboxDataModel_users></a> 
    ## SandboxDataModel_users 



    ### Attributes 


    | Name| Description| Values|

    | -----| -----| -----|

    | userid| -| undefined|

    | consents | Entity |
    <details><summary>[SandboxDataModel_consents](#SandboxDataModel_consents)</summary><ul><li>ID
    [string]</li> <li>creationDateTime [string]</li> <li>status [string]</li>
    <li>permissions
    [array[[OBExternalPermissions1Code](#OBExternalPermissions1Code)]]</li>
    <li>expirationDateTime [string]</li> <li>statusUpdateDateTime [string]</li>
    <li>transactionFromDateTime [string]</li> <li>transactionToDateTime
    [string]</li> </ul></details> | 

    | accounts | Entity |
    <details><summary>[SandboxDataModel_accounts](#SandboxDataModel_accounts)</summary><ul><li><details><summary>info
    [[SandboxDataModel_accounts_info](#SandboxDataModel_accounts_info)]</summary><ul><li>accountId
    [string]</li> <li>currency [string]</li> <li>iban [string]</li>
    <li>accountType [string]</li> <li>accountSubType [string]</li>
    <li>description [string]</li> <li>nickName [string]</li>
    </ul></details></li><li><details><summary>party
    [[SandboxDataModel_accounts_party](#SandboxDataModel_accounts_party)]</summary><ul><li>id
    [string]</li> <li>number [string]</li> <li>name [string]</li> <li>email
    [string]</li> <li>phone [string]</li> <li>mobile [string]</li>
    <li><details><summary>address
    [[SandboxDataModel_accounts_party_address](#SandboxDataModel_accounts_party_address)]</summary><ul><li>type
    [string]</li> <li>streetName [string]</li> <li>buildingNumber [string]</li>
    <li>postCode [string]</li> <li>townName [string]</li> <li>country
    [string]</li> </ul></details></li></ul></details></li><li>beneficiaries
    [array[[SandboxDataModel_accounts_beneficiaries](#SandboxDataModel_accounts_beneficiaries)]]</li>
    <li>balances
    [array[[SandboxDataModel_accounts_balances](#SandboxDataModel_accounts_balances)]]</li>
    <li>standingOrders
    [array[[SandboxDataModel_accounts_standingOrders](#SandboxDataModel_accounts_standingOrders)]]</li>
    <li>scheduledPayments
    [array[[SandboxDataModel_accounts_scheduledPayments](#SandboxDataModel_accounts_scheduledPayments)]]</li>
    <li>statements
    [array[[SandboxDataModel_accounts_statements](#SandboxDataModel_accounts_statements)]]</li>
    <li>transactions
    [array[[SandboxDataModel_accounts_transactions](#SandboxDataModel_accounts_transactions)]]</li>
    </ul></details> | 
  contact: {}
host: apis.nbg.gr
basePath: /sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0
schemes:
  - https
consumes:
  - application/json; charset=utf-8
produces:
  - application/json; charset=utf-8
paths:
  /sandbox:
    put:
      consumes:
        - application/json
      tags:
        - Sandbox
      parameters:
        - name: body
          schema:
            $ref: '#/definitions/SandboxDataModel'
          in: body
          required: true
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: Sandbox_UpdateSandbox
      summary: Import Sandbox
      description: Import Sandbox
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "PUT");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"sandboxId\":\"uk-opb-sandbox\",\"users\":[]}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox");

            var request = new RestRequest(Method.PUT);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("accept", "application/json");

            request.AddParameter("undefined",
            "{\"sandboxId\":\"uk-opb-sandbox\",\"users\":[]}",
            ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox\"\n\n\tpayload := strings.NewReader(\"{\\\"sandboxId\\\":\\\"uk-opb-sandbox\\\",\\\"users\\\":[]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"sandboxId\":\"uk-opb-sandbox\",\"users\":[]}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox")
              .put(body)
              .addHeader("accept", "application/json")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'PUT',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 accept: 'application/json' },
              body: { sandboxId: 'uk-opb-sandbox', users: [] },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "PUT",
              CURLOPT_POSTFIELDS => "{\"sandboxId\":\"uk-opb-sandbox\",\"users\":[]}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"sandboxId\":\"uk-opb-sandbox\",\"users\":[]}"


            headers = {
                'accept': "application/json",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("PUT",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Put.new(url)

            request["accept"] = 'application/json'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"sandboxId\":\"uk-opb-sandbox\",\"users\":[]}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request PUT \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox \
              --header 'accept: application/json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --data '{"sandboxId":"uk-opb-sandbox","users":[]}'
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Sandbox
      parameters:
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
        - name: request
          description: your sandbox id
          schema:
            $ref: '#/definitions/SandboxRequest'
          in: body
          required: true
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/SandboxDataModel'
        '400':
          description: Incorrect json format or Sandbox Already Exists
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: Sandbox_CreateSandbox
      summary: Create Sandbox
      description: Create Sandbox
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, "{\"sandboxId\":\"<ADD
            STRING VALUE>\"}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json", "{\"sandboxId\":\"<ADD
            STRING VALUE>\"}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox\"\n\n\tpayload := strings.NewReader(\"{\\\"sandboxId\\\":\\\"<ADD STRING VALUE>\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"sandboxId\":\"<ADD STRING VALUE>\"}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body: { sandboxId: '<ADD STRING VALUE>' },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"sandboxId\":\"<ADD STRING VALUE>\"}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload = "{\"sandboxId\":\"<ADD STRING VALUE>\"}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body = "{\"sandboxId\":\"<ADD STRING VALUE>\"}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox \
              --header 'accept: application/json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --data '{"sandboxId":"<ADD STRING VALUE>"}'
  '/sandbox/{sandbox_id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Sandbox
      parameters:
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
        - name: sandbox_id
          description: Sandbox Id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SandboxDataModel'
        '400':
          description: Sandbox Not Found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: Sandbox_ExportSandbox
      summary: Export Sandbox
      description: Export Sandbox data specified by sandbox id.
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D")
              .get()
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D \
              --header 'accept: application/json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json'
    delete:
      consumes: []
      produces: []
      tags:
        - Sandbox
      parameters:
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
        - name: sandbox_id
          description: Sandbox Id
          in: path
          required: true
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Sandbox Not Found
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: Sandbox_DeleteSandbox
      summary: Delete Sandbox
      description: Delete the Sandbox specified by sandbox id.
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D")
              .delete(null)
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 authorization: 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'authorization': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("DELETE",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["authorization"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/sandbox/%7Bsandbox_id%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE'
  /account-access-consents:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Account Access
      parameters:
        - name: OBReadConsent1Param
          description: Default
          schema:
            $ref: '#/definitions/OBReadConsent1'
          in: body
          required: true
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '201':
          description: Account Access Consents Created
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadConsentResponse1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '415':
          description: Unsupported Media Type
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: CreateAccountAccessConsents
      summary: Create Account Access Consents
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "POST");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type:
            application/json");

            headers = curl_slist_append(headers, "accept: application/json");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            curl_easy_setopt(hnd, CURLOPT_POSTFIELDS,
            "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD
            STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING
            VALUE>\",\"TransactionToDateTime\":\"<ADD STRING
            VALUE>\"},\"Risk\":{}}");


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents");

            var request = new RestRequest(Method.POST);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "application/json");

            request.AddHeader("accept", "application/json");

            request.AddParameter("application/json",
            "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD
            STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING
            VALUE>\",\"TransactionToDateTime\":\"<ADD STRING
            VALUE>\"},\"Risk\":{}}", ParameterType.RequestBody);

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents\"\n\n\tpayload := strings.NewReader(\"{\\\"Data\\\":{\\\"Permissions\\\":[\\\"ReadAccountsBasic\\\"],\\\"ExpirationDateTime\\\":\\\"<ADD STRING VALUE>\\\",\\\"TransactionFromDateTime\\\":\\\"<ADD STRING VALUE>\\\",\\\"TransactionToDateTime\\\":\\\"<ADD STRING VALUE>\\\"},\\\"Risk\\\":{}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"accept\", \"application/json\")\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: >-
            OkHttpClient client = new OkHttpClient();


            MediaType mediaType = MediaType.parse("application/json");

            RequestBody body = RequestBody.create(mediaType,
            "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD
            STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING
            VALUE>\",\"TransactionToDateTime\":\"<ADD STRING
            VALUE>\"},\"Risk\":{}}");

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents")
              .post(body)
              .addHeader("accept", "application/json")
              .addHeader("content-type", "application/json")
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'POST',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE',
                 'content-type': 'application/json',
                 accept: 'application/json' },
              body:
               { Data:
                  { Permissions: [ 'ReadAccountsBasic' ],
                    ExpirationDateTime: '<ADD STRING VALUE>',
                    TransactionFromDateTime: '<ADD STRING VALUE>',
                    TransactionToDateTime: '<ADD STRING VALUE>' },
                 Risk: {} },
              json: true };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING VALUE>\",\"TransactionToDateTime\":\"<ADD STRING VALUE>\"},\"Risk\":{}}",
              CURLOPT_HTTPHEADER => array(
                "accept: application/json",
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: application/json",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            payload =
            "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD
            STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING
            VALUE>\",\"TransactionToDateTime\":\"<ADD STRING
            VALUE>\"},\"Risk\":{}}"


            headers = {
                'accept': "application/json",
                'content-type': "application/json",
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("POST",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents",
            payload, headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Post.new(url)

            request["accept"] = 'application/json'

            request["content-type"] = 'application/json'

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'

            request.body =
            "{\"Data\":{\"Permissions\":[\"ReadAccountsBasic\"],\"ExpirationDateTime\":\"<ADD
            STRING VALUE>\",\"TransactionFromDateTime\":\"<ADD STRING
            VALUE>\",\"TransactionToDateTime\":\"<ADD STRING
            VALUE>\"},\"Risk\":{}}"


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request POST \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents \
              --header 'accept: application/json' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: application/json' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE' \
              --data '{"Data":{"Permissions":["ReadAccountsBasic"],"ExpirationDateTime":"<ADD STRING VALUE>","TransactionFromDateTime":"<ADD STRING VALUE>","TransactionToDateTime":"<ADD STRING VALUE>"},"Risk":{}}'
  '/account-access-consents/{ConsentId}':
    get:
      tags:
        - Account Access
      parameters:
        - name: ConsentId
          description: ConsentId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Account Access Consents Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadConsentResponse1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountAccessConsentsConsentId
      summary: Get Account Access Consents
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
    delete:
      tags:
        - Account Access
      parameters:
        - name: ConsentId
          description: ConsentId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '204':
          description: Account Access Consents Deleted
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: DeleteAccountAccessConsentsConsentId
      summary: Delete Account Access Consents
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "DELETE");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D");

            var request = new RestRequest(Method.DELETE);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D")
              .delete(null)
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'DELETE',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "DELETE",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("DELETE",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Delete.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request DELETE \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/account-access-consents/%7BConsentId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /accounts:
    get:
      tags:
        - Accounts
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Accounts Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadAccount3'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccounts
      summary: Get Accounts
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}':
    get:
      tags:
        - Accounts
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Accounts Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadAccount3'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountId
      summary: Get Accounts
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/balances':
    get:
      tags:
        - Balances
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Balances Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadBalance1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdBalances
      summary: Get Balances
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/balances");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/balances");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/balances\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/balances")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/balances',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/balances",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/balances",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/balances")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/balances \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/beneficiaries':
    get:
      tags:
        - Beneficiaries
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Beneficiaries Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadBeneficiary3'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdBeneficiaries
      summary: Get Beneficiaries
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/beneficiaries");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/beneficiaries");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/beneficiaries\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/beneficiaries")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/beneficiaries',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/beneficiaries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/beneficiaries",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/beneficiaries")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/beneficiaries \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/direct-debits':
    get:
      tags:
        - Direct Debits
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Direct Debits Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadDirectDebit1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdDirectDebits
      summary: Get Direct Debits
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/direct-debits");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/direct-debits");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/direct-debits\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/direct-debits")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/direct-debits',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/direct-debits",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/direct-debits",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/direct-debits")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/direct-debits \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/offers':
    get:
      tags:
        - Offers
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Offers Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadOffer1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdOffers
      summary: Get Offers
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/offers");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/offers");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/offers\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/offers")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/offers',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/offers",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/offers",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/offers")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/offers \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/party':
    get:
      tags:
        - Partys
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Party Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadParty1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdParty
      summary: Get Party
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/party");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/party");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/party\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/party")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/party',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/party",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/party",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/party")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/party \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/product':
    get:
      tags:
        - Products
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Products Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadProduct2'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdProduct
      summary: Get Products
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/product");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/product");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/product\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/product")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/product',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/product",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/product",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/product")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/product \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/scheduled-payments':
    get:
      tags:
        - Scheduled Payments
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Scheduled Payments Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadScheduledPayment2'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdScheduledPayments
      summary: Get Scheduled Payments
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/scheduled-payments");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/scheduled-payments");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/scheduled-payments\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/scheduled-payments")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/scheduled-payments',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/scheduled-payments",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/scheduled-payments",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/scheduled-payments")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/scheduled-payments \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/standing-orders':
    get:
      tags:
        - Standing Orders
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Standing Orders Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadStandingOrder4'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdStandingOrders
      summary: Get Standing Orders
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/standing-orders");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/standing-orders");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/standing-orders\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/standing-orders")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/standing-orders',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/standing-orders",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/standing-orders",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/standing-orders")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/standing-orders \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/statements':
    get:
      tags:
        - Statements
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: fromStatementDateTime
          description: >-
            The UTC ISO 8601 Date Time to filter statements FROM

            NB Time component is optional - set to 00:00:00 for just Date.

            If the Date Time contains a timezone, the ASPSP must ignore the
            timezone component.
          in: query
          required: false
          type: string
          format: date-time
        - name: toStatementDateTime
          description: >-
            The UTC ISO 8601 Date Time to filter statements TO

            NB Time component is optional - set to 00:00:00 for just Date.

            If the Date Time contains a timezone, the ASPSP must ignore the
            timezone component.
          in: query
          required: false
          type: string
          format: date-time
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Statements Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadStatement1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdStatements
      summary: Get Statements
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements',
              qs:
               { fromStatementDateTime: 'SOME_STRING_VALUE',
                 toStatementDateTime: 'SOME_STRING_VALUE' },
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url 'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/statements/{StatementId}':
    get:
      tags:
        - Statements
      parameters:
        - name: StatementId
          description: StatementId
          in: path
          required: true
          type: string
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Statements Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadStatement1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdStatementsStatementId
      summary: Get Statements
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/statements/{StatementId}/file':
    get:
      produces:
        - '*/*'
      tags:
        - Statements
      parameters:
        - name: StatementId
          description: StatementId
          in: path
          required: true
          type: string
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Statements Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            type: file
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdStatementsStatementIdFile
      summary: Get Statements
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/file");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "content-type: */*");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/file");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            request.AddHeader("content-type", "*/*");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/file\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"content-type\", \"*/*\")\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/file")
              .get()
              .addHeader("content-type", "*/*")
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/file',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE',
                 'content-type': '*/*' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/file",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "content-type: */*",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'content-type': "*/*",
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/file",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/file")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["content-type"] = '*/*'

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/file \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'content-type: */*' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/statements/{StatementId}/transactions':
    get:
      tags:
        - Statements
        - Transactions
      parameters:
        - name: StatementId
          description: StatementId
          in: path
          required: true
          type: string
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Transactions Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadTransaction4'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdStatementsStatementIdTransactions
      summary: Get Transactions
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/transactions");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/transactions");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/transactions\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/transactions")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/transactions',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/transactions",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/transactions",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/transactions")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/statements/%7BStatementId%7D/transactions \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  '/accounts/{AccountId}/transactions':
    get:
      tags:
        - Transactions
      parameters:
        - name: AccountId
          description: AccountId
          in: path
          required: true
          type: string
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: fromBookingDateTime
          description: >-
            The UTC ISO 8601 Date Time to filter transactions FROM

            NB Time component is optional - set to 00:00:00 for just Date.

            If the Date Time contains a timezone, the ASPSP must ignore the
            timezone component.
          in: query
          required: false
          type: string
          format: date-time
        - name: toBookingDateTime
          description: >-
            The UTC ISO 8601 Date Time to filter transactions TO

            NB Time component is optional - set to 00:00:00 for just Date.

            If the Date Time contains a timezone, the ASPSP must ignore the
            timezone component.
          in: query
          required: false
          type: string
          format: date-time
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Transactions Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadTransaction4'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetAccountsAccountIdTransactions
      summary: Get Transactions
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/transactions',
              qs:
               { fromBookingDateTime: 'SOME_STRING_VALUE',
                 toBookingDateTime: 'SOME_STRING_VALUE' },
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url 'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/accounts/%7BAccountId%7D/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /balances:
    get:
      tags:
        - Balances
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Balances Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadBalance1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetBalances
      summary: Get Balances
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/balances");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/balances");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/balances\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/balances")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/balances',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/balances",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/balances",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/balances")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/balances \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /beneficiaries:
    get:
      tags:
        - Beneficiaries
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Beneficiaries Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadBeneficiary3'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetBeneficiaries
      summary: Get Beneficiaries
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/beneficiaries");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/beneficiaries");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/beneficiaries\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/beneficiaries")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/beneficiaries',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/beneficiaries",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/beneficiaries",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/beneficiaries")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/beneficiaries \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /direct-debits:
    get:
      tags:
        - Direct Debits
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Direct Debits Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadDirectDebit1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetDirectDebits
      summary: Get Direct Debits
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/direct-debits");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/direct-debits");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/direct-debits\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/direct-debits")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/direct-debits',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/direct-debits",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/direct-debits",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/direct-debits")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/direct-debits \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /offers:
    get:
      tags:
        - Offers
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Offers Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadOffer1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetOffers
      summary: Get Offers
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/offers");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/offers");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/offers\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/offers")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/offers',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/offers",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/offers",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/offers")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/offers \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /party:
    get:
      tags:
        - Partys
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Party Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadParty1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetParty
      summary: Get Party
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/party");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/party");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/party\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/party")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/party',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/party",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/party",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/party")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/party \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /products:
    get:
      tags:
        - Products
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Products Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadProduct2'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetProducts
      summary: Get Products
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/products");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/products");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/products\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/products")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/products',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/products",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/products",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/products")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/products \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /scheduled-payments:
    get:
      tags:
        - Scheduled Payments
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Scheduled Payments Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadScheduledPayment2'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetScheduledPayments
      summary: Get Scheduled Payments
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/scheduled-payments");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/scheduled-payments");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/scheduled-payments\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/scheduled-payments")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/scheduled-payments',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/scheduled-payments",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/scheduled-payments",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/scheduled-payments")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/scheduled-payments \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /standing-orders:
    get:
      tags:
        - Standing Orders
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Standing Orders Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadStandingOrder4'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetStandingOrders
      summary: Get Standing Orders
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/standing-orders");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/standing-orders");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/standing-orders\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/standing-orders")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/standing-orders',
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/standing-orders",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/standing-orders",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/standing-orders")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/standing-orders \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /statements:
    get:
      tags:
        - Statements
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: fromStatementDateTime
          description: >-
            The UTC ISO 8601 Date Time to filter statements FROM

            NB Time component is optional - set to 00:00:00 for just Date.

            If the Date Time contains a timezone, the ASPSP must ignore the
            timezone component.
          in: query
          required: false
          type: string
          format: date-time
        - name: toStatementDateTime
          description: >-
            The UTC ISO 8601 Date Time to filter statements TO

            NB Time component is optional - set to 00:00:00 for just Date.

            If the Date Time contains a timezone, the ASPSP must ignore the
            timezone component.
          in: query
          required: false
          type: string
          format: date-time
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Statements Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadStatement1'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetStatements
      summary: Get Statements
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/statements',
              qs:
               { fromStatementDateTime: 'SOME_STRING_VALUE',
                 toStatementDateTime: 'SOME_STRING_VALUE' },
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url 'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/statements?fromStatementDateTime=SOME_STRING_VALUE&toStatementDateTime=SOME_STRING_VALUE' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
  /transactions:
    get:
      tags:
        - Transactions
      parameters:
        - name: x-fapi-financial-id
          description: >-
            The unique id of the ASPSP to which the request is issued. The
            unique id will be issued by OB.
          in: header
          required: true
          type: string
          default: NBG
        - name: x-fapi-customer-last-logged-time
          description: >-
            The time when the PSU last logged in with the TPP. 

            All dates in the HTTP headers are represented as RFC 7231 Full
            Dates. An example is below: 

            Sun, 10 Sep 2017 19:43:31 UTC
          in: header
          required: false
          type: string
          pattern: >-
            ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
            (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4}
            \d{2}:\d{2}:\d{2} (GMT|UTC)$
        - name: x-fapi-customer-ip-address
          description: The PSU's IP address if the PSU is currently logged in with the TPP.
          in: header
          required: false
          type: string
        - name: x-fapi-interaction-id
          description: An RFC4122 UID used as a correlation id.
          in: header
          required: false
          type: string
        - name: Authorization
          description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
          in: header
          required: true
          type: string
          default: 'Bearer '
        - name: fromBookingDateTime
          description: >-
            The UTC ISO 8601 Date Time to filter transactions FROM

            NB Time component is optional - set to 00:00:00 for just Date.

            If the Date Time contains a timezone, the ASPSP must ignore the
            timezone component.
          in: query
          required: false
          type: string
          format: date-time
        - name: toBookingDateTime
          description: >-
            The UTC ISO 8601 Date Time to filter transactions TO

            NB Time component is optional - set to 00:00:00 for just Date.

            If the Date Time contains a timezone, the ASPSP must ignore the
            timezone component.
          in: query
          required: false
          type: string
          format: date-time
        - name: x-customer-user-agent
          description: Indicates the user-agent that the PSU is using.
          in: header
          required: false
          type: string
        - name: x-subject-bank-id
          description: The unique id of the target bank.
          in: header
          required: true
          type: string
          default: GR-NBG
        - name: sandbox-id
          description: The unique id of the sandbox to be used
          in: header
          required: true
          type: string
      responses:
        '200':
          description: Transactions Read
          headers:
            x-fapi-interaction-id:
              description: An RFC4122 UID used as a correlation id.
              type: string
          schema:
            $ref: '#/definitions/OBReadTransaction4'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/OBErrorResponse1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '405':
          description: Method Not Allowed
        '406':
          description: Not Acceptable
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Number in seconds to wait
              type: integer
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/OBErrorResponse1'
      operationId: GetTransactions
      summary: Get Transactions
      x-code-samples:
        - lang: C
          source: >-
            CURL *hnd = curl_easy_init();


            curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "GET");

            curl_easy_setopt(hnd, CURLOPT_URL,
            "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE");


            struct curl_slist *headers = NULL;

            headers = curl_slist_append(headers, "client-id:
            SOME_APIKEY_VALUE");

            headers = curl_slist_append(headers, "sandbox-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-subject-bank-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-customer-user-agent:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "authorization:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-interaction-id:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-customer-ip-address:
            SOME_STRING_VALUE");

            headers = curl_slist_append(headers,
            "x-fapi-customer-last-logged-time: SOME_STRING_VALUE");

            headers = curl_slist_append(headers, "x-fapi-financial-id:
            SOME_STRING_VALUE");

            curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);


            CURLcode ret = curl_easy_perform(hnd);
        - lang: 'C#'
          source: >-
            var client = new
            RestClient("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE");

            var request = new RestRequest(Method.GET);

            request.AddHeader("client-id", "SOME_APIKEY_VALUE");

            request.AddHeader("sandbox-id", "SOME_STRING_VALUE");

            request.AddHeader("x-subject-bank-id", "SOME_STRING_VALUE");

            request.AddHeader("x-customer-user-agent", "SOME_STRING_VALUE");

            request.AddHeader("authorization", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-interaction-id", "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-ip-address",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-customer-last-logged-time",
            "SOME_STRING_VALUE");

            request.AddHeader("x-fapi-financial-id", "SOME_STRING_VALUE");

            IRestResponse response = client.Execute(request);
        - lang: Go
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"x-fapi-financial-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-last-logged-time\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-customer-ip-address\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-fapi-interaction-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"authorization\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-customer-user-agent\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"x-subject-bank-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"sandbox-id\", \"SOME_STRING_VALUE\")\n\treq.Header.Add(\"client-id\", \"SOME_APIKEY_VALUE\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
        - lang: Java
          source: |-
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE")
              .get()
              .addHeader("x-fapi-financial-id", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-last-logged-time", "SOME_STRING_VALUE")
              .addHeader("x-fapi-customer-ip-address", "SOME_STRING_VALUE")
              .addHeader("x-fapi-interaction-id", "SOME_STRING_VALUE")
              .addHeader("authorization", "SOME_STRING_VALUE")
              .addHeader("x-customer-user-agent", "SOME_STRING_VALUE")
              .addHeader("x-subject-bank-id", "SOME_STRING_VALUE")
              .addHeader("sandbox-id", "SOME_STRING_VALUE")
              .addHeader("client-id", "SOME_APIKEY_VALUE")
              .build();

            Response response = client.newCall(request).execute();
        - lang: Node
          source: |
            var request = require("request");

            var options = { method: 'GET',
              url:
               'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/transactions',
              qs:
               { fromBookingDateTime: 'SOME_STRING_VALUE',
                 toBookingDateTime: 'SOME_STRING_VALUE' },
              headers:
               { 'client-id': 'SOME_APIKEY_VALUE',
                 'sandbox-id': 'SOME_STRING_VALUE',
                 'x-subject-bank-id': 'SOME_STRING_VALUE',
                 'x-customer-user-agent': 'SOME_STRING_VALUE',
                 authorization: 'SOME_STRING_VALUE',
                 'x-fapi-interaction-id': 'SOME_STRING_VALUE',
                 'x-fapi-customer-ip-address': 'SOME_STRING_VALUE',
                 'x-fapi-customer-last-logged-time': 'SOME_STRING_VALUE',
                 'x-fapi-financial-id': 'SOME_STRING_VALUE' } };

            request(options, function (error, response, body) {
              if (error) throw new Error(error);

              console.log(body);
            });
        - lang: PHP
          source: |-
            <?php

            $curl = curl_init();

            curl_setopt_array($curl, array(
              CURLOPT_URL => "https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "GET",
              CURLOPT_HTTPHEADER => array(
                "authorization: SOME_STRING_VALUE",
                "client-id: SOME_APIKEY_VALUE",
                "sandbox-id: SOME_STRING_VALUE",
                "x-customer-user-agent: SOME_STRING_VALUE",
                "x-fapi-customer-ip-address: SOME_STRING_VALUE",
                "x-fapi-customer-last-logged-time: SOME_STRING_VALUE",
                "x-fapi-financial-id: SOME_STRING_VALUE",
                "x-fapi-interaction-id: SOME_STRING_VALUE",
                "x-subject-bank-id: SOME_STRING_VALUE"
              ),
            ));

            $response = curl_exec($curl);
            $err = curl_error($curl);

            curl_close($curl);

            if ($err) {
              echo "cURL Error #:" . $err;
            } else {
              echo $response;
            }
        - lang: Python
          source: >-
            import http.client


            conn = http.client.HTTPSConnection("apis.nbg.gr")


            headers = {
                'x-fapi-financial-id': "SOME_STRING_VALUE",
                'x-fapi-customer-last-logged-time': "SOME_STRING_VALUE",
                'x-fapi-customer-ip-address': "SOME_STRING_VALUE",
                'x-fapi-interaction-id': "SOME_STRING_VALUE",
                'authorization': "SOME_STRING_VALUE",
                'x-customer-user-agent': "SOME_STRING_VALUE",
                'x-subject-bank-id': "SOME_STRING_VALUE",
                'sandbox-id': "SOME_STRING_VALUE",
                'client-id': "SOME_APIKEY_VALUE"
                }

            conn.request("GET",
            "/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE",
            headers=headers)


            res = conn.getresponse()

            data = res.read()


            print(data.decode("utf-8"))
        - lang: Ruby
          source: >-
            require 'uri'

            require 'net/http'


            url =
            URI("https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE")


            http = Net::HTTP.new(url.host, url.port)

            http.use_ssl = true

            http.verify_mode = OpenSSL::SSL::VERIFY_NONE


            request = Net::HTTP::Get.new(url)

            request["x-fapi-financial-id"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-last-logged-time"] = 'SOME_STRING_VALUE'

            request["x-fapi-customer-ip-address"] = 'SOME_STRING_VALUE'

            request["x-fapi-interaction-id"] = 'SOME_STRING_VALUE'

            request["authorization"] = 'SOME_STRING_VALUE'

            request["x-customer-user-agent"] = 'SOME_STRING_VALUE'

            request["x-subject-bank-id"] = 'SOME_STRING_VALUE'

            request["sandbox-id"] = 'SOME_STRING_VALUE'

            request["client-id"] = 'SOME_APIKEY_VALUE'


            response = http.request(request)

            puts response.read_body
        - lang: cUrl
          source: |-
            curl --request GET \
              --url 'https://apis.nbg.gr/sandbox/uk.openbanking.accountinfo/oauth2/v3.1.0/transactions?fromBookingDateTime=SOME_STRING_VALUE&toBookingDateTime=SOME_STRING_VALUE' \
              --header 'authorization: SOME_STRING_VALUE' \
              --header 'client-id: SOME_APIKEY_VALUE' \
              --header 'sandbox-id: SOME_STRING_VALUE' \
              --header 'x-customer-user-agent: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-ip-address: SOME_STRING_VALUE' \
              --header 'x-fapi-customer-last-logged-time: SOME_STRING_VALUE' \
              --header 'x-fapi-financial-id: SOME_STRING_VALUE' \
              --header 'x-fapi-interaction-id: SOME_STRING_VALUE' \
              --header 'x-subject-bank-id: SOME_STRING_VALUE'
definitions:
  AccountId:
    description: >-
      A unique and immutable identifier used to identify the account resource.
      This identifier has no meaning to the account owner.
    maxLength: 40
    minLength: 1
    type: string
  OBAccount3:
    description: >-
      Unambiguous identification of the account to which credit and debit
      entries are made.
    required:
      - AccountId
      - AccountSubType
      - AccountType
      - Currency
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      Currency:
        description: >-
          Identification of the currency in which the account is held. 

          Usage: Currency should only be used in case one and the same account
          number covers several currencies

          and the initiating party needs to identify which currency needs to be
          used for settlement on the account.
        pattern: '^[A-Z]{3,3}$'
        type: string
      AccountType:
        $ref: '#/definitions/OBExternalAccountType1Code'
      AccountSubType:
        $ref: '#/definitions/OBExternalAccountSubType1Code'
      Description:
        description: Specifies the description of the account type.
        maxLength: 35
        minLength: 1
        type: string
      Nickname:
        description: >-
          The nickname of the account, assigned by the account owner in order to
          provide an additional means of identification of the account.
        maxLength: 70
        minLength: 1
        type: string
      Account:
        description: Provides the details to identify an account.
        type: array
        items:
          $ref: '#/definitions/OBCashAccount5'
      Servicer:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification5'
    additionalProperties: false
  OBAccount3Basic:
    description: >-
      Unambiguous identification of the account to which credit and debit
      entries are made.
    required:
      - AccountId
      - AccountSubType
      - AccountType
      - Currency
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      Currency:
        description: >-
          Identification of the currency in which the account is held. 

          Usage: Currency should only be used in case one and the same account
          number covers several currencies

          and the initiating party needs to identify which currency needs to be
          used for settlement on the account.
        pattern: '^[A-Z]{3,3}$'
        type: string
      AccountType:
        $ref: '#/definitions/OBExternalAccountType1Code'
      AccountSubType:
        $ref: '#/definitions/OBExternalAccountSubType1Code'
      Description:
        description: Specifies the description of the account type.
        maxLength: 35
        minLength: 1
        type: string
      Nickname:
        description: >-
          The nickname of the account, assigned by the account owner in order to
          provide an additional means of identification of the account.
        maxLength: 70
        minLength: 1
        type: string
    additionalProperties: false
  OBAccount3Detail:
    description: >-
      Unambiguous identification of the account to which credit and debit
      entries are made.
    required:
      - Account
      - AccountId
      - AccountSubType
      - AccountType
      - Currency
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      Currency:
        description: >-
          Identification of the currency in which the account is held. 

          Usage: Currency should only be used in case one and the same account
          number covers several currencies

          and the initiating party needs to identify which currency needs to be
          used for settlement on the account.
        pattern: '^[A-Z]{3,3}$'
        type: string
      AccountType:
        $ref: '#/definitions/OBExternalAccountType1Code'
      AccountSubType:
        $ref: '#/definitions/OBExternalAccountSubType1Code'
      Description:
        description: Specifies the description of the account type.
        maxLength: 35
        minLength: 1
        type: string
      Nickname:
        description: >-
          The nickname of the account, assigned by the account owner in order to
          provide an additional means of identification of the account.
        maxLength: 70
        minLength: 1
        type: string
      Account:
        description: Provides the details to identify an account.
        type: array
        items:
          $ref: '#/definitions/OBCashAccount5'
      Servicer:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification5'
    additionalProperties: false
  OBActiveCurrencyAndAmount_SimpleType:
    description: >-
      A number of monetary units specified in an active currency where the unit
      of currency is explicit and compliant with ISO 4217.
    pattern: '^\d{1,13}\.\d{1,5}$'
    type: string
  OBActiveOrHistoricCurrencyAndAmount:
    description: >-
      Amount of money of the cash balance after a transaction entry is applied
      to the account..
    required:
      - Amount
      - Currency
    type: object
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        description: >-
          A code allocated to a currency by a Maintenance Agency under an
          international identification scheme, as described in the latest
          edition of the international standard ISO 4217 "Codes for the
          representation of currencies and funds".
        pattern: '^[A-Z]{3,3}$'
        type: string
    additionalProperties: false
  OBAddressTypeCode:
    description: Identifies the nature of the postal address.
    enum:
      - Business
      - Correspondence
      - DeliveryTo
      - MailTo
      - POBox
      - Postal
      - Residential
      - Statement
    type: string
  OBBCAData1:
    title: BCA
    type: object
    properties:
      ProductDetails:
        $ref: '#/definitions/ProductDetails'
      CreditInterest:
        $ref: '#/definitions/CreditInterest'
      Overdraft:
        $ref: '#/definitions/Overdraft'
      OtherFeesCharges:
        title: OtherFeesCharges
        description: >-
          Contains details of fees and charges which are not associated with
          either Overdraft or features/benefits
        type: array
        items:
          $ref: '#/definitions/OBBCAData1_OtherFeesCharges'
    additionalProperties: false
  OBBalanceType1Code:
    description: 'Balance type, in a coded form.'
    enum:
      - ClosingAvailable
      - ClosingBooked
      - ClosingCleared
      - Expected
      - ForwardAvailable
      - Information
      - InterimAvailable
      - InterimBooked
      - InterimCleared
      - OpeningAvailable
      - OpeningBooked
      - OpeningCleared
      - PreviouslyClosedBooked
    type: string
  OBBankTransactionCodeStructure1:
    description: >-
      Set of elements used to fully identify the type of underlying transaction
      resulting in an entry.
    required:
      - Code
      - SubCode
    type: object
    properties:
      Code:
        description: Specifies the family within a domain.
        maxLength: 4
        minLength: 1
        type: string
      SubCode:
        description: Specifies the sub-product family within a specific family.
        maxLength: 4
        minLength: 1
        type: string
    additionalProperties: false
  OBBeneficiary3:
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BeneficiaryId:
        description: >-
          A unique and immutable identifier used to identify the beneficiary
          resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      Reference:
        description: >-
          Unique reference, as assigned by the creditor, to unambiguously refer
          to the payment transaction.

          Usage: If available, the initiating party should provide this
          reference in the structured remittance information, to enable
          reconciliation by the creditor upon receipt of the amount of money.

          If the business context requires the use of a creditor reference or a
          payment remit identification, and only one identifier can be passed
          through the end-to-end chain, the creditor's reference or payment
          remittance identification should be quoted in the end-to-end
          transaction identification.
        maxLength: 35
        minLength: 1
        type: string
      CreditorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification6'
      CreditorAccount:
        $ref: '#/definitions/OBCashAccount5'
    additionalProperties: false
  OBBeneficiary3Basic:
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BeneficiaryId:
        description: >-
          A unique and immutable identifier used to identify the beneficiary
          resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      Reference:
        description: >-
          Unique reference, as assigned by the creditor, to unambiguously refer
          to the payment transaction.

          Usage: If available, the initiating party should provide this
          reference in the structured remittance information, to enable
          reconciliation by the creditor upon receipt of the amount of money.

          If the business context requires the use of a creditor reference or a
          payment remit identification, and only one identifier can be passed
          through the end-to-end chain, the creditor's reference or payment
          remittance identification should be quoted in the end-to-end
          transaction identification.
        maxLength: 35
        minLength: 1
        type: string
    additionalProperties: false
  OBBeneficiary3Detail:
    required:
      - CreditorAccount
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      BeneficiaryId:
        description: >-
          A unique and immutable identifier used to identify the beneficiary
          resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      Reference:
        description: >-
          Unique reference, as assigned by the creditor, to unambiguously refer
          to the payment transaction.

          Usage: If available, the initiating party should provide this
          reference in the structured remittance information, to enable
          reconciliation by the creditor upon receipt of the amount of money.

          If the business context requires the use of a creditor reference or a
          payment remit identification, and only one identifier can be passed
          through the end-to-end chain, the creditor's reference or payment
          remittance identification should be quoted in the end-to-end
          transaction identification.
        maxLength: 35
        minLength: 1
        type: string
      CreditorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification6'
      CreditorAccount:
        $ref: '#/definitions/OBCashAccount5'
    additionalProperties: false
  OBCashBalance1:
    description: Set of elements used to define the balance details.
    required:
      - AccountId
      - Amount
      - CreditDebitIndicator
      - DateTime
      - Type
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      CreditDebitIndicator:
        description: |-
          Indicates whether the balance is a credit or a debit balance. 
          Usage: A zero balance is considered to be a credit balance.
        enum:
          - Credit
          - Debit
        type: string
      Type:
        $ref: '#/definitions/OBBalanceType1Code'
      DateTime:
        format: date-time
        description: >-
          Indicates the date (and time) of the balance.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      CreditLine:
        description: Set of elements used to provide details on the credit line.
        type: array
        items:
          $ref: '#/definitions/OBCreditLine1'
    additionalProperties: false
  OBCreditDebitCode:
    enum:
      - Credit
      - Debit
    type: string
  OBCreditLine1:
    description: Set of elements used to provide details on the credit line.
    required:
      - Included
    type: object
    properties:
      Included:
        description: >-
          Indicates whether or not the credit line is included in the balance of
          the account.

          Usage: If not present, credit line is not included in the balance
          amount of the account.
        type: boolean
      Type:
        $ref: '#/definitions/OBExternalLimitType1Code'
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  OBCurrencyExchange5:
    description: Set of elements used to provide details on the currency exchange.
    required:
      - ExchangeRate
      - SourceCurrency
    type: object
    properties:
      SourceCurrency:
        description: >-
          Currency from which an amount is to be converted in a currency
          conversion.
        pattern: '^[A-Z]{3,3}$'
        type: string
      TargetCurrency:
        description: >-
          Currency from which an amount is to be converted in a currency
          conversion.
        pattern: '^[A-Z]{3,3}$'
        type: string
      UnitCurrency:
        description: >-
          Currency from which an amount is to be converted in a currency
          conversion.
        pattern: '^[A-Z]{3,3}$'
        type: string
      ExchangeRate:
        description: >-
          Factor used to convert an amount from one currency into another. This
          reflects the price at which one currency was bought with another
          currency.

          Usage: ExchangeRate expresses the ratio between UnitCurrency and
          QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).
        type: number
      ContractIdentification:
        description: >-
          Unique identification to unambiguously identify the foreign exchange
          contract.
        maxLength: 35
        minLength: 1
        type: string
      QuotationDate:
        format: date-time
        description: >-
          Date and time at which an exchange rate is quoted.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      InstructedAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  OBDirectDebit1:
    description: Account to or from which a cash entry is made.
    required:
      - AccountId
      - MandateIdentification
      - Name
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      DirectDebitId:
        description: >-
          A unique and immutable identifier used to identify the direct debit
          resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      MandateIdentification:
        description: >-
          Direct Debit reference. For AUDDIS service users provide Core
          Reference. For non AUDDIS service users provide Core reference if
          possible or last used reference.
        maxLength: 35
        minLength: 1
        type: string
      DirectDebitStatusCode:
        $ref: '#/definitions/OBExternalDirectDebitStatus1Code'
      Name:
        description: Name of Service User.
        maxLength: 70
        minLength: 1
        type: string
      PreviousPaymentDateTime:
        format: date-time
        description: >-
          Date of most recent direct debit collection.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      PreviousPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  OBEntryStatus1Code:
    description: Status of a transaction entry on the books of the account servicer.
    enum:
      - Booked
      - Pending
    type: string
  OBExternalAccountSubType1Code:
    description: Specifies the sub type of account (product family group).
    enum:
      - ChargeCard
      - CreditCard
      - CurrentAccount
      - EMoney
      - Loan
      - Mortgage
      - PrePaidCard
      - Savings
    type: string
  OBExternalAccountType1Code:
    description: Specifies the type of account (personal or business).
    enum:
      - Business
      - Personal
    type: string
  OBExternalCardAuthorisationType1Code:
    description: The card authorisation type.
    enum:
      - ConsumerDevice
      - Contactless
      - None
      - PIN
    type: string
  OBExternalCardSchemeType1Code:
    description: Name of the card scheme.
    enum:
      - AmericanExpress
      - Diners
      - Discover
      - MasterCard
      - VISA
    type: string
  OBExternalDirectDebitStatus1Code:
    description: Specifies the status of the direct debit in code form.
    enum:
      - Active
      - Inactive
    type: string
  OBExternalLimitType1Code:
    description: 'Limit type, in a coded form.'
    enum:
      - Available
      - Credit
      - Emergency
      - Pre-Agreed
      - Temporary
    type: string
  OBExternalOfferType1Code:
    description: 'Offer type, in a coded form.'
    enum:
      - BalanceTransfer
      - LimitIncrease
      - MoneyTransfer
      - Other
      - PromotionalRate
    type: string
  OBExternalPartyType1Code:
    description: 'Party type, in a coded form.'
    enum:
      - Delegate
      - Joint
      - Sole
    type: string
  OBExternalPermissions1Code:
    description: >-
      Specifies the Open Banking account access data types. This is a list of
      the data clusters being consented by the PSU, and requested for
      authorisation with the ASPSP.
    enum:
      - ReadAccountsBasic
      - ReadAccountsDetail
      - ReadBalances
      - ReadBeneficiariesBasic
      - ReadBeneficiariesDetail
      - ReadDirectDebits
      - ReadOffers
      - ReadPAN
      - ReadParty
      - ReadPartyPSU
      - ReadProducts
      - ReadScheduledPaymentsBasic
      - ReadScheduledPaymentsDetail
      - ReadStandingOrdersBasic
      - ReadStandingOrdersDetail
      - ReadStatementsBasic
      - ReadStatementsDetail
      - ReadTransactionsBasic
      - ReadTransactionsCredits
      - ReadTransactionsDebits
      - ReadTransactionsDetail
    type: string
  OBExternalProductType1Code:
    description: >-
      Descriptive code for the product category. 

      If ProductType - "Other" is chosen, the object OtherProductType must be
      populated with name, and description.
    enum:
      - BusinessCurrentAccount
      - CommercialCreditCard
      - Other
      - PersonalCurrentAccount
      - SMELoan
    type: string
  OBExternalRequestStatus1Code:
    description: Specifies the status of consent resource in code form.
    enum:
      - Authorised
      - AwaitingAuthorisation
      - Rejected
      - Revoked
    type: string
  OBExternalScheduleType1Code:
    description: Specifies the scheduled payment date type requested
    enum:
      - Arrival
      - Execution
    type: string
  OBExternalStandingOrderStatus1Code:
    description: Specifies the status of the standing order in code form.
    enum:
      - Active
      - Inactive
    type: string
  OBExternalStatementType1Code:
    description: 'Statement type, in a coded form.'
    enum:
      - AccountClosure
      - AccountOpening
      - Annual
      - Interim
      - RegularPeriodic
    type: string
  OBMerchantDetails1:
    description: Details of the merchant involved in the transaction.
    type: object
    properties:
      MerchantName:
        description: Name by which the merchant is known.
        maxLength: 350
        minLength: 1
        type: string
      MerchantCategoryCode:
        description: >-
          Category code conform to ISO 18245, related to the type of services or
          goods the merchant provides for the transaction.
        maxLength: 4
        minLength: 3
        type: string
    additionalProperties: false
  OBOffer1:
    required:
      - AccountId
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      OfferId:
        description: >-
          A unique and immutable identifier used to identify the offer resource.
          This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      OfferType:
        $ref: '#/definitions/OBExternalOfferType1Code'
      Description:
        description: Further details of the offer.
        maxLength: 500
        minLength: 1
        type: string
      StartDateTime:
        format: date-time
        description: >-
          Date and time at which the offer starts.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      EndDateTime:
        format: date-time
        description: >-
          Date and time at which the offer ends.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      Rate:
        description: Rate associated with the offer type.
        maxLength: 10
        minLength: 1
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      Value:
        format: int32
        description: Value associated with the offer type.
        type: integer
      Term:
        description: Further details of the term of the offer.
        maxLength: 500
        minLength: 1
        type: string
      URL:
        description: >-
          URL (Uniform Resource Locator) where documentation on the offer can be
          found
        maxLength: 256
        minLength: 1
        type: string
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      Fee:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  OBPCAData1:
    title: PCA
    type: object
    properties:
      ProductDetails:
        $ref: '#/definitions/ProductDetails_1'
      CreditInterest:
        $ref: '#/definitions/CreditInterest_1'
      Overdraft:
        $ref: '#/definitions/Overdraft_1'
      OtherFeesCharges:
        $ref: '#/definitions/OtherFeesCharges'
    additionalProperties: false
  OBParty1:
    required:
      - PartyId
    type: object
    properties:
      PartyId:
        description: >-
          A unique and immutable identifier used to identify the customer
          resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      PartyNumber:
        description: Number assigned by an agent to identify its customer.
        maxLength: 35
        minLength: 1
        type: string
      PartyType:
        $ref: '#/definitions/OBExternalPartyType1Code'
      Name:
        description: >-
          Name by which a party is known and which is usually used to identify
          that party.
        maxLength: 70
        minLength: 1
        type: string
      EmailAddress:
        description: Address for electronic mail (e-mail).
        maxLength: 256
        minLength: 1
        type: string
      Phone:
        description: >-
          Collection of information that identifies a phone number, as defined
          by telecom services.
        pattern: '\+[0-9]{1,3}-[0-9()+\-]{1,30}'
        type: string
      Mobile:
        description: >-
          Collection of information that identifies a mobile phone number, as
          defined by telecom services.
        pattern: '\+[0-9]{1,3}-[0-9()+\-]{1,30}'
        type: string
      Address:
        description: Postal address of a party.
        type: array
        items:
          $ref: '#/definitions/OBPostalAddress8'
    additionalProperties: false
  OBPostalAddress6:
    description: >-
      Information that locates and identifies a specific address, as defined by
      postal services.
    type: object
    properties:
      AddressType:
        $ref: '#/definitions/OBAddressTypeCode'
      Department:
        description: Identification of a division of a large organisation or building.
        maxLength: 70
        minLength: 1
        type: string
      SubDepartment:
        description: Identification of a sub-division of a large organisation or building.
        maxLength: 70
        minLength: 1
        type: string
      StreetName:
        description: Name of a street or thoroughfare.
        maxLength: 70
        minLength: 1
        type: string
      BuildingNumber:
        description: Number that identifies the position of a building on a street.
        maxLength: 16
        minLength: 1
        type: string
      PostCode:
        description: >-
          Identifier consisting of a group of letters and/or numbers that is
          added to a postal address to assist the sorting of mail.
        maxLength: 16
        minLength: 1
        type: string
      TownName:
        description: >-
          Name of a built-up area, with defined boundaries, and a local
          government.
        maxLength: 35
        minLength: 1
        type: string
      CountrySubDivision:
        description: 'Identifies a subdivision of a country such as state, region, county.'
        maxLength: 35
        minLength: 1
        type: string
      Country:
        description: Nation with its own government.
        pattern: '^[A-Z]{2,2}$'
        type: string
      AddressLine:
        description: >-
          Information that locates and identifies a specific address, as defined
          by postal services, presented in free format text.
        maxItems: 7
        minItems: 0
        type: array
        items:
          maxLength: 70
          minLength: 1
          type: string
    additionalProperties: false
  OBPostalAddress8:
    description: Postal address of a party.
    required:
      - Country
    type: object
    properties:
      AddressType:
        $ref: '#/definitions/OBAddressTypeCode'
      AddressLine:
        description: >-
          Information that locates and identifies a specific address, as defined
          by postal services, that is presented in free format text.
        maxItems: 5
        minItems: 0
        type: array
        items:
          maxLength: 70
          minLength: 1
          type: string
      StreetName:
        description: Name of a street or thoroughfare.
        maxLength: 70
        minLength: 1
        type: string
      BuildingNumber:
        description: Number that identifies the position of a building on a street.
        maxLength: 16
        minLength: 1
        type: string
      PostCode:
        description: >-
          Identifier consisting of a group of letters and/or numbers that is
          added to a postal address to assist the sorting of mail.
        maxLength: 16
        minLength: 1
        type: string
      TownName:
        description: >-
          Name of a built-up area, with defined boundaries, and a local
          government.
        maxLength: 35
        minLength: 1
        type: string
      CountrySubDivision:
        description: 'Identifies a subdivision of a country eg, state, region, county.'
        maxLength: 35
        minLength: 1
        type: string
      Country:
        description: 'Nation with its own government, occupying a particular territory.'
        pattern: '^[A-Z]{2,2}$'
        type: string
    additionalProperties: false
  OBProduct2:
    required:
      - AccountId
    type: object
    properties:
      ProductName:
        description: >-
          The name of the product used for marketing purposes from a customer
          perspective. I.e. what the customer would recognise.
        maxLength: 350
        minLength: 1
        type: string
      ProductId:
        description: >-
          Identifier within the parent organisation for the product. Must be
          unique in the organisation.
        maxLength: 40
        minLength: 1
        type: string
      AccountId:
        $ref: '#/definitions/AccountId'
      SecondaryProductId:
        description: >-
          Identifier within the parent organisation for the product. Must be
          unique in the organisation.
        maxLength: 70
        minLength: 1
        type: string
      ProductType:
        $ref: '#/definitions/OBExternalProductType1Code'
      MarketingStateId:
        description: Unique and unambiguous identification of a Product Marketing State.
        maxLength: 35
        minLength: 1
        type: string
      OtherProductType:
        $ref: '#/definitions/OBOtherProductType1'
      BCA:
        $ref: '#/definitions/OBBCAData1'
      PCA:
        $ref: '#/definitions/OBPCAData1'
    additionalProperties: false
  OBReadAccount3:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadAccount3_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadBalance1:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadBalance1_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadBeneficiary3:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadBeneficiary3_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadConsent1:
    required:
      - Data
      - Risk
    type: object
    properties:
      Data:
        required:
          - Permissions
        type: object
        properties:
          Permissions:
            description: >-
              Specifies the Open Banking account access data types. This is a
              list of the data clusters being consented by the PSU, and
              requested for authorisation with the ASPSP.
            minItems: 1
            type: array
            items:
              description: >-
                Specifies the Open Banking account access data types. This is a
                list of the data clusters being consented by the PSU, and
                requested for authorisation with the ASPSP.
              enum:
                - ReadAccountsBasic
                - ReadAccountsDetail
                - ReadBalances
                - ReadBeneficiariesBasic
                - ReadBeneficiariesDetail
                - ReadDirectDebits
                - ReadOffers
                - ReadPAN
                - ReadParty
                - ReadPartyPSU
                - ReadProducts
                - ReadScheduledPaymentsBasic
                - ReadScheduledPaymentsDetail
                - ReadStandingOrdersBasic
                - ReadStandingOrdersDetail
                - ReadStatementsBasic
                - ReadStatementsDetail
                - ReadTransactionsBasic
                - ReadTransactionsCredits
                - ReadTransactionsDebits
                - ReadTransactionsDetail
              type: string
          ExpirationDateTime:
            format: date-time
            description: >-
              Specified date and time the permissions will expire.

              If this is not populated, the permissions will be open ended.

              All dates in the JSON payloads are represented in ISO 8601
              date-time format. 

              All date-time fields in responses must include the timezone. An
              example is below:

              2017-04-05T10:43:07+00:00
            type: string
          TransactionFromDateTime:
            format: date-time
            description: >-
              Specified start date and time for the transaction query period.

              If this is not populated, the start date will be open ended, and
              data will be returned from the earliest available transaction.

              All dates in the JSON payloads are represented in ISO 8601
              date-time format. 

              All date-time fields in responses must include the timezone. An
              example is below:

              2017-04-05T10:43:07+00:00
            type: string
          TransactionToDateTime:
            format: date-time
            description: >-
              Specified end date and time for the transaction query period.

              If this is not populated, the end date will be open ended, and
              data will be returned to the latest available transaction.

              All dates in the JSON payloads are represented in ISO 8601
              date-time format. 

              All date-time fields in responses must include the timezone. An
              example is below:

              2017-04-05T10:43:07+00:00
            type: string
        additionalProperties: false
      Risk:
        description: >-
          The Risk section is sent by the initiating party to the ASPSP. It is
          used to specify additional details for risk scoring for Account Info.
        type: object
        example: {}
    additionalProperties: false
  OBReadConsentResponse1:
    required:
      - Data
      - Links
      - Meta
      - Risk
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadConsentResponse1_Data'
      Risk:
        $ref: '#/definitions/OBRisk2'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadData1:
    required:
      - Permissions
    type: object
    properties:
      Permissions:
        description: >-
          Specifies the Open Banking account access data types. This is a list
          of the data clusters being consented by the PSU, and requested for
          authorisation with the ASPSP.
        minItems: 1
        type: array
        items:
          description: >-
            Specifies the Open Banking account access data types. This is a list
            of the data clusters being consented by the PSU, and requested for
            authorisation with the ASPSP.
          enum:
            - ReadAccountsBasic
            - ReadAccountsDetail
            - ReadBalances
            - ReadBeneficiariesBasic
            - ReadBeneficiariesDetail
            - ReadDirectDebits
            - ReadOffers
            - ReadPAN
            - ReadParty
            - ReadPartyPSU
            - ReadProducts
            - ReadScheduledPaymentsBasic
            - ReadScheduledPaymentsDetail
            - ReadStandingOrdersBasic
            - ReadStandingOrdersDetail
            - ReadStatementsBasic
            - ReadStatementsDetail
            - ReadTransactionsBasic
            - ReadTransactionsCredits
            - ReadTransactionsDebits
            - ReadTransactionsDetail
          type: string
      ExpirationDateTime:
        format: date-time
        description: >-
          Specified date and time the permissions will expire.

          If this is not populated, the permissions will be open ended.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      TransactionFromDateTime:
        format: date-time
        description: >-
          Specified start date and time for the transaction query period.

          If this is not populated, the start date will be open ended, and data
          will be returned from the earliest available transaction.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      TransactionToDateTime:
        format: date-time
        description: >-
          Specified end date and time for the transaction query period.

          If this is not populated, the end date will be open ended, and data
          will be returned to the latest available transaction.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
    additionalProperties: false
  OBReadDirectDebit1:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadDirectDebit1_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadOffer1:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadOffer1_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadParty1:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadParty1_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadProduct2:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadProduct2_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadScheduledPayment2:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadScheduledPayment2_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadStandingOrder4:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadStandingOrder4_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadStatement1:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadStatement1_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBReadTransaction4:
    required:
      - Data
      - Links
      - Meta
    type: object
    properties:
      Data:
        $ref: '#/definitions/OBReadTransaction4_Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  OBScheduledPayment2:
    required:
      - AccountId
      - InstructedAmount
      - ScheduledPaymentDateTime
      - ScheduledType
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      ScheduledPaymentId:
        description: >-
          A unique and immutable identifier used to identify the scheduled
          payment resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      ScheduledPaymentDateTime:
        format: date-time
        description: >-
          The date on which the scheduled payment will be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      ScheduledType:
        $ref: '#/definitions/OBExternalScheduleType1Code'
      Reference:
        description: >-
          Unique reference, as assigned by the creditor, to unambiguously refer
          to the payment transaction.

          Usage: If available, the initiating party should provide this
          reference in the structured remittance information, to enable
          reconciliation by the creditor upon receipt of the amount of money.

          If the business context requires the use of a creditor reference or a
          payment remit identification, and only one identifier can be passed
          through the end-to-end chain, the creditor's reference or payment
          remittance identification should be quoted in the end-to-end
          transaction identification.
        maxLength: 35
        minLength: 1
        type: string
      InstructedAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      CreditorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification5'
      CreditorAccount:
        $ref: '#/definitions/OBCashAccount5'
    additionalProperties: false
  OBScheduledPayment2Basic:
    required:
      - AccountId
      - InstructedAmount
      - ScheduledPaymentDateTime
      - ScheduledType
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      ScheduledPaymentId:
        description: >-
          A unique and immutable identifier used to identify the scheduled
          payment resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      ScheduledPaymentDateTime:
        format: date-time
        description: >-
          The date on which the scheduled payment will be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      ScheduledType:
        $ref: '#/definitions/OBExternalScheduleType1Code'
      Reference:
        description: >-
          Unique reference, as assigned by the creditor, to unambiguously refer
          to the payment transaction.

          Usage: If available, the initiating party should provide this
          reference in the structured remittance information, to enable
          reconciliation by the creditor upon receipt of the amount of money.

          If the business context requires the use of a creditor reference or a
          payment remit identification, and only one identifier can be passed
          through the end-to-end chain, the creditor's reference or payment
          remittance identification should be quoted in the end-to-end
          transaction identification.
        maxLength: 35
        minLength: 1
        type: string
      InstructedAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  OBScheduledPayment2Detail:
    required:
      - AccountId
      - CreditorAccount
      - InstructedAmount
      - ScheduledPaymentDateTime
      - ScheduledType
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      ScheduledPaymentId:
        description: >-
          A unique and immutable identifier used to identify the scheduled
          payment resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      ScheduledPaymentDateTime:
        format: date-time
        description: >-
          The date on which the scheduled payment will be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      ScheduledType:
        $ref: '#/definitions/OBExternalScheduleType1Code'
      Reference:
        description: >-
          Unique reference, as assigned by the creditor, to unambiguously refer
          to the payment transaction.

          Usage: If available, the initiating party should provide this
          reference in the structured remittance information, to enable
          reconciliation by the creditor upon receipt of the amount of money.

          If the business context requires the use of a creditor reference or a
          payment remit identification, and only one identifier can be passed
          through the end-to-end chain, the creditor's reference or payment
          remittance identification should be quoted in the end-to-end
          transaction identification.
        maxLength: 35
        minLength: 1
        type: string
      InstructedAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      CreditorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification5'
      CreditorAccount:
        $ref: '#/definitions/OBCashAccount5'
    additionalProperties: false
  OBStandingOrder4:
    required:
      - AccountId
      - Frequency
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      StandingOrderId:
        description: >-
          A unique and immutable identifier used to identify the standing order
          resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      Frequency:
        description: >-
          Individual Definitions:

          EvryDay - Every day

          EvryWorkgDay - Every working day

          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day
          within the week (01 to 07)

          WkInMnthDay - A monthly interval, specifying the week of the month (01
          to 05) and day within the week (01 to 07)

          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12,
          24), specifying the day within the month (-5 to -1, 1 to 31)

          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)

          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th
          December. 

          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th
          November.

          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th
          December. 

          Individual Patterns:

          EvryDay (ScheduleCode)

          EvryWorkgDay (ScheduleCode)

          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks
          + DayInWeek)

          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth +
          DayInWeek)

          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode +
          IntervalInMonths + DayInMonth)

          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode +
          QuarterDay

          The regular expression for this element combines five smaller versions
          for each permitted pattern. To aid legibility - the components are
          presented individually here:

          EvryDay

          EvryWorkgDay

          IntrvlWkDay:0[1-9]:0[1-7]

          WkInMnthDay:0[1-5]:0[1-7]

          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])

          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)

          Full Regular Expression:

          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        maxLength: 35
        minLength: 1
        pattern: >-
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
      Reference:
        description: >-
          Unique reference, as assigned by the creditor, to unambiguously refer
          to the payment transaction.

          Usage: If available, the initiating party should provide this
          reference in the structured remittance information, to enable
          reconciliation by the creditor upon receipt of the amount of money.

          If the business context requires the use of a creditor reference or a
          payment remit identification, and only one identifier can be passed
          through the end-to-end chain, the creditor's reference or payment
          remittance identification should be quoted in the end-to-end
          transaction identification.
        maxLength: 35
        minLength: 1
        type: string
      FirstPaymentDateTime:
        format: date-time
        description: >-
          The date on which the first payment for a Standing Order schedule will
          be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      NextPaymentDateTime:
        format: date-time
        description: >-
          The date on which the next payment for a Standing Order schedule will
          be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      FinalPaymentDateTime:
        format: date-time
        description: >-
          The date on which the final payment for a Standing Order schedule will
          be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      StandingOrderStatusCode:
        $ref: '#/definitions/OBExternalStandingOrderStatus1Code'
      FirstPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      NextPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      FinalPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
      CreditorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification5'
      CreditorAccount:
        $ref: '#/definitions/OBCashAccount5'
    additionalProperties: false
  OBStandingOrder4Basic:
    required:
      - AccountId
      - Frequency
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      StandingOrderId:
        description: >-
          A unique and immutable identifier used to identify the standing order
          resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      Frequency:
        description: >-
          Individual Definitions:

          EvryDay - Every day

          EvryWorkgDay - Every working day

          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day
          within the week (01 to 07)

          WkInMnthDay - A monthly interval, specifying the week of the month (01
          to 05) and day within the week (01 to 07)

          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12,
          24), specifying the day within the month (-5 to -1, 1 to 31)

          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)

          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th
          December. 

          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th
          November.

          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th
          December. 

          Individual Patterns:

          EvryDay (ScheduleCode)

          EvryWorkgDay (ScheduleCode)

          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks
          + DayInWeek)

          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth +
          DayInWeek)

          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode +
          IntervalInMonths + DayInMonth)

          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode +
          QuarterDay

          The regular expression for this element combines five smaller versions
          for each permitted pattern. To aid legibility - the components are
          presented individually here:

          EvryDay

          EvryWorkgDay

          IntrvlWkDay:0[1-9]:0[1-7]

          WkInMnthDay:0[1-5]:0[1-7]

          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])

          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)

          Full Regular Expression:

          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        maxLength: 35
        minLength: 1
        pattern: >-
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
      Reference:
        description: >-
          Unique reference, as assigned by the creditor, to unambiguously refer
          to the payment transaction.

          Usage: If available, the initiating party should provide this
          reference in the structured remittance information, to enable
          reconciliation by the creditor upon receipt of the amount of money.

          If the business context requires the use of a creditor reference or a
          payment remit identification, and only one identifier can be passed
          through the end-to-end chain, the creditor's reference or payment
          remittance identification should be quoted in the end-to-end
          transaction identification.
        maxLength: 35
        minLength: 1
        type: string
      FirstPaymentDateTime:
        format: date-time
        description: >-
          The date on which the first payment for a Standing Order schedule will
          be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      NextPaymentDateTime:
        format: date-time
        description: >-
          The date on which the next payment for a Standing Order schedule will
          be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      FinalPaymentDateTime:
        format: date-time
        description: >-
          The date on which the final payment for a Standing Order schedule will
          be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      StandingOrderStatusCode:
        $ref: '#/definitions/OBExternalStandingOrderStatus1Code'
      FirstPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      NextPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      FinalPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    additionalProperties: false
  OBStandingOrder4Detail:
    required:
      - AccountId
      - CreditorAccount
      - Frequency
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      StandingOrderId:
        description: >-
          A unique and immutable identifier used to identify the standing order
          resource. This identifier has no meaning to the account owner.
        maxLength: 40
        minLength: 1
        type: string
      Frequency:
        description: >-
          Individual Definitions:

          EvryDay - Every day

          EvryWorkgDay - Every working day

          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day
          within the week (01 to 07)

          WkInMnthDay - A monthly interval, specifying the week of the month (01
          to 05) and day within the week (01 to 07)

          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12,
          24), specifying the day within the month (-5 to -1, 1 to 31)

          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED)

          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th
          December. 

          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th
          November.

          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th
          December. 

          Individual Patterns:

          EvryDay (ScheduleCode)

          EvryWorkgDay (ScheduleCode)

          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks
          + DayInWeek)

          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth +
          DayInWeek)

          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode +
          IntervalInMonths + DayInMonth)

          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode +
          QuarterDay

          The regular expression for this element combines five smaller versions
          for each permitted pattern. To aid legibility - the components are
          presented individually here:

          EvryDay

          EvryWorkgDay

          IntrvlWkDay:0[1-9]:0[1-7]

          WkInMnthDay:0[1-5]:0[1-7]

          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])

          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)

          Full Regular Expression:

          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        maxLength: 35
        minLength: 1
        pattern: >-
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
      Reference:
        description: >-
          Unique reference, as assigned by the creditor, to unambiguously refer
          to the payment transaction.

          Usage: If available, the initiating party should provide this
          reference in the structured remittance information, to enable
          reconciliation by the creditor upon receipt of the amount of money.

          If the business context requires the use of a creditor reference or a
          payment remit identification, and only one identifier can be passed
          through the end-to-end chain, the creditor's reference or payment
          remittance identification should be quoted in the end-to-end
          transaction identification.
        maxLength: 35
        minLength: 1
        type: string
      FirstPaymentDateTime:
        format: date-time
        description: >-
          The date on which the first payment for a Standing Order schedule will
          be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      NextPaymentDateTime:
        format: date-time
        description: >-
          The date on which the next payment for a Standing Order schedule will
          be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      FinalPaymentDateTime:
        format: date-time
        description: >-
          The date on which the final payment for a Standing Order schedule will
          be made.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      StandingOrderStatusCode:
        $ref: '#/definitions/OBExternalStandingOrderStatus1Code'
      FirstPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      NextPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      FinalPaymentAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
      CreditorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification5'
      CreditorAccount:
        $ref: '#/definitions/OBCashAccount5'
    additionalProperties: false
  OBStatement1:
    description: Provides further details on a statement resource.
    required:
      - AccountId
      - CreationDateTime
      - EndDateTime
      - StartDateTime
      - Type
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      StatementId:
        description: >-
          Unique identifier for the statement resource within an servicing
          institution. This identifier is both unique and immutable.
        maxLength: 40
        minLength: 1
        type: string
      StatementReference:
        description: >-
          Unique reference for the statement. This reference may be optionally
          populated if available.
        maxLength: 35
        minLength: 1
        type: string
      Type:
        $ref: '#/definitions/OBExternalStatementType1Code'
      StartDateTime:
        format: date-time
        description: >-
          Date and time at which the statement period starts.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      EndDateTime:
        format: date-time
        description: >-
          Date and time at which the statement period ends.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      CreationDateTime:
        format: date-time
        description: >-
          Date and time at which the resource was created.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      StatementDescription:
        description: Other descriptions that may be available for the statement resource.
        type: array
        items:
          maxLength: 500
          minLength: 1
          type: string
      StatementBenefit:
        description: >-
          Set of elements used to provide details of a benefit or reward amount
          for the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementBenefit1'
      StatementFee:
        description: >-
          Set of elements used to provide details of a fee for the statement
          resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementFee1'
      StatementInterest:
        description: >-
          Set of elements used to provide details of a generic interest amount
          related to the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementInterest1'
      StatementDateTime:
        description: >-
          Set of elements used to provide details of a generic date time for the
          statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementDateTime1'
      StatementRate:
        description: >-
          Set of elements used to provide details of a generic rate related to
          the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementRate1'
      StatementValue:
        description: >-
          Set of elements used to provide details of a generic number value
          related to the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementValue1'
      StatementAmount:
        description: >-
          Set of elements used to provide details of a generic amount for the
          statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementAmount1'
    additionalProperties: false
  OBStatement1Basic:
    description: Provides further details on a statement resource.
    required:
      - AccountId
      - CreationDateTime
      - EndDateTime
      - StartDateTime
      - Type
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      StatementId:
        description: >-
          Unique identifier for the statement resource within an servicing
          institution. This identifier is both unique and immutable.
        maxLength: 40
        minLength: 1
        type: string
      StatementReference:
        description: >-
          Unique reference for the statement. This reference may be optionally
          populated if available.
        maxLength: 35
        minLength: 1
        type: string
      Type:
        $ref: '#/definitions/OBExternalStatementType1Code'
      StartDateTime:
        format: date-time
        description: >-
          Date and time at which the statement period starts.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      EndDateTime:
        format: date-time
        description: >-
          Date and time at which the statement period ends.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      CreationDateTime:
        format: date-time
        description: >-
          Date and time at which the resource was created.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      StatementDescription:
        description: Other descriptions that may be available for the statement resource.
        type: array
        items:
          maxLength: 500
          minLength: 1
          type: string
      StatementBenefit:
        description: >-
          Set of elements used to provide details of a benefit or reward amount
          for the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementBenefit1'
      StatementFee:
        description: >-
          Set of elements used to provide details of a fee for the statement
          resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementFee1'
      StatementInterest:
        description: >-
          Set of elements used to provide details of a generic interest amount
          related to the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementInterest1'
      StatementDateTime:
        description: >-
          Set of elements used to provide details of a generic date time for the
          statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementDateTime1'
      StatementRate:
        description: >-
          Set of elements used to provide details of a generic rate related to
          the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementRate1'
      StatementValue:
        description: >-
          Set of elements used to provide details of a generic number value
          related to the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementValue1'
    additionalProperties: false
  OBStatement1Detail:
    description: Provides further details on a statement resource.
    required:
      - AccountId
      - CreationDateTime
      - EndDateTime
      - StartDateTime
      - Type
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      StatementId:
        description: >-
          Unique identifier for the statement resource within an servicing
          institution. This identifier is both unique and immutable.
        maxLength: 40
        minLength: 1
        type: string
      StatementReference:
        description: >-
          Unique reference for the statement. This reference may be optionally
          populated if available.
        maxLength: 35
        minLength: 1
        type: string
      Type:
        $ref: '#/definitions/OBExternalStatementType1Code'
      StartDateTime:
        format: date-time
        description: >-
          Date and time at which the statement period starts.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      EndDateTime:
        format: date-time
        description: >-
          Date and time at which the statement period ends.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      CreationDateTime:
        format: date-time
        description: >-
          Date and time at which the resource was created.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      StatementDescription:
        description: Other descriptions that may be available for the statement resource.
        type: array
        items:
          maxLength: 500
          minLength: 1
          type: string
      StatementBenefit:
        description: >-
          Set of elements used to provide details of a benefit or reward amount
          for the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementBenefit1'
      StatementFee:
        description: >-
          Set of elements used to provide details of a fee for the statement
          resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementFee1'
      StatementInterest:
        description: >-
          Set of elements used to provide details of a generic interest amount
          related to the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementInterest1'
      StatementDateTime:
        description: >-
          Set of elements used to provide details of a generic date time for the
          statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementDateTime1'
      StatementRate:
        description: >-
          Set of elements used to provide details of a generic rate related to
          the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementRate1'
      StatementValue:
        description: >-
          Set of elements used to provide details of a generic number value
          related to the statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementValue1'
      StatementAmount:
        description: >-
          Set of elements used to provide details of a generic amount for the
          statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatementAmount1'
    additionalProperties: false
  OBStatementAmount1:
    description: >-
      Set of elements used to provide details of a generic amount for the
      statement resource.
    required:
      - Amount
      - CreditDebitIndicator
      - Type
    type: object
    properties:
      CreditDebitIndicator:
        description: |-
          Indicates whether the amount is a credit or a debit. 
          Usage: A zero amount is considered to be a credit amount.
        enum:
          - Credit
          - Debit
        type: string
      Type:
        $ref: '#/definitions/OBExternalStatementAmountType1Code'
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  OBStatementBenefit1:
    description: >-
      Set of elements used to provide details of a benefit or reward amount for
      the statement resource.
    required:
      - Amount
      - Type
    type: object
    properties:
      Type:
        $ref: '#/definitions/OBExternalStatementBenefitType1Code'
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  OBStatementDateTime1:
    description: >-
      Set of elements used to provide details of a generic date time for the
      statement resource.
    required:
      - DateTime
      - Type
    type: object
    properties:
      DateTime:
        format: date-time
        description: >-
          Date and time associated with the date time type.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      Type:
        $ref: '#/definitions/OBExternalStatementDateTimeType1Code'
    additionalProperties: false
  OBStatementFee1:
    description: >-
      Set of elements used to provide details of a fee for the statement
      resource.
    required:
      - Amount
      - CreditDebitIndicator
      - Type
    type: object
    properties:
      CreditDebitIndicator:
        description: |-
          Indicates whether the amount is a credit or a debit. 
          Usage: A zero amount is considered to be a credit amount.
        enum:
          - Credit
          - Debit
        type: string
      Type:
        $ref: '#/definitions/OBExternalStatementFeeType1Code'
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  OBStatementInterest1:
    description: >-
      Set of elements used to provide details of a generic interest amount
      related to the statement resource.
    required:
      - Amount
      - CreditDebitIndicator
      - Type
    type: object
    properties:
      CreditDebitIndicator:
        description: |-
          Indicates whether the amount is a credit or a debit. 
          Usage: A zero amount is considered to be a credit amount.
        enum:
          - Credit
          - Debit
        type: string
      Type:
        $ref: '#/definitions/OBExternalStatementInterestType1Code'
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  OBStatementRate1:
    description: >-
      Set of elements used to provide details of a generic rate related to the
      statement resource.
    required:
      - Rate
      - Type
    type: object
    properties:
      Rate:
        description: Rate associated with the statement rate type.
        maxLength: 10
        minLength: 1
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      Type:
        $ref: '#/definitions/OBExternalStatementRateType1Code'
    additionalProperties: false
  OBStatementValue1:
    description: >-
      Set of elements used to provide details of a generic number value related
      to the statement resource.
    required:
      - Type
      - Value
    type: object
    properties:
      Value:
        format: int32
        description: Value associated with the statement value type.
        type: integer
      Type:
        $ref: '#/definitions/OBExternalStatementValueType1Code'
    additionalProperties: false
  OBTransaction4:
    description: Provides further details on an entry in the report.
    required:
      - AccountId
      - Amount
      - BookingDateTime
      - CreditDebitIndicator
      - Status
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      TransactionId:
        description: >-
          Unique identifier for the transaction within an servicing institution.
          This identifier is both unique and immutable.
        maxLength: 40
        minLength: 1
        type: string
      TransactionReference:
        description: >-
          Unique reference for the transaction. This reference is optionally
          populated, and may as an example be the FPID in the Faster Payments
          context.
        maxLength: 35
        minLength: 1
        type: string
      StatementReference:
        description: >-
          Unique reference for the statement. This reference may be optionally
          populated if available.
        type: array
        items:
          maxLength: 35
          minLength: 1
          type: string
      CreditDebitIndicator:
        description: Indicates whether the transaction is a credit or a debit entry.
        enum:
          - Credit
          - Debit
        type: string
      Status:
        $ref: '#/definitions/OBEntryStatus1Code'
      BookingDateTime:
        format: date-time
        description: >-
          Date and time when a transaction entry is posted to an account on the
          account servicer's books.

          Usage: Booking date is the expected booking date, unless the status is
          booked, in which case it is the actual booking date.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      ValueDateTime:
        format: date-time
        description: >-
          Date and time at which assets become available to the account owner in
          case of a credit entry, or cease to be available to the account owner
          in case of a debit transaction entry.

          Usage: If transaction entry status is pending and value date is
          present, then the value date refers to an expected/requested value
          date.

          For transaction entries subject to availability/float and for which
          availability information is provided, the value date must not be used.
          In this case the availability component identifies the number of
          availability days.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      AddressLine:
        description: >-
          Information that locates and identifies a specific address for a
          transaction entry, that is presented in free format text.
        maxLength: 70
        minLength: 1
        type: string
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      CurrencyExchange:
        $ref: '#/definitions/OBCurrencyExchange5'
      BankTransactionCode:
        $ref: '#/definitions/OBBankTransactionCodeStructure1'
      ProprietaryBankTransactionCode:
        $ref: '#/definitions/OBTransaction4_ProprietaryBankTransactionCode'
      CardInstrument:
        $ref: '#/definitions/OBTransactionCardInstrument1'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
      TransactionInformation:
        $ref: '#/definitions/TransactionInformation'
      Balance:
        $ref: '#/definitions/OBTransactionCashBalance'
      MerchantDetails:
        $ref: '#/definitions/OBMerchantDetails1'
      CreditorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification6'
      CreditorAccount:
        $ref: '#/definitions/OBCashAccount6'
      DebtorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification6'
      DebtorAccount:
        $ref: '#/definitions/OBCashAccount6'
    additionalProperties: false
  OBTransaction4Basic:
    description: Provides further details on an entry in the report.
    required:
      - AccountId
      - Amount
      - BookingDateTime
      - CreditDebitIndicator
      - Status
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      TransactionId:
        description: >-
          Unique identifier for the transaction within an servicing institution.
          This identifier is both unique and immutable.
        maxLength: 40
        minLength: 1
        type: string
      TransactionReference:
        description: >-
          Unique reference for the transaction. This reference is optionally
          populated, and may as an example be the FPID in the Faster Payments
          context.
        maxLength: 35
        minLength: 1
        type: string
      StatementReference:
        description: >-
          Unique reference for the statement. This reference may be optionally
          populated if available.
        type: array
        items:
          maxLength: 35
          minLength: 1
          type: string
      CreditDebitIndicator:
        description: Indicates whether the transaction is a credit or a debit entry.
        enum:
          - Credit
          - Debit
        type: string
      Status:
        $ref: '#/definitions/OBEntryStatus1Code'
      BookingDateTime:
        format: date-time
        description: >-
          Date and time when a transaction entry is posted to an account on the
          account servicer's books.

          Usage: Booking date is the expected booking date, unless the status is
          booked, in which case it is the actual booking date.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      ValueDateTime:
        format: date-time
        description: >-
          Date and time at which assets become available to the account owner in
          case of a credit entry, or cease to be available to the account owner
          in case of a debit transaction entry.

          Usage: If transaction entry status is pending and value date is
          present, then the value date refers to an expected/requested value
          date.

          For transaction entries subject to availability/float and for which
          availability information is provided, the value date must not be used.
          In this case the availability component identifies the number of
          availability days.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      AddressLine:
        description: >-
          Information that locates and identifies a specific address for a
          transaction entry, that is presented in free format text.
        maxLength: 70
        minLength: 1
        type: string
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      CurrencyExchange:
        $ref: '#/definitions/OBCurrencyExchange5'
      BankTransactionCode:
        $ref: '#/definitions/OBBankTransactionCodeStructure1'
      ProprietaryBankTransactionCode:
        $ref: '#/definitions/OBTransaction4_ProprietaryBankTransactionCode'
      CardInstrument:
        $ref: '#/definitions/OBTransactionCardInstrument1'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    additionalProperties: false
  OBTransaction4Detail:
    description: Provides further details on an entry in the report.
    required:
      - AccountId
      - Amount
      - BookingDateTime
      - CreditDebitIndicator
      - Status
    type: object
    properties:
      AccountId:
        $ref: '#/definitions/AccountId'
      TransactionId:
        description: >-
          Unique identifier for the transaction within an servicing institution.
          This identifier is both unique and immutable.
        maxLength: 40
        minLength: 1
        type: string
      TransactionReference:
        description: >-
          Unique reference for the transaction. This reference is optionally
          populated, and may as an example be the FPID in the Faster Payments
          context.
        maxLength: 35
        minLength: 1
        type: string
      StatementReference:
        description: >-
          Unique reference for the statement. This reference may be optionally
          populated if available.
        type: array
        items:
          maxLength: 35
          minLength: 1
          type: string
      CreditDebitIndicator:
        description: Indicates whether the transaction is a credit or a debit entry.
        enum:
          - Credit
          - Debit
        type: string
      Status:
        $ref: '#/definitions/OBEntryStatus1Code'
      BookingDateTime:
        format: date-time
        description: >-
          Date and time when a transaction entry is posted to an account on the
          account servicer's books.

          Usage: Booking date is the expected booking date, unless the status is
          booked, in which case it is the actual booking date.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      ValueDateTime:
        format: date-time
        description: >-
          Date and time at which assets become available to the account owner in
          case of a credit entry, or cease to be available to the account owner
          in case of a debit transaction entry.

          Usage: If transaction entry status is pending and value date is
          present, then the value date refers to an expected/requested value
          date.

          For transaction entries subject to availability/float and for which
          availability information is provided, the value date must not be used.
          In this case the availability component identifies the number of
          availability days.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      AddressLine:
        description: >-
          Information that locates and identifies a specific address for a
          transaction entry, that is presented in free format text.
        maxLength: 70
        minLength: 1
        type: string
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeAmount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      CurrencyExchange:
        $ref: '#/definitions/OBCurrencyExchange5'
      BankTransactionCode:
        $ref: '#/definitions/OBBankTransactionCodeStructure1'
      ProprietaryBankTransactionCode:
        $ref: '#/definitions/OBTransaction4_ProprietaryBankTransactionCode'
      CardInstrument:
        $ref: '#/definitions/OBTransactionCardInstrument1'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
      TransactionInformation:
        $ref: '#/definitions/TransactionInformation'
      Balance:
        $ref: '#/definitions/OBTransactionCashBalance'
      MerchantDetails:
        $ref: '#/definitions/OBMerchantDetails1'
      CreditorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification6'
      CreditorAccount:
        $ref: '#/definitions/OBCashAccount6'
      DebtorAgent:
        $ref: '#/definitions/OBBranchAndFinancialInstitutionIdentification6'
      DebtorAccount:
        $ref: '#/definitions/OBCashAccount6'
    additionalProperties: false
  OBTransactionCardInstrument1:
    description: Set of elements to describe the card instrument used in the transaction.
    required:
      - CardSchemeName
    type: object
    properties:
      CardSchemeName:
        $ref: '#/definitions/OBExternalCardSchemeType1Code'
      AuthorisationType:
        $ref: '#/definitions/OBExternalCardAuthorisationType1Code'
      Name:
        description: Name of the cardholder using the card instrument.
        maxLength: 70
        minLength: 1
        type: string
      Identification:
        description: >-
          Identification assigned by an institution to identify the card
          instrument used in the transaction. This identification is known by
          the account owner, and may be masked.
        maxLength: 34
        minLength: 1
        type: string
    additionalProperties: false
  OBTransactionCashBalance:
    description: >-
      Set of elements used to define the balance as a numerical representation
      of the net increases and decreases in an account after a transaction entry
      is applied to the account.
    required:
      - Amount
      - CreditDebitIndicator
      - Type
    type: object
    properties:
      CreditDebitIndicator:
        description: |-
          Indicates whether the balance is a credit or a debit balance. 
          Usage: A zero balance is considered to be a credit balance.
        enum:
          - Credit
          - Debit
        type: string
      Type:
        $ref: '#/definitions/OBBalanceType1Code'
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
    additionalProperties: false
  TransactionInformation:
    description: |-
      Further details of the transaction. 
      This is the transaction narrative, which is unstructured text.
    maxLength: 500
    minLength: 1
    type: string
  OBOtherProductType1:
    description: >-
      This field provides extension to the ProductType enumeration.

      If ProductType - "Other" is chosen, this field must be populated with
      name, and description for ASPSP specific product type.
    required:
      - Description
      - Name
    type: object
    properties:
      Name:
        description: Name of "Other" product type.
        maxLength: 350
        minLength: 1
        type: string
      Description:
        description: Description of "Other" product type.
        maxLength: 350
        minLength: 1
        type: string
    additionalProperties: false
  OBSupplementaryData1:
    description: >-
      Additional information that can not be captured in the structured fields
      and/or any other specific block.
    type: object
    additionalProperties: false
  OBBranchAndFinancialInstitutionIdentification5:
    description: >-
      Party that manages the account on behalf of the account owner, that is
      manages the registration and booking of entries on the account, calculates
      balances on the account and provides information about the account.

      This is the servicer of the beneficiary account.
    required:
      - Identification
      - SchemeName
    type: object
    properties:
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
      Identification:
        description: Unique and unambiguous identification of the servicing institution.
        maxLength: 35
        minLength: 1
        type: string
    additionalProperties: false
  OBExternalFinancialInstitutionIdentification4Code:
    description: >-
      Name of the identification scheme, in a coded form as published in an
      external list.
    maxLength: 40
    minLength: 1
    type: string
    example:
      - UK.OBIE.BICFI
  OBCashAccount5:
    description: Provides the details to identify the beneficiary account.
    required:
      - Identification
      - SchemeName
    type: object
    properties:
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      Identification:
        description: Beneficiary account identification.
        maxLength: 256
        minLength: 1
        type: string
      Name:
        description: >-
          Name of the account, as assigned by the account servicing institution.

          Usage: The account name is the name or names of the account owner(s)
          represented at an account level. The account name is not the product
          name or the nickname of the account.
        maxLength: 70
        minLength: 1
        type: string
      SecondaryIdentification:
        description: >-
          This is secondary identification of the account, as assigned by the
          account servicing institution. 

          This can be used by building societies to additionally identify
          accounts with a roll number (in addition to a sort code and account
          number combination).
        maxLength: 34
        minLength: 1
        type: string
    additionalProperties: false
  OBCashAccount6:
    description: >-
      Unambiguous identification of the account of the debtor, in the case of a
      crebit transaction.
    type: object
    properties:
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      Identification:
        description: >-
          Identification assigned by an institution to identify an account. This
          identification is known by the account owner.
        maxLength: 256
        minLength: 1
        type: string
      Name:
        description: >-
          Name of the account, as assigned by the account servicing institution.

          Usage: The account name is the name or names of the account owner(s)
          represented at an account level. The account name is not the product
          name or the nickname of the account.
        maxLength: 70
        minLength: 1
        type: string
      SecondaryIdentification:
        description: >-
          This is secondary identification of the account, as assigned by the
          account servicing institution. 

          This can be used by building societies to additionally identify
          accounts with a roll number (in addition to a sort code and account
          number combination).
        maxLength: 34
        minLength: 1
        type: string
    additionalProperties: false
  OBExternalAccountIdentification4Code:
    description: >-
      Name of the identification scheme, in a coded form as published in an
      external list.
    maxLength: 40
    minLength: 1
    type: string
    example:
      - UK.OBIE.BBAN
      - UK.OBIE.IBAN
      - UK.OBIE.PAN
      - UK.OBIE.Paym
      - UK.OBIE.SortCodeAccountNumber
  OBExternalStatementBenefitType1Code:
    description: 'Benefit type, in a coded form.'
    maxLength: 40
    minLength: 1
    type: string
    example:
      - UK.OBIE.Cashback
      - UK.OBIE.Insurance
      - UK.OBIE.TravelDiscount
      - UK.OBIE.TravelInsurance
  OBExternalStatementFeeType1Code:
    description: 'Fee type, in a coded form.'
    maxLength: 40
    minLength: 1
    type: string
    example:
      - UK.OBIE.Annual
      - UK.OBIE.BalanceTransfer
      - UK.OBIE.CashAdvance
      - UK.OBIE.CashTransaction
      - UK.OBIE.ForeignCashTransaction
      - UK.OBIE.ForeignTransaction
      - UK.OBIE.Gambling
      - UK.OBIE.LatePayment
      - UK.OBIE.MoneyTransfer
      - UK.OBIE.Monthly
      - UK.OBIE.Overlimit
      - UK.OBIE.PostalOrder
      - UK.OBIE.PrizeEntry
      - UK.OBIE.StatementCopy
      - UK.OBIE.Total
  OBExternalStatementInterestType1Code:
    description: 'Interest amount type, in a coded form.'
    maxLength: 40
    minLength: 1
    type: string
    example:
      - UK.OBIE.BalanceTransfer
      - UK.OBIE.Cash
      - UK.OBIE.EstimatedNext
      - UK.OBIE.Purchase
      - UK.OBIE.Total
  OBExternalStatementDateTimeType1Code:
    description: 'Date time type, in a coded form.'
    maxLength: 40
    minLength: 1
    type: string
    example:
      - UK.OBIE.BalanceTransferPromoEnd
      - UK.OBIE.DirectDebitDue
      - UK.OBIE.LastPayment
      - UK.OBIE.LastStatement
      - UK.OBIE.NextStatement
      - UK.OBIE.PaymentDue
      - UK.OBIE.PurchasePromoEnd
      - UK.OBIE.StatementAvailable
  OBExternalStatementRateType1Code:
    description: 'Statement rate type, in a coded form.'
    maxLength: 40
    minLength: 1
    type: string
    example:
      - UK.OBIE.AnnualBalanceTransfer
      - UK.OBIE.AnnualBalanceTransferAfterPromo
      - UK.OBIE.AnnualBalanceTransferPromo
      - UK.OBIE.AnnualCash
      - UK.OBIE.AnnualPurchase
      - UK.OBIE.AnnualPurchaseAfterPromo
      - UK.OBIE.AnnualPurchasePromo
      - UK.OBIE.MonthlyBalanceTransfer
      - UK.OBIE.MonthlyCash
      - UK.OBIE.MonthlyPurchase
  OBExternalStatementValueType1Code:
    description: 'Statement value type, in a coded form.'
    maxLength: 40
    minLength: 1
    type: string
    example:
      - UK.OBIE.AirMilesPoints
      - UK.OBIE.AirMilesPointsBalance
      - UK.OBIE.Credits
      - UK.OBIE.Debits
      - UK.OBIE.HotelPoints
      - UK.OBIE.HotelPointsBalance
      - UK.OBIE.RetailShoppingPoints
      - UK.OBIE.RetailShoppingPointsBalance
  OBExternalStatementAmountType1Code:
    description: 'Amount type, in a coded form.'
    maxLength: 40
    minLength: 1
    type: string
    example:
      - UK.OBIE.ArrearsClosingBalance
      - UK.OBIE.AvailableBalance
      - UK.OBIE.AverageBalanceWhenInCredit
      - UK.OBIE.AverageBalanceWhenInDebit
      - UK.OBIE.AverageDailyBalance
      - UK.OBIE.BalanceTransferClosingBalance
      - UK.OBIE.CashClosingBalance
      - UK.OBIE.ClosingBalance
      - UK.OBIE.CreditLimit
      - UK.OBIE.CurrentPayment
      - UK.OBIE.DirectDebitPaymentDue
      - UK.OBIE.FSCSInsurance
      - UK.OBIE.MinimumPaymentDue
      - UK.OBIE.PendingTransactionsBalance
      - UK.OBIE.PreviousClosingBalance
      - UK.OBIE.PreviousPayment
      - UK.OBIE.PurchaseClosingBalance
      - UK.OBIE.StartingBalance
      - UK.OBIE.TotalAdjustments
      - UK.OBIE.TotalCashAdvances
      - UK.OBIE.TotalCharges
      - UK.OBIE.TotalCredits
      - UK.OBIE.TotalDebits
      - UK.OBIE.TotalPurchases
  OBBranchAndFinancialInstitutionIdentification6:
    description: Financial institution servicing an account for the debtor.
    type: object
    properties:
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
      Identification:
        description: >-
          Unique and unambiguous identification of a financial institution or a
          branch of a financial institution.
        maxLength: 35
        minLength: 1
        type: string
      Name:
        description: >-
          Name by which an agent is known and which is usually used to identify
          that agent.
        maxLength: 140
        minLength: 1
        type: string
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    additionalProperties: false
  OBError1:
    required:
      - ErrorCode
      - Message
    type: object
    properties:
      ErrorCode:
        description: 'Low level textual error code, e.g., UK.OBIE.Field.Missing'
        maxLength: 128
        minLength: 1
        type: string
      Message:
        description: >-
          A description of the error that occurred. e.g., 'A mandatory field
          isn't supplied' or 'RequestedExecutionDateTime must be in future'

          OBIE doesn't standardise this field
        maxLength: 500
        minLength: 1
        type: string
      Path:
        description: >-
          Recommended but optional reference to the JSON Path of the field with
          error, e.g., Data.Initiation.InstructedAmount.Currency
        maxLength: 500
        minLength: 1
        type: string
      Url:
        description: >-
          URL to help remediate the problem, or provide more information, or to
          API Reference, or help etc
        type: string
    additionalProperties: false
  OBErrorResponse1:
    description: >-
      An array of detail error codes, and messages, and URLs to documentation to
      help remediation.
    required:
      - Code
      - Errors
      - Message
    type: object
    properties:
      Code:
        description: 'High level textual error code, to help categorize the errors.'
        maxLength: 40
        minLength: 1
        type: string
      Id:
        description: >-
          A unique reference for the error instance, for audit purposes, in case
          of unknown/unclassified errors.
        maxLength: 40
        minLength: 1
        type: string
      Message:
        description: >-
          Brief Error message, e.g., 'There is something wrong with the request
          parameters provided'
        maxLength: 500
        minLength: 1
        type: string
      Errors:
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/OBError1'
    additionalProperties: false
  ISODateTime:
    format: date-time
    description: >-
      All dates in the JSON payloads are represented in ISO 8601 date-time
      format. 

      All date-time fields in responses must include the timezone. An example is
      below:

      2017-04-05T10:43:07+00:00
    type: string
  Links:
    description: Links relevant to the payload
    required:
      - Self
    type: object
    properties:
      Self:
        format: uri
        type: string
      First:
        format: uri
        type: string
      Prev:
        format: uri
        type: string
      Next:
        format: uri
        type: string
      Last:
        format: uri
        type: string
    additionalProperties: false
  Meta:
    title: MetaData
    description: Meta Data relevant to the payload
    type: object
    properties:
      TotalPages:
        format: int32
        type: integer
      FirstAvailableDateTime:
        $ref: '#/definitions/ISODateTime'
      LastAvailableDateTime:
        $ref: '#/definitions/ISODateTime'
    additionalProperties: false
  OBRisk2:
    description: >-
      The Risk section is sent by the initiating party to the ASPSP. It is used
      to specify additional details for risk scoring for Account Info.
    type: object
    example: {}
  SandboxRequest:
    title: Root Type for SandboxRequest
    description: The root of the SandboxRequest type's schema.
    type: object
    properties:
      sandboxId:
        description: your sandbox id
        type: string
        example: TestSandbox
  SandboxDataModel:
    description: Sandbox Data Model
    type: object
    properties:
      sandboxId:
        default: uk-opb-sandbox
        type: string
      users:
        type: array
        items:
          properties:
            userid:
              example: testuser
            consents:
              $ref: '#/definitions/SandboxDataModel_consents'
            accounts:
              $ref: '#/definitions/SandboxDataModel_accounts'
  ProductDetails:
    properties:
      Segment:
        title: Segment
        description: >-
          Market segmentation is a marketing term referring to the aggregating
          of prospective buyers into groups, or segments, that have common needs
          and respond similarly to a marketing action. Market segmentation
          enables companies to target different categories of consumers who
          perceive the full value of certain products and services differently
          from one another.


          Read more: Market Segmentation
          http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 

          With respect to BCA products, they are segmented in relation to
          different markets that they wish to focus on. 
        type: array
        items:
          description: >-
            Market segmentation is a marketing term referring to the aggregating
            of prospective buyers into groups, or segments, that have common
            needs and respond similarly to a marketing action. Market
            segmentation enables companies to target different categories of
            consumers who perceive the full value of certain products and
            services differently from one another.


            Read more: Market Segmentation
            http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 

            With respect to BCA products, they are segmented in relation to
            different markets that they wish to focus on. 
          enum:
            - ClientAccount
            - Standard
            - NonCommercialChaitiesClbSoc
            - NonCommercialPublicAuthGovt
            - Religious
            - SectorSpecific
            - Startup
            - Switcher
          type: string
      FeeFreeLength:
        format: float
        title: FeeFreeLength
        description: The length/duration of the fee free period
        type: number
      FeeFreeLengthPeriod:
        title: FeeFreeLengthPeriod
        description: >-
          The unit of period (days, weeks, months etc.) of the promotional
          length
        enum:
          - Day
          - Half Year
          - Month
          - Quarter
          - Week
          - Year
        type: string
      Notes:
        title: Notes
        description: Optional additional notes to supplement the Core product details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
  OtherBankInterestType:
    description: >-
      Other interest rate types which are not available in the standard code
      list
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  OtherApplicationFrequency:
    description: >-
      Other application frequencies that are not available in the standard code
      list
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  OtherCalculationFrequency:
    description: >-
      Other calculation frequency which is not available in the standard code
      set.
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  CreditInterest_TierBand:
    description: Tier Band Details
    required:
      - AER
      - ApplicationFrequency
      - FixedVariableInterestRateType
      - TierValueMinimum
    properties:
      Identification:
        title: Identification
        description: Unique and unambiguous identification of a  Tier Band for a BCA.
        maxLength: 35
        minLength: 1
        type: string
      TierValueMinimum:
        title: TierValueMinimum
        description: Minimum deposit value for which the credit interest tier applies.
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      TierValueMaximum:
        title: TierValueMaximum
        description: Maximum deposit value for which the credit interest tier applies.
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      CalculationFrequency:
        title: CalculationFrequency
        description: How often is credit interest calculated for the account.
        enum:
          - Daily
          - HalfYearly
          - Monthly
          - Other
          - Quarterly
          - PerStatementDate
          - Weekly
          - Yearly
        type: string
      ApplicationFrequency:
        title: ApplicationFrequency
        description: >-
          How often is interest applied to the BCA for this tier/band i.e. how
          often the financial institution pays accumulated interest to the
          customer's BCA.
        enum:
          - Daily
          - HalfYearly
          - Monthly
          - Other
          - Quarterly
          - PerStatementDate
          - Weekly
          - Yearly
        type: string
      DepositInterestAppliedCoverage:
        title: DepositInterestAppliedCoverage
        description: Amount on which Interest applied.
        enum:
          - Banded
          - Tiered
          - Whole
        type: string
      FixedVariableInterestRateType:
        title: FixedVariableInterestRateType
        description: 'Type of interest rate, Fixed or Variable'
        enum:
          - Fixed
          - Variable
        type: string
      AER:
        title: AER
        description: >-
          The annual equivalent rate (AER) is interest that is calculated under
          the assumption that any interest paid is combined with the original
          balance and the next interest payment will be based on the slightly
          higher account balance. Overall, this means that interest can be
          compounded several times in a year depending on the number of times
          that interest payments are made. 


          Read more: Annual Equivalent Rate (AER)
          http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      BankInterestRateType:
        title: BankInterestRateType
        description: >-
          Interest rate types, other than AER, which financial institutions may
          use to describe the annual interest rate payable to the BCA.
        enum:
          - Gross
          - Other
        type: string
      BankInterestRate:
        title: BankInterestRate
        description: Bank Interest for the BCA product
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      Notes:
        title: Notes
        description: Optional additional notes to supplement the Tier Band details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OtherBankInterestType:
        $ref: '#/definitions/OtherBankInterestType'
      OtherApplicationFrequency:
        $ref: '#/definitions/OtherApplicationFrequency'
      OtherCalculationFrequency:
        $ref: '#/definitions/OtherCalculationFrequency'
  CreditInterest_TierBandSet:
    description: The group of tiers or bands for which credit interest can be applied.
    required:
      - Destination
      - TierBand
      - TierBandMethod
    properties:
      TierBandMethod:
        title: TierBandMethod
        description: >-
          The methodology of how credit interest is paid/applied. It can be:-


          1. Banded

          Interest rates are banded. i.e. Increasing rate on whole balance as
          balance increases.


          2. Tiered

          Interest rates are tiered. i.e. increasing rate for each tier as
          balance increases, but interest paid on tier fixed for that tier and
          not on whole balance.


          3. Whole

          The same interest rate is applied irrespective of the BCA balance
        enum:
          - Banded
          - Tiered
          - Whole
        type: string
      CalculationMethod:
        title: CalculationMethod
        description: Methods of calculating interest
        enum:
          - Compound
          - SimpleInterest
        type: string
      Destination:
        title: Destination
        description: >-
          Describes whether accrued interest is payable only to the BCA or to
          another bank account
        enum:
          - PayAway
          - SelfCredit
        type: string
      Notes:
        title: Notes
        description: Optional additional notes to supplement the Tier Band Set details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      TierBand:
        title: TierBand
        description: Tier Band Details
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/CreditInterest_TierBand'
  CreditInterest:
    description: Details about the interest that may be payable to the BCA account holders
    required:
      - TierBandSet
    properties:
      TierBandSet:
        title: TierBandSet
        description: The group of tiers or bands for which credit interest can be applied.
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/CreditInterest_TierBandSet'
  Overdraft_OtherFeeType:
    description: Other fee type code which is not available in the standard code set
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  Overdraft_OverdraftFeeChargeCap:
    description: >-
      Details about any caps (maximum charges) that apply to a particular
      fee/charge. Capping can either be based on an amount (in gbp), an amount
      (in items) or a rate.
    required:
      - FeeType
      - MinMaxType
    properties:
      FeeType:
        title: FeeType
        description: Fee/charge type which is being capped
        minItems: 1
        type: array
        items:
          description: Overdraft fee type
          enum:
            - ArrangedOverdraft
            - AnnualReview
            - EmergencyBorrowing
            - BorrowingItem
            - OverdraftRenewal
            - OverdraftSetup
            - Surcharge
            - TempOverdraft
            - UnauthorisedBorrowing
            - UnauthorisedPaidTrans
            - Other
            - UnauthorisedUnpaidTrans
          type: string
      MinMaxType:
        title: MinMaxType
        description: Min Max type
        enum:
          - Minimum
          - Maximum
        type: string
      FeeCapOccurrence:
        format: float
        title: FeeCapOccurrence
        description: >-
          Indicates whether the advertised overdraft rate is guaranteed to be
          offered to a borrower by the bank e.g. if it’s part of a government
          scheme, or whether the rate may vary dependent on the applicant’s
          circumstances.
        type: number
      FeeCapAmount:
        title: FeeCapAmount
        description: Cap amount charged for a fee/charge
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      CappingPeriod:
        title: CappingPeriod
        description: 'Period e.g. day, week, month etc. for which the fee/charge is capped'
        enum:
          - Day
          - Half Year
          - Month
          - Quarter
          - Week
          - Year
        type: string
      Notes:
        title: Notes
        description: Notes related to Overdraft fee charge cap
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OtherFeeType:
        title: OtherFeeType
        description: Other fee type code which is not available in the standard code set
        type: array
        items:
          $ref: '#/definitions/Overdraft_OtherFeeType'
  OtherFeeType:
    description: Other Fee type which is not available in the standard code set
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  OtherFeeRateType:
    description: Other fee rate type code which is not available in the standard code set
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  Overdraft_OverdraftFeeChargeDetail:
    description: Details about the fees/charges
    required:
      - ApplicationFrequency
      - FeeType
    properties:
      FeeType:
        title: FeeType
        description: Overdraft fee type
        enum:
          - ArrangedOverdraft
          - AnnualReview
          - EmergencyBorrowing
          - BorrowingItem
          - OverdraftRenewal
          - OverdraftSetup
          - Surcharge
          - TempOverdraft
          - UnauthorisedBorrowing
          - UnauthorisedPaidTrans
          - Other
          - UnauthorisedUnpaidTrans
        type: string
      NegotiableIndicator:
        title: NegotiableIndicator
        description: Indicates whether fee and charges are negotiable
        type: boolean
      OverdraftControlIndicator:
        title: OverdraftControlIndicator
        description: >-
          Indicates if the fee/charge is already covered by an 'Overdraft
          Control' fee or not.
        type: boolean
      IncrementalBorrowingAmount:
        title: IncrementalBorrowingAmount
        description: >-
          Every additional tranche of an overdraft balance to which an overdraft
          fee is applied
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeAmount:
        title: FeeAmount
        description: >-
          Amount charged for an overdraft fee/charge (where it is charged in
          terms of an amount rather than a rate)
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeRate:
        title: FeeRate
        description: >-
          Rate charged for overdraft fee/charge (where it is charged in terms of
          a rate rather than an amount)
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeRateType:
        title: FeeRateType
        description: >-
          Rate type for overdraft fee/charge (where it is charged in terms of a
          rate rather than an amount)
        enum:
          - Gross
          - Other
        type: string
      ApplicationFrequency:
        title: ApplicationFrequency
        description: Frequency at which the overdraft charge is applied to the account
        enum:
          - OnClosing
          - OnOpening
          - ChargingPeriod
          - Daily
          - PerItem
          - Monthly
          - OnAnniversary
          - Other
          - PerHundredPounds
          - PerHour
          - PerOccurrence
          - PerSheet
          - PerTransaction
          - PerTransactionAmount
          - PerTransactionPercentage
          - Quarterly
          - SixMonthly
          - StatementMonthly
          - Weekly
          - Yearly
        type: string
      CalculationFrequency:
        title: CalculationFrequency
        description: How often is the overdraft fee/charge calculated for the account.
        enum:
          - OnClosing
          - OnOpening
          - ChargingPeriod
          - Daily
          - PerItem
          - Monthly
          - OnAnniversary
          - Other
          - PerHundredPounds
          - PerHour
          - PerOccurrence
          - PerSheet
          - PerTransaction
          - PerTransactionAmount
          - PerTransactionPercentage
          - Quarterly
          - SixMonthly
          - StatementMonthly
          - Weekly
          - Yearly
        type: string
      Notes:
        title: Notes
        description: >-
          Free text for capturing any other info related to Overdraft Fees
          Charge Details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OverdraftFeeChargeCap:
        title: OverdraftFeeChargeCap
        description: >-
          Details about any caps (maximum charges) that apply to a particular
          fee/charge. Capping can either be based on an amount (in gbp), an
          amount (in items) or a rate.
        type: array
        items:
          $ref: '#/definitions/Overdraft_OverdraftFeeChargeCap'
      OtherFeeType:
        $ref: '#/definitions/OtherFeeType'
      OtherFeeRateType:
        $ref: '#/definitions/OtherFeeRateType'
      OtherApplicationFrequency:
        $ref: '#/definitions/OtherApplicationFrequency'
      OtherCalculationFrequency:
        $ref: '#/definitions/OtherCalculationFrequency'
  Overdraft_OverdraftFeesCharges:
    description: Overdraft fees and charges
    required:
      - OverdraftFeeChargeDetail
    properties:
      OverdraftFeeChargeCap:
        title: OverdraftFeeChargeCap
        description: >-
          Details about any caps (maximum charges) that apply to a particular
          fee/charge. Capping can either be based on an amount (in gbp), an
          amount (in items) or a rate.
        type: array
        items:
          $ref: '#/definitions/Overdraft_OverdraftFeeChargeCap'
      OverdraftFeeChargeDetail:
        title: OverdraftFeeChargeDetail
        description: Details about the fees/charges
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/Overdraft_OverdraftFeeChargeDetail'
  Overdraft_OverdraftTierBand:
    description: Provides overdraft details for a specific tier or band
    required:
      - TierValueMin
    properties:
      Identification:
        title: Identification
        description: Unique and unambiguous identification of a  Tier Band for a overdraft.
        maxLength: 35
        minLength: 1
        type: string
      TierValueMin:
        title: TierValueMin
        description: Minimum value of Overdraft Tier/Band
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      TierValueMax:
        title: TierValueMax
        description: Maximum value of Overdraft Tier/Band
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      EAR:
        title: EAR
        description: >-
          EAR means Effective Annual Rate and/or Equivalent Annual Rate
          (frequently

          used interchangeably), being the actual annual interest rate of an
          Overdraft.
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      AgreementLengthMin:
        format: float
        title: AgreementLengthMin
        description: Specifies the minimum length of a band for a fixed overdraft agreement
        type: number
      AgreementLengthMax:
        format: float
        title: AgreementLengthMax
        description: Specifies the maximum length of a band for a fixed overdraft agreement
        type: number
      AgreementPeriod:
        title: AgreementPeriod
        description: Specifies the period of a fixed length overdraft agreement
        enum:
          - Day
          - Half Year
          - Month
          - Quarter
          - Week
          - Year
        type: string
      OverdraftInterestChargingCoverage:
        title: OverdraftInterestChargingCoverage
        description: >-
          Refers to which interest rate is applied when interests are tiered.
          For example, if an overdraft balance is £2k and the interest tiers
          are:- 0-£500 0.1%, 500-1000 0.2%, 1000-10000 0.5%, then the applicable
          interest rate could either be 0.5% of the entire balance (since the
          account balance sits in the top interest tier) or
          (0.1%*500)+(0.2%*500)+(0.5%*1000). In the 1st situation, we say the
          interest is applied to the ‘Whole’ of the account balance,  and in the
          2nd that it is ‘Tiered’.
        enum:
          - Banded
          - Tiered
          - Whole
        type: string
      BankGuaranteedIndicator:
        title: BankGuaranteedIndicator
        description: >-
          Indicates whether the advertised overdraft rate is guaranteed to be
          offered to a borrower by the bank e.g. if it’s part of a government
          scheme, or whether the rate may vary dependent on the applicant’s
          circumstances.
        type: boolean
      Notes:
        title: Notes
        description: Optional additional notes to supplement the Tier/band details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OverdraftFeesCharges:
        title: OverdraftFeesCharges
        description: Overdraft fees and charges
        type: array
        items:
          $ref: '#/definitions/Overdraft_OverdraftFeesCharges'
  Overdraft_OverdraftFeesCharges_1:
    description: Overdraft fees and charges details
    required:
      - OverdraftFeeChargeDetail
    properties:
      OverdraftFeeChargeCap:
        title: OverdraftFeeChargeCap
        description: >-
          Details about any caps (maximum charges) that apply to a particular
          fee/charge. Capping can either be based on an amount (in gbp), an
          amount (in items) or a rate.
        type: array
        items:
          $ref: '#/definitions/Overdraft_OverdraftFeeChargeCap'
      OverdraftFeeChargeDetail:
        title: OverdraftFeeChargeDetail
        description: Details about the fees/charges
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/Overdraft_OverdraftFeeChargeDetail'
  Overdraft_OverdraftTierBandSet:
    description: Tier band set details
    required:
      - OverdraftTierBand
      - TierBandMethod
    properties:
      TierBandMethod:
        title: TierBandMethod
        description: >-
          The methodology of how overdraft is charged. It can be:

          'Whole'  Where the same charge/rate is applied to the entirety of the
          overdraft balance (where charges are applicable). 

          'Tiered' Where different charges/rates are applied dependent on
          overdraft maximum and minimum balance amount tiers defined by the
          lending financial organisation

          'Banded' Where different charges/rates are applied dependent on
          overdraft maximum and minimum balance amount bands defined by a
          government organisation.
        enum:
          - Banded
          - Tiered
          - Whole
        type: string
      OverdraftType:
        title: OverdraftType
        description: >-
          An overdraft can either be 'committed' which means that the facility
          cannot be withdrawn without reasonable notification before it's agreed
          end date, or 'on demand' which means that the financial institution
          can demand repayment at any point in time.
        enum:
          - Committed
          - OnDemand
        type: string
      Identification:
        title: Identification
        description: >-
          Unique and unambiguous identification of a  Tier Band for a overdraft
          product.
        maxLength: 35
        minLength: 1
        type: string
      AuthorisedIndicator:
        title: AuthorisedIndicator
        description: Indicates if the Overdraft is authorised (Y) or unauthorised (N)
        type: boolean
      BufferAmount:
        title: BufferAmount
        description: >-
          When a customer exceeds their credit limit, a financial institution
          will not charge the customer unauthorised overdraft charges if they do
          not exceed by more than the buffer amount. Note: Authorised overdraft
          charges may still apply.
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      Notes:
        title: Notes
        description: >-
          Optional additional notes to supplement the overdraft Tier Band Set
          details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OverdraftTierBand:
        title: OverdraftTierBand
        description: Provides overdraft details for a specific tier or band
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/Overdraft_OverdraftTierBand'
      OverdraftFeesCharges:
        title: OverdraftFeesCharges
        description: Overdraft fees and charges details
        type: array
        items:
          $ref: '#/definitions/Overdraft_OverdraftFeesCharges_1'
  Overdraft:
    description: Borrowing details
    required:
      - OverdraftTierBandSet
    properties:
      Notes:
        title: Notes
        description: Associated Notes about the overdraft rates
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OverdraftTierBandSet:
        title: OverdraftTierBandSet
        description: Tier band set details
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/Overdraft_OverdraftTierBandSet'
  OtherTariffType:
    description: Other tariff type which is not in the standard list.
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  OBBCAData1_FeeChargeCap:
    description: >-
      Details about any caps (maximum charges) that apply to a particular or
      group of fee/charge
    required:
      - FeeType
      - MinMaxType
    properties:
      FeeType:
        title: FeeType
        description: Fee/charge type which is being capped
        minItems: 1
        type: array
        items:
          description: Fee/charge type which is being capped
          enum:
            - Other
            - ServiceCAccountFee
            - ServiceCAccountFeeMonthly
            - ServiceCAccountFeeQuarterly
            - ServiceCFixedTariff
            - ServiceCBusiDepAccBreakage
            - ServiceCMinimumMonthlyFee
            - ServiceCOther
          type: string
      MinMaxType:
        title: MinMaxType
        description: Min Max type
        enum:
          - Minimum
          - Maximum
        type: string
      FeeCapOccurrence:
        format: float
        title: FeeCapOccurrence
        description: >-
          fee/charges are captured dependent on the number of occurrences rather
          than capped at a particular amount
        type: number
      FeeCapAmount:
        title: FeeCapAmount
        description: >-
          Cap amount charged for a fee/charge (where it is charged in terms of
          an amount rather than a rate)
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      CappingPeriod:
        title: CappingPeriod
        description: 'Period e.g. day, week, month etc. for which the fee/charge is capped'
        enum:
          - Day
          - Half Year
          - Month
          - Quarter
          - Week
          - Year
        type: string
      Notes:
        title: Notes
        description: Free text for adding  extra details for fee charge cap
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OtherFeeType:
        title: OtherFeeType
        description: Other fee type code which is not available in the standard code set
        type: array
        items:
          $ref: '#/definitions/Overdraft_OtherFeeType'
  OtherFeeCategoryType:
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  OtherFeeType_1:
    description: Other Fee/charge type which is not available in the standard code set
    required:
      - Description
      - FeeCategory
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      FeeCategory:
        title: FeeCategory
        description: Categorisation of fees and charges into standard categories.
        enum:
          - Other
          - Servicing
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  OtherFeeRateType_1:
    description: Other fee rate type which is not available in the standard code set
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  OtherApplicationFrequency_1:
    description: Other application frequencies not covered in the standard code list
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  OtherCalculationFrequency_1:
    description: Other calculation frequency which is not available in standard code set.
    required:
      - Description
      - Name
    properties:
      Code:
        title: Code
        description: The four letter Mnemonic used within an XML file to identify a code
        maxLength: 4
        minLength: 0
        pattern: '^\w{0,4}$'
        type: string
      Name:
        title: Name
        description: Long name associated with the code
        maxLength: 70
        minLength: 1
        type: string
      Description:
        title: Description
        description: Description to describe the purpose of the code
        maxLength: 350
        minLength: 1
        type: string
  FeeApplicableRange:
    description: Range or amounts or rates for which the fee/charge applies
    properties:
      MinimumAmount:
        title: MinimumAmount
        description: >-
          Minimum Amount on which fee/charge is applicable (where it is
          expressed as an amount)
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      MaximumAmount:
        title: MaximumAmount
        description: >-
          Maximum Amount on which fee is applicable (where it is expressed as an
          amount)
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      MinimumRate:
        title: MinimumRate
        description: >-
          Minimum rate on which fee/charge is applicable(where it is expressed
          as an rate)
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      MaximumRate:
        title: MaximumRate
        description: >-
          Maximum rate on which fee/charge is applicable(where it is expressed
          as an rate)
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
  OBBCAData1_FeeChargeDetail:
    description: Other fees/charges details
    required:
      - ApplicationFrequency
      - FeeCategory
      - FeeType
    properties:
      FeeCategory:
        title: FeeCategory
        description: Categorisation of fees and charges into standard categories.
        enum:
          - Other
          - Servicing
        type: string
      FeeType:
        title: FeeType
        description: Fee/Charge Type
        enum:
          - Other
          - ServiceCAccountFee
          - ServiceCAccountFeeMonthly
          - ServiceCAccountFeeQuarterly
          - ServiceCFixedTariff
          - ServiceCBusiDepAccBreakage
          - ServiceCMinimumMonthlyFee
          - ServiceCOther
        type: string
      NegotiableIndicator:
        title: NegotiableIndicator
        description: Fee/charge which is usually negotiable rather than a fixed amount
        type: boolean
      FeeAmount:
        title: FeeAmount
        description: >-
          Fee Amount charged for a fee/charge (where it is charged in terms of
          an amount rather than a rate)
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeRate:
        title: FeeRate
        description: >-
          Rate charged for Fee/Charge (where it is charged in terms of a rate
          rather than an amount)
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeRateType:
        title: FeeRateType
        description: >-
          Rate type for Fee/Charge (where it is charged in terms of a rate
          rather than an amount)
        enum:
          - Gross
          - Other
        type: string
      ApplicationFrequency:
        title: ApplicationFrequency
        description: How frequently the fee/charge is applied to the account
        enum:
          - OnClosing
          - OnOpening
          - ChargingPeriod
          - Daily
          - PerItem
          - Monthly
          - OnAnniversary
          - Other
          - PerHundredPounds
          - PerHour
          - PerOccurrence
          - PerSheet
          - PerTransaction
          - PerTransactionAmount
          - PerTransactionPercentage
          - Quarterly
          - SixMonthly
          - StatementMonthly
          - Weekly
          - Yearly
        type: string
      CalculationFrequency:
        title: CalculationFrequency
        description: How frequently the fee/charge is calculated
        enum:
          - OnClosing
          - OnOpening
          - ChargingPeriod
          - Daily
          - PerItem
          - Monthly
          - OnAnniversary
          - Other
          - PerHundredPounds
          - PerHour
          - PerOccurrence
          - PerSheet
          - PerTransaction
          - PerTransactionAmount
          - PerTransactionPercentage
          - Quarterly
          - SixMonthly
          - StatementMonthly
          - Weekly
          - Yearly
        type: string
      Notes:
        title: Notes
        description: Optional additional notes to supplement the fee/charge details.
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      FeeChargeCap:
        title: FeeChargeCap
        description: >-
          Details about any caps (maximum charges) that apply to a particular or
          group of fee/charge
        type: array
        items:
          $ref: '#/definitions/OBBCAData1_FeeChargeCap'
      OtherFeeCategoryType:
        $ref: '#/definitions/OtherFeeCategoryType'
      OtherFeeType:
        $ref: '#/definitions/OtherFeeType_1'
      OtherFeeRateType:
        $ref: '#/definitions/OtherFeeRateType_1'
      OtherApplicationFrequency:
        $ref: '#/definitions/OtherApplicationFrequency_1'
      OtherCalculationFrequency:
        $ref: '#/definitions/OtherCalculationFrequency_1'
      FeeApplicableRange:
        $ref: '#/definitions/FeeApplicableRange'
  OBBCAData1_OtherFeesCharges:
    description: >-
      Contains details of fees and charges which are not associated with either
      Overdraft or features/benefits
    required:
      - FeeChargeDetail
    properties:
      TariffType:
        title: TariffType
        description: TariffType which defines the fee and charges.
        enum:
          - Electronic
          - Mixed
          - Other
        type: string
      TariffName:
        title: TariffName
        description: Name of the tariff
        maxLength: 350
        minLength: 1
        type: string
      OtherTariffType:
        $ref: '#/definitions/OtherTariffType'
      FeeChargeDetail:
        title: FeeChargeDetail
        description: Other fees/charges details
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/OBBCAData1_FeeChargeDetail'
      FeeChargeCap:
        title: FeeChargeCap
        description: >-
          Details about any caps (maximum charges) that apply to a particular or
          group of fee/charge
        type: array
        items:
          $ref: '#/definitions/OBBCAData1_FeeChargeCap'
  ProductDetails_1:
    properties:
      Segment:
        title: Segment
        description: >-
          Market segmentation is a marketing term referring to the aggregating
          of prospective buyers into groups, or segments, that have common needs
          and respond similarly to a marketing action. Market segmentation
          enables companies to target different categories of consumers who
          perceive the full value of certain products and services differently
          from one another.


          Read more: Market Segmentation
          http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 

          With respect to PCA products, they are segmented in relation to
          different markets that they wish to focus on. 
        type: array
        items:
          description: >-
            Market segmentation is a marketing term referring to the aggregating
            of prospective buyers into groups, or segments, that have common
            needs and respond similarly to a marketing action. Market
            segmentation enables companies to target different categories of
            consumers who perceive the full value of certain products and
            services differently from one another.


            Read more: Market Segmentation
            http://www.investopedia.com/terms/m/marketsegmentation.asp#ixzz4gfEEalTd 

            With respect to PCA products, they are segmented in relation to
            different markets that they wish to focus on. 
          enum:
            - Basic
            - BenefitAndReward
            - CreditInterest
            - Cashback
            - General
            - Graduate
            - Other
            - Overdraft
            - Packaged
            - Premium
            - Reward
            - Student
            - YoungAdult
            - Youth
          type: string
      MonthlyMaximumCharge:
        title: MonthlyMaximumCharge
        description: >-
          The maximum relevant charges that could accrue as defined fully in
          Part 7 of the CMA order
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      Notes:
        title: Notes
        description: Optional additional notes to supplement the Core product details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
  CreditInterest_1_TierBand:
    description: Tier Band Details
    required:
      - AER
      - ApplicationFrequency
      - FixedVariableInterestRateType
      - TierValueMinimum
    properties:
      Identification:
        title: Identification
        description: Unique and unambiguous identification of a  Tier Band for a PCA.
        maxLength: 35
        minLength: 1
        type: string
      TierValueMinimum:
        title: TierValueMinimum
        description: Minimum deposit value for which the credit interest tier applies.
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      TierValueMaximum:
        title: TierValueMaximum
        description: Maximum deposit value for which the credit interest tier applies.
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      CalculationFrequency:
        title: CalculationFrequency
        description: How often is credit interest calculated for the account.
        enum:
          - PerAcademicTerm
          - Daily
          - HalfYearly
          - Monthly
          - Other
          - Quarterly
          - PerStatementDate
          - Weekly
          - Yearly
        type: string
      ApplicationFrequency:
        title: ApplicationFrequency
        description: >-
          How often is interest applied to the PCA for this tier/band i.e. how
          often the financial institution pays accumulated interest to the
          customer's PCA.
        enum:
          - PerAcademicTerm
          - Daily
          - HalfYearly
          - Monthly
          - Other
          - Quarterly
          - PerStatementDate
          - Weekly
          - Yearly
        type: string
      DepositInterestAppliedCoverage:
        title: DepositInterestAppliedCoverage
        description: Amount on which Interest applied.
        enum:
          - Tiered
          - Whole
        type: string
      FixedVariableInterestRateType:
        title: FixedVariableInterestRateType
        description: 'Type of interest rate, Fixed or Variable'
        enum:
          - Fixed
          - Variable
        type: string
      AER:
        title: AER
        description: >-
          The annual equivalent rate (AER) is interest that is calculated under
          the assumption that any interest paid is combined with the original
          balance and the next interest payment will be based on the slightly
          higher account balance. Overall, this means that interest can be
          compounded several times in a year depending on the number of times
          that interest payments are made. 


          Read more: Annual Equivalent Rate (AER)
          http://www.investopedia.com/terms/a/aer.asp#ixzz4gfR7IO1A
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      BankInterestRateType:
        title: BankInterestRateType
        description: >-
          Interest rate types, other than AER, which financial institutions may
          use to describe the annual interest rate payable to the PCA.
        enum:
          - LinkedBaseRate
          - Gross
          - Net
          - Other
        type: string
      BankInterestRate:
        title: BankInterestRate
        description: Bank Interest for the PCA product
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      Notes:
        title: Notes
        description: Optional additional notes to supplement the Tier Band details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OtherBankInterestType:
        $ref: '#/definitions/OtherBankInterestType'
      OtherApplicationFrequency:
        $ref: '#/definitions/OtherApplicationFrequency'
      OtherCalculationFrequency:
        $ref: '#/definitions/OtherCalculationFrequency'
  CreditInterest_1_TierBandSet:
    description: The group of tiers or bands for which credit interest can be applied.
    required:
      - TierBand
      - TierBandMethod
    properties:
      TierBandMethod:
        title: TierBandMethod
        description: >-
          The methodology of how credit interest is charged. It can be:-


          1. Banded

          Interest rates are banded. i.e. Increasing rate on whole balance as
          balance increases.


          2. Tiered

          Interest rates are tiered. i.e. increasing rate for each tier as
          balance increases, but interest paid on tier fixed for that tier and
          not on whole balance.


          3. Whole

          The same interest rate is applied irrespective of the PCA balance
        enum:
          - Tiered
          - Whole
        type: string
      CalculationMethod:
        title: CalculationMethod
        description: Methods of calculating interest
        enum:
          - Compound
          - SimpleInterest
        type: string
      Destination:
        title: Destination
        description: >-
          Describes whether accrued interest is payable only to the PCA or to
          another bank account
        enum:
          - PayAway
          - SelfCredit
        type: string
      Notes:
        title: Notes
        description: Optional additional notes to supplement the Tier Band Set details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      TierBand:
        title: TierBand
        description: Tier Band Details
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/CreditInterest_1_TierBand'
  CreditInterest_1:
    description: Details about the interest that may be payable to the PCA account holders
    required:
      - TierBandSet
    properties:
      TierBandSet:
        title: TierBandSet
        description: The group of tiers or bands for which credit interest can be applied.
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/CreditInterest_1_TierBandSet'
  Overdraft_1_OverdraftFeeChargeCap:
    description: >-
      Details about any caps (maximum charges) that apply to a particular
      fee/charge
    required:
      - FeeType
      - MinMaxType
    properties:
      FeeType:
        title: FeeType
        description: Fee/charge type which is being capped
        minItems: 1
        type: array
        items:
          description: Overdraft fee type
          enum:
            - ArrangedOverdraft
            - EmergencyBorrowing
            - BorrowingItem
            - OverdraftRenewal
            - AnnualReview
            - OverdraftSetup
            - Surcharge
            - TempOverdraft
            - UnauthorisedBorrowing
            - UnauthorisedPaidTrans
            - Other
            - UnauthorisedUnpaidTrans
          type: string
      OverdraftControlIndicator:
        title: OverdraftControlIndicator
        description: Specifies for the overdraft control feature/benefit
        type: boolean
      MinMaxType:
        title: MinMaxType
        description: >-
          Indicates that this is the minimum/ maximum fee/charge that can be
          applied by the financial institution
        enum:
          - Minimum
          - Maximum
        type: string
      FeeCapOccurrence:
        format: float
        title: FeeCapOccurrence
        description: >-
          fee/charges are captured dependent on the number of occurrences rather
          than capped at a particular amount
        type: number
      FeeCapAmount:
        title: FeeCapAmount
        description: Cap amount charged for a fee/charge
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      CappingPeriod:
        title: CappingPeriod
        description: 'Period e.g. day, week, month etc. for which the fee/charge is capped'
        enum:
          - AcademicTerm
          - Day
          - Half Year
          - Month
          - Quarter
          - Week
          - Year
        type: string
      Notes:
        title: Notes
        description: Notes related to Overdraft fee charge cap
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OtherFeeType:
        title: OtherFeeType
        description: Other fee type code which is not available in the standard code set
        type: array
        items:
          $ref: '#/definitions/Overdraft_OtherFeeType'
  Overdraft_1_OverdraftFeeChargeDetail:
    description: Details about the fees/charges
    required:
      - ApplicationFrequency
      - FeeType
    properties:
      FeeType:
        title: FeeType
        description: Overdraft fee type
        enum:
          - ArrangedOverdraft
          - EmergencyBorrowing
          - BorrowingItem
          - OverdraftRenewal
          - AnnualReview
          - OverdraftSetup
          - Surcharge
          - TempOverdraft
          - UnauthorisedBorrowing
          - UnauthorisedPaidTrans
          - Other
          - UnauthorisedUnpaidTrans
        type: string
      OverdraftControlIndicator:
        title: OverdraftControlIndicator
        description: Specifies for the overdraft control feature/benefit
        type: boolean
      IncrementalBorrowingAmount:
        title: IncrementalBorrowingAmount
        description: >-
          Every additional tranche of an overdraft balance to which an overdraft
          fee is applied
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeAmount:
        title: FeeAmount
        description: >-
          Amount charged for an overdraft fee/charge (where it is charged in
          terms of an amount rather than a rate)
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeRate:
        title: FeeRate
        description: >-
          Rate charged for overdraft fee/charge (where it is charged in terms of
          a rate rather than an amount)
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeRateType:
        title: FeeRateType
        description: >-
          Rate type for overdraft fee/charge (where it is charged in terms of a
          rate rather than an amount)
        enum:
          - LinkedBaseRate
          - Gross
          - Net
          - Other
        type: string
      ApplicationFrequency:
        title: ApplicationFrequency
        description: Frequency at which the overdraft charge is applied to the account
        enum:
          - AccountClosing
          - AccountOpening
          - AcademicTerm
          - ChargingPeriod
          - Daily
          - PerItem
          - Monthly
          - OnAccountAnniversary
          - Other
          - PerHour
          - PerOccurrence
          - PerSheet
          - PerTransaction
          - PerTransactionAmount
          - PerTransactionPercentage
          - Quarterly
          - SixMonthly
          - StatementMonthly
          - Weekly
          - Yearly
        type: string
      CalculationFrequency:
        title: CalculationFrequency
        description: How often is the overdraft fee/charge calculated for the account.
        enum:
          - AccountClosing
          - AccountOpening
          - AcademicTerm
          - ChargingPeriod
          - Daily
          - PerItem
          - Monthly
          - OnAccountAnniversary
          - Other
          - PerHour
          - PerOccurrence
          - PerSheet
          - PerTransaction
          - PerTransactionAmount
          - PerTransactionPercentage
          - Quarterly
          - SixMonthly
          - StatementMonthly
          - Weekly
          - Yearly
        type: string
      Notes:
        title: Notes
        description: >-
          Free text for capturing any other info related to Overdraft Fees
          Charge Details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OtherFeeType:
        $ref: '#/definitions/OtherFeeType'
      OtherFeeRateType:
        $ref: '#/definitions/OtherFeeRateType'
      OtherApplicationFrequency:
        $ref: '#/definitions/OtherApplicationFrequency'
      OtherCalculationFrequency:
        $ref: '#/definitions/OtherCalculationFrequency'
      OverdraftFeeChargeCap:
        $ref: '#/definitions/Overdraft_1_OverdraftFeeChargeCap'
  Overdraft_1_OverdraftFeesCharges:
    description: Overdraft fees and charges
    required:
      - OverdraftFeeChargeDetail
    properties:
      OverdraftFeeChargeCap:
        title: OverdraftFeeChargeCap
        description: >-
          Details about any caps (maximum charges) that apply to a particular
          fee/charge
        type: array
        items:
          $ref: '#/definitions/Overdraft_1_OverdraftFeeChargeCap'
      OverdraftFeeChargeDetail:
        title: OverdraftFeeChargeDetail
        description: Details about the fees/charges
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/Overdraft_1_OverdraftFeeChargeDetail'
  Overdraft_1_OverdraftTierBand:
    description: Provides overdraft details for a specific tier or band
    required:
      - TierValueMin
    properties:
      Identification:
        title: Identification
        description: Unique and unambiguous identification of a  Tier Band for a overdraft.
        maxLength: 35
        minLength: 1
        type: string
      TierValueMin:
        title: TierValueMin
        description: Minimum value of Overdraft Tier/Band
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      TierValueMax:
        title: TierValueMax
        description: Maximum value of Overdraft Tier/Band
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      OverdraftInterestChargingCoverage:
        title: OverdraftInterestChargingCoverage
        description: Interest charged on whole amount or tiered/banded
        enum:
          - Tiered
          - Whole
        type: string
      BankGuaranteedIndicator:
        title: BankGuaranteedIndicator
        description: >-
          Indicates that a bank provides the overdraft limit up to TierValueMIn
          to all customers automatically
        type: boolean
      EAR:
        title: EAR
        description: >-
          EAR means Effective Annual Rate and/or Equivalent Annual Rate
          (frequently

          used interchangeably), being the actual annual interest rate of an
          Overdraft.
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      Notes:
        title: Notes
        description: Optional additional notes to supplement the Tier/band details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OverdraftFeesCharges:
        title: OverdraftFeesCharges
        description: Overdraft fees and charges
        type: array
        items:
          $ref: '#/definitions/Overdraft_1_OverdraftFeesCharges'
  Overdraft_1_OverdraftFeesCharges_1:
    description: Overdraft fees and charges details
    required:
      - OverdraftFeeChargeDetail
    properties:
      OverdraftFeeChargeCap:
        title: OverdraftFeeChargeCap
        description: >-
          Details about any caps (maximum charges) that apply to a particular
          fee/charge
        type: array
        items:
          $ref: '#/definitions/Overdraft_1_OverdraftFeeChargeCap'
      OverdraftFeeChargeDetail:
        title: OverdraftFeeChargeDetail
        description: Details about the fees/charges
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/Overdraft_1_OverdraftFeeChargeDetail'
  Overdraft_1_OverdraftTierBandSet:
    description: Tier band set details
    required:
      - OverdraftTierBand
      - TierBandMethod
    properties:
      TierBandMethod:
        title: TierBandMethod
        description: >-
          The methodology of how overdraft is charged. It can be:

          'Whole'  Where the same charge/rate is applied to the entirety of the
          overdraft balance (where charges are applicable). 

          'Tiered' Where different charges/rates are applied dependent on
          overdraft maximum and minimum balance amount tiers defined by the
          lending financial organisation

          'Banded' Where different charges/rates are applied dependent on
          overdraft maximum and minimum balance amount bands defined by a
          government organisation.
        enum:
          - Tiered
          - Whole
          - Banded
        type: string
      OverdraftType:
        title: OverdraftType
        description: >-
          An overdraft can either be 'committed' which means that the facility
          cannot be withdrawn without reasonable notification before it's agreed
          end date, or 'on demand' which means that the financial institution
          can demand repayment at any point in time.
        enum:
          - Committed
          - OnDemand
          - Other
        type: string
      Identification:
        title: Identification
        description: >-
          Unique and unambiguous identification of a  Tier Band for a overdraft
          product.
        maxLength: 35
        minLength: 1
        type: string
      AuthorisedIndicator:
        title: AuthorisedIndicator
        description: Indicates if the Overdraft is authorised (Y) or unauthorised (N)
        type: boolean
      BufferAmount:
        title: BufferAmount
        description: >-
          When a customer exceeds their credit limit, a financial institution
          will not charge the customer unauthorised overdraft charges if they do
          not exceed by more than the buffer amount. Note: Authorised overdraft
          charges may still apply.
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      Notes:
        title: Notes
        description: >-
          Optional additional notes to supplement the overdraft Tier Band Set
          details
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OverdraftTierBand:
        title: OverdraftTierBand
        description: Provides overdraft details for a specific tier or band
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/Overdraft_1_OverdraftTierBand'
      OverdraftFeesCharges:
        title: OverdraftFeesCharges
        description: Overdraft fees and charges details
        type: array
        items:
          $ref: '#/definitions/Overdraft_1_OverdraftFeesCharges_1'
  Overdraft_1:
    description: 'Details about Overdraft rates, fees & charges'
    required:
      - OverdraftTierBandSet
    properties:
      Notes:
        title: Notes
        description: Associated Notes about the overdraft rates
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OverdraftTierBandSet:
        title: OverdraftTierBandSet
        description: Tier band set details
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/Overdraft_1_OverdraftTierBandSet'
  OtherFeesCharges_FeeChargeCap:
    description: >-
      Details about any caps (maximum charges) that apply to a particular
      fee/charge
    required:
      - FeeType
      - MinMaxType
    properties:
      FeeType:
        title: FeeType
        description: Fee/charge type which is being capped
        minItems: 1
        type: array
        items:
          description: Fee/charge type which is being capped
          enum:
            - ServiceCAccountFee
            - ServiceCAccountFeeMonthly
            - ServiceCOther
            - Other
          type: string
      MinMaxType:
        title: MinMaxType
        description: >-
          Indicates that this is the minimum/ maximum fee/charge that can be
          applied by the financial institution
        enum:
          - Minimum
          - Maximum
        type: string
      FeeCapOccurrence:
        format: float
        title: FeeCapOccurrence
        description: >-
          fee/charges are captured dependent on the number of occurrences rather
          than capped at a particular amount
        type: number
      FeeCapAmount:
        title: FeeCapAmount
        description: >-
          Cap amount charged for a fee/charge (where it is charged in terms of
          an amount rather than a rate)
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      CappingPeriod:
        title: CappingPeriod
        description: 'Period e.g. day, week, month etc. for which the fee/charge is capped'
        enum:
          - AcademicTerm
          - Day
          - Half Year
          - Month
          - Quarter
          - Week
          - Year
        type: string
      Notes:
        title: Notes
        description: Free text for adding  extra details for fee charge cap
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OtherFeeType:
        title: OtherFeeType
        description: Other fee type code which is not available in the standard code set
        type: array
        items:
          $ref: '#/definitions/Overdraft_OtherFeeType'
  OtherFeesCharges_FeeChargeDetail:
    description: Other fees/charges details
    required:
      - ApplicationFrequency
      - FeeCategory
      - FeeType
    properties:
      FeeCategory:
        title: FeeCategory
        description: Categorisation of fees and charges into standard categories.
        enum:
          - Other
          - Servicing
        type: string
      FeeType:
        title: FeeType
        description: Fee/Charge Type
        enum:
          - ServiceCAccountFee
          - ServiceCAccountFeeMonthly
          - ServiceCOther
          - Other
        type: string
      FeeAmount:
        title: FeeAmount
        description: >-
          Fee Amount charged for a fee/charge (where it is charged in terms of
          an amount rather than a rate)
        pattern: '^(-?\d{1,14}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeRate:
        title: FeeRate
        description: >-
          Rate charged for Fee/Charge (where it is charged in terms of a rate
          rather than an amount)
        pattern: '^(-?\d{1,3}){1}(\.\d{1,4}){0,1}$'
        type: string
      FeeRateType:
        title: FeeRateType
        description: >-
          Rate type for Fee/Charge (where it is charged in terms of a rate
          rather than an amount)
        enum:
          - LinkedBaseRate
          - Gross
          - Net
          - Other
        type: string
      ApplicationFrequency:
        title: ApplicationFrequency
        description: How frequently the fee/charge is applied to the account
        enum:
          - AccountClosing
          - AccountOpening
          - AcademicTerm
          - ChargingPeriod
          - Daily
          - PerItem
          - Monthly
          - OnAccountAnniversary
          - Other
          - PerHour
          - PerOccurrence
          - PerSheet
          - PerTransaction
          - PerTransactionAmount
          - PerTransactionPercentage
          - Quarterly
          - SixMonthly
          - StatementMonthly
          - Weekly
          - Yearly
        type: string
      CalculationFrequency:
        title: CalculationFrequency
        description: How frequently the fee/charge is calculated
        enum:
          - AccountClosing
          - AccountOpening
          - AcademicTerm
          - ChargingPeriod
          - Daily
          - PerItem
          - Monthly
          - OnAccountAnniversary
          - Other
          - PerHour
          - PerOccurrence
          - PerSheet
          - PerTransaction
          - PerTransactionAmount
          - PerTransactionPercentage
          - Quarterly
          - SixMonthly
          - StatementMonthly
          - Weekly
          - Yearly
        type: string
      Notes:
        title: Notes
        description: Optional additional notes to supplement the fee/charge details.
        type: array
        items:
          description: maxLength 2000 text
          maxLength: 2000
          minLength: 1
          type: string
      OtherFeeCategoryType:
        $ref: '#/definitions/OtherFeeCategoryType'
      OtherFeeType:
        $ref: '#/definitions/OtherFeeType_1'
      OtherFeeRateType:
        $ref: '#/definitions/OtherFeeRateType_1'
      OtherApplicationFrequency:
        $ref: '#/definitions/OtherApplicationFrequency_1'
      OtherCalculationFrequency:
        $ref: '#/definitions/OtherCalculationFrequency_1'
      FeeChargeCap:
        title: FeeChargeCap
        description: >-
          Details about any caps (maximum charges) that apply to a particular
          fee/charge
        type: array
        items:
          $ref: '#/definitions/OtherFeesCharges_FeeChargeCap'
      FeeApplicableRange:
        $ref: '#/definitions/FeeApplicableRange'
  OtherFeesCharges:
    description: >-
      Contains details of fees and charges which are not associated with either
      borrowing or features/benefits
    required:
      - FeeChargeDetail
    properties:
      FeeChargeDetail:
        title: FeeChargeDetail
        description: Other fees/charges details
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/OtherFeesCharges_FeeChargeDetail'
      FeeChargeCap:
        title: FeeChargeCap
        description: >-
          Details about any caps (maximum charges) that apply to a particular
          fee/charge
        type: array
        items:
          $ref: '#/definitions/OtherFeesCharges_FeeChargeCap'
  OBReadAccount3_Data:
    properties:
      Account:
        description: >-
          Unambiguous identification of the account to which credit and debit
          entries are made.
        type: array
        items:
          $ref: '#/definitions/OBAccount3'
  OBReadBalance1_Data:
    required:
      - Balance
    properties:
      Balance:
        description: Set of elements used to define the balance details.
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/OBCashBalance1'
  OBReadBeneficiary3_Data:
    properties:
      Beneficiary:
        type: array
        items:
          $ref: '#/definitions/OBBeneficiary3'
  OBReadConsentResponse1_Data:
    required:
      - ConsentId
      - CreationDateTime
      - Permissions
      - Status
      - StatusUpdateDateTime
    properties:
      ConsentId:
        description: >-
          Unique identification as assigned to identify the account access
          consent resource.
        maxLength: 128
        minLength: 1
        type: string
      CreationDateTime:
        format: date-time
        description: >-
          Date and time at which the resource was created.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      Status:
        $ref: '#/definitions/OBExternalRequestStatus1Code'
      StatusUpdateDateTime:
        format: date-time
        description: >-
          Date and time at which the resource status was updated.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      Permissions:
        description: >-
          Specifies the Open Banking account access data types. This is a list
          of the data clusters being consented by the PSU, and requested for
          authorisation with the ASPSP.
        minItems: 1
        type: array
        items:
          $ref: '#/definitions/OBExternalPermissions1Code'
      ExpirationDateTime:
        format: date-time
        description: >-
          Specified date and time the permissions will expire.

          If this is not populated, the permissions will be open ended.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      TransactionFromDateTime:
        format: date-time
        description: >-
          Specified start date and time for the transaction query period.

          If this is not populated, the start date will be open ended, and data
          will be returned from the earliest available transaction.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
      TransactionToDateTime:
        format: date-time
        description: >-
          Specified end date and time for the transaction query period.

          If this is not populated, the end date will be open ended, and data
          will be returned to the latest available transaction.

          All dates in the JSON payloads are represented in ISO 8601 date-time
          format. 

          All date-time fields in responses must include the timezone. An
          example is below:

          2017-04-05T10:43:07+00:00
        type: string
  OBReadDirectDebit1_Data:
    properties:
      DirectDebit:
        description: Account to or from which a cash entry is made.
        type: array
        items:
          $ref: '#/definitions/OBDirectDebit1'
  OBReadOffer1_Data:
    properties:
      Offer:
        type: array
        items:
          $ref: '#/definitions/OBOffer1'
  OBReadParty1_Data:
    properties:
      Party:
        $ref: '#/definitions/OBParty1'
  OBReadProduct2_Data:
    properties:
      Product:
        type: array
        items:
          $ref: '#/definitions/OBProduct2'
  OBReadScheduledPayment2_Data:
    properties:
      ScheduledPayment:
        type: array
        items:
          $ref: '#/definitions/OBScheduledPayment2'
  OBReadStandingOrder4_Data:
    properties:
      StandingOrder:
        type: array
        items:
          $ref: '#/definitions/OBStandingOrder4'
  OBReadStatement1_Data:
    properties:
      Statement:
        description: Provides further details on a statement resource.
        type: array
        items:
          $ref: '#/definitions/OBStatement1'
  OBReadTransaction4_Data:
    properties:
      Transaction:
        description: Provides further details on an entry in the report.
        type: array
        items:
          $ref: '#/definitions/OBTransaction4'
  OBTransaction4_ProprietaryBankTransactionCode:
    description: Set of elements to fully identify a proprietary bank transaction code.
    required:
      - Code
    properties:
      Code:
        description: >-
          Proprietary bank transaction code to identify the underlying
          transaction.
        maxLength: 35
        minLength: 1
        type: string
      Issuer:
        description: Identification of the issuer of the proprietary bank transaction code.
        maxLength: 35
        minLength: 1
        type: string
  SandboxDataModel_consents:
    properties:
      ID:
        type: string
        example: CONSENT_ID
      creationDateTime:
        format: date-time
        type: string
        example: '2019-03-05T13:52:32.778Z'
      status:
        type: string
        example: Authorised
      permissions:
        type: array
        items:
          $ref: '#/definitions/OBExternalPermissions1Code'
      expirationDateTime:
        format: date-time
        type: string
        example: '9999-12-31T23:59:59.999Z'
      statusUpdateDateTime:
        format: date-time
        type: string
        example: '2019-03-05T13:52:32.778Z'
      transactionFromDateTime:
        format: date-time
        type: string
        example: '2019-01-05T13:52:32.778Z'
      transactionToDateTime:
        format: date-time
        type: string
        example: '2019-06-05T13:52:32.778Z'
  SandboxDataModel_accounts_info:
    properties:
      accountId:
        type: string
        example: ACCOUNT_ID
      currency:
        type: string
        example: EUR
      iban:
        type: string
        example: GR32011XXXXXXXXXXXXXXXXXXXX
      accountType:
        type: string
        example: Personal
      accountSubType:
        type: string
        example: Savings
      description:
        type: string
        example: This is a personal savings account
      nickName:
        type: string
        example: A Savings Account
  SandboxDataModel_accounts_party_address:
    properties:
      type:
        type: string
        example: Business
      streetName:
        type: string
        example: A Street
      buildingNumber:
        type: string
        example: '62'
      postCode:
        type: string
        example: '12345'
      townName:
        type: string
        example: Athens
      country:
        type: string
        example: Greece
  SandboxDataModel_accounts_party:
    properties:
      id:
        type: string
        example: testuser
      number:
        type: string
        example: '123456'
      name:
        type: string
        example: A delegate party
      email:
        type: string
        example: someone@test.com
      phone:
        type: string
        example: 555-XXXXX
      mobile:
        type: string
        example: 697-XXXXXXX
      address:
        $ref: '#/definitions/SandboxDataModel_accounts_party_address'
  SandboxDataModel_accounts_beneficiaries:
    properties:
      name:
        type: string
    example: '[{"name":"Harrison Abigail"},{"name":"Schuster Thomas"}]'
  SandboxDataModel_accounts_balances:
    properties:
      type:
        type: string
      amount:
        type: number
    example: >-
      [{"type":"ClosingBooked","amount":13500},{"type":"ClosingAvailable","amount":13200}]
  SandboxDataModel_accounts_standingOrders:
    properties:
      id:
        type: string
      frequency:
        type: string
      firstCollectionDate:
        format: date-time
        type: string
      finalCollectionDate:
        format: date-time
        type: string
      status:
        type: string
    example: >-
      [{"id":"STANDING_ORDER_ID_2","frequency":"IntrvlMnthDay:1:-1","firstCollectionDate":"2019-01-01T00:00:00.000Z","finalCollectionDate":"2019-12-31T00:00:00.000Z","status":"Active"},{"id":"STANDING_ORDER_ID_1","frequency":"IntrvlMnthDay:1:-1","firstCollectionDate":"2018-01-01T00:00:00.000Z","finalCollectionDate":"2018-12-31T00:00:00.000Z","status":"Inactive"}]
  SandboxDataModel_accounts_scheduledPayments:
    properties:
      executionDate:
        format: date-time
        type: string
      type:
        type: string
      amount:
        type: number
    example: >-
      [{"executionDate":"2019-04-05T12:52:32.778Z","type":"Execution","amount":100},{"executionDate":"2019-05-05T12:52:32.778Z","type":"Execution","amount":70}]
  SandboxDataModel_accounts_statements:
    properties:
      id:
        type: string
      type:
        type: string
      startDateTime:
        format: date-time
        type: string
      endDateTime:
        format: date-time
        type: string
      title:
        type: string
    example: >-
      [{"id":"STATEMENT_ID_2","type":"RegularPeriodic","startDateTime":"2019-02-01T00:00:00.000Z","endDateTime":"2019-02-28T00:00:00.000Z","title":"2019
      February
      Statement"},{"id":"STATEMENT_ID_1","type":"RegularPeriodic","startDateTime":"2019-01-01T00:00:00.000Z","endDateTime":"2019-01-31T00:00:00.000Z","title":"2019
      January Statement"}]
  SandboxDataModel_accounts_transactions:
    properties:
      id:
        type: string
      amount:
        type: number
      currency:
        type: string
      creditDebit:
        type: string
      status:
        type: string
      valeur:
        format: date-time
        type: string
      bookingDateTime:
        format: date-time
        type: string
      description:
        type: string
      accountingBalance:
        type: number
      balanceType:
        type: string
    example: >-
      [{"id":"TRANSACTION_ID_3","amount":100,"currency":"EUR","creditDebit":"Debit","status":"Booked","valeur":"2019-03-05T13:52:32.778Z","bookingDateTime":"2019-03-05T13:52:32.778Z","description":"Transfer
      to
      account","accountingBalance":4230.65,"balanceType":"InterimAvailable"},{"id":"TRANSACTION_ID_2","amount":50.45,"currency":"EUR","creditDebit":"Debit","status":"Booked","valeur":"2019-03-04T13:52:32.778Z","bookingDateTime":"2019-03-04T13:52:32.778Z","description":"Pay
      mobile
      bill","accountingBalance":4330.65,"balanceType":"InterimAvailable"},{"id":"TRANSACTION_ID_1","amount":1150,"currency":"EUR","creditDebit":"Credit","status":"Booked","valeur":"2019-03-03T13:52:32.778Z","bookingDateTime":"2019-03-03T13:52:32.778Z","description":"Payroll","accountingBalance":4381.1,"balanceType":"InterimAvailable"}]
  SandboxDataModel_accounts:
    properties:
      info:
        $ref: '#/definitions/SandboxDataModel_accounts_info'
      party:
        $ref: '#/definitions/SandboxDataModel_accounts_party'
      beneficiaries:
        type: array
        items:
          $ref: '#/definitions/SandboxDataModel_accounts_beneficiaries'
      balances:
        type: array
        items:
          $ref: '#/definitions/SandboxDataModel_accounts_balances'
      standingOrders:
        type: array
        items:
          $ref: '#/definitions/SandboxDataModel_accounts_standingOrders'
      scheduledPayments:
        type: array
        items:
          $ref: '#/definitions/SandboxDataModel_accounts_scheduledPayments'
      statements:
        type: array
        items:
          $ref: '#/definitions/SandboxDataModel_accounts_statements'
      transactions:
        type: array
        items:
          $ref: '#/definitions/SandboxDataModel_accounts_transactions'
  SandboxDataModel_users:
    properties:
      userid:
        example: testuser
      consents:
        $ref: '#/definitions/SandboxDataModel_consents'
      accounts:
        $ref: '#/definitions/SandboxDataModel_accounts'
parameters:
  FromBookingDateTimeParam:
    name: fromBookingDateTime
    description: >-
      The UTC ISO 8601 Date Time to filter transactions FROM

      NB Time component is optional - set to 00:00:00 for just Date.

      If the Date Time contains a timezone, the ASPSP must ignore the timezone
      component.
    in: query
    required: false
    type: string
    format: date-time
  ToBookingDateTimeParam:
    name: toBookingDateTime
    description: >-
      The UTC ISO 8601 Date Time to filter transactions TO

      NB Time component is optional - set to 00:00:00 for just Date.

      If the Date Time contains a timezone, the ASPSP must ignore the timezone
      component.
    in: query
    required: false
    type: string
    format: date-time
  FromStatementDateTimeParam:
    name: fromStatementDateTime
    description: >-
      The UTC ISO 8601 Date Time to filter statements FROM

      NB Time component is optional - set to 00:00:00 for just Date.

      If the Date Time contains a timezone, the ASPSP must ignore the timezone
      component.
    in: query
    required: false
    type: string
    format: date-time
  ToStatementDateTimeParam:
    name: toStatementDateTime
    description: >-
      The UTC ISO 8601 Date Time to filter statements TO

      NB Time component is optional - set to 00:00:00 for just Date.

      If the Date Time contains a timezone, the ASPSP must ignore the timezone
      component.
    in: query
    required: false
    type: string
    format: date-time
  x-fapi-financial-id-Param:
    name: x-fapi-financial-id
    description: >-
      The unique id of the ASPSP to which the request is issued. The unique id
      will be issued by OB.
    in: header
    required: true
    type: string
    default: NBG
  x-fapi-customer-ip-address-Param:
    name: x-fapi-customer-ip-address
    description: The PSU's IP address if the PSU is currently logged in with the TPP.
    in: header
    required: false
    type: string
  x-fapi-interaction-id-Param:
    name: x-fapi-interaction-id
    description: An RFC4122 UID used as a correlation id.
    in: header
    required: false
    type: string
  x-fapi-customer-last-logged-time-Param:
    name: x-fapi-customer-last-logged-time
    description: >-
      The time when the PSU last logged in with the TPP. 

      All dates in the HTTP headers are represented as RFC 7231 Full Dates. An
      example is below: 

      Sun, 10 Sep 2017 19:43:31 UTC
    in: header
    required: false
    type: string
    pattern: >-
      ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2}
      (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \d{4} \d{2}:\d{2}:\d{2}
      (GMT|UTC)$
  AuthorizationParam:
    name: Authorization
    description: 'An Authorisation Token as per https://tools.ietf.org/html/rfc6750'
    in: header
    required: true
    type: string
  sandbox-id:
    name: sandbox-id
    description: The unique id of the sandbox to be used
    in: header
    required: true
    type: string
  x-subject-bank-id:
    name: x-subject-bank-id
    description: The unique id of the target bank.
    in: header
    required: true
    type: string
    default: GR-NBG
  AccountId:
    name: AccountId
    description: AccountId
    in: path
    required: true
    type: string
  OBReadConsent1Param:
    name: OBReadConsent1Param
    description: Default
    schema:
      $ref: '#/definitions/OBReadConsent1'
    in: body
    required: true
  ConsentId:
    name: ConsentId
    description: ConsentId
    in: path
    required: true
    type: string
  StatementId:
    name: StatementId
    description: StatementId
    in: path
    required: true
    type: string
  x-customer-user-agent-Param:
    name: x-customer-user-agent
    description: Indicates the user-agent that the PSU is using.
    in: header
    required: false
    type: string
responses:
  200AccountsAccountIdProductRead:
    description: Products Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadProduct2'
  200ProductsRead:
    description: Products Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadProduct2'
  200AccountsAccountIdScheduledPaymentsRead:
    description: Scheduled Payments Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadScheduledPayment2'
  200ScheduledPaymentsRead:
    description: Scheduled Payments Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadScheduledPayment2'
  201AccountAccessConsentsCreated:
    description: Account Access Consents Created
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadConsentResponse1'
  200AccountAccessConsentsConsentIdRead:
    description: Account Access Consents Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadConsentResponse1'
  204AccountAccessConsentsConsentIdDeleted:
    description: Account Access Consents Deleted
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
  200AccountsRead:
    description: Accounts Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadAccount3'
  200AccountsAccountIdRead:
    description: Accounts Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadAccount3'
  200AccountsAccountIdTransactionsRead:
    description: Transactions Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadTransaction4'
  200TransactionsRead:
    description: Transactions Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadTransaction4'
  200AccountsAccountIdDirectDebitsRead:
    description: Direct Debits Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadDirectDebit1'
  200DirectDebitsRead:
    description: Direct Debits Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadDirectDebit1'
  200AccountsAccountIdStatementsRead:
    description: Statements Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadStatement1'
  200AccountsAccountIdStatementsStatementIdRead:
    description: Statements Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadStatement1'
  200AccountsAccountIdStatementsStatementIdFileRead:
    description: Statements Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      type: file
  200AccountsAccountIdStatementsStatementIdTransactionsRead:
    description: Transactions Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadTransaction4'
  200StatementsRead:
    description: Statements Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadStatement1'
  200AccountsAccountIdPartyRead:
    description: Party Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadParty1'
  200PartyRead:
    description: Party Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadParty1'
  200AccountsAccountIdStandingOrdersRead:
    description: Standing Orders Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadStandingOrder4'
  200StandingOrdersRead:
    description: Standing Orders Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadStandingOrder4'
  200AccountsAccountIdBalancesRead:
    description: Balances Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadBalance1'
  200BalancesRead:
    description: Balances Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadBalance1'
  200AccountsAccountIdBeneficiariesRead:
    description: Beneficiaries Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadBeneficiary3'
  200BeneficiariesRead:
    description: Beneficiaries Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadBeneficiary3'
  200AccountsAccountIdOffersRead:
    description: Offers Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadOffer1'
  200OffersRead:
    description: Offers Read
    headers:
      x-fapi-interaction-id:
        description: An RFC4122 UID used as a correlation id.
        type: string
    schema:
      $ref: '#/definitions/OBReadOffer1'
  400ErrorResponse:
    description: Bad request
    schema:
      $ref: '#/definitions/OBErrorResponse1'
  401ErrorResponse:
    description: Unauthorized
  403ErrorResponse:
    description: Forbidden
  404ErrorResponse:
    description: Not found
  405ErrorResponse:
    description: Method Not Allowed
  406ErrorResponse:
    description: Not Acceptable
  415ErrorResponse:
    description: Unsupported Media Type
  429ErrorResponse:
    description: Too Many Requests
    headers:
      Retry-After:
        description: Number in seconds to wait
        type: integer
  500ErrorResponse:
    description: Internal Server Error
    schema:
      $ref: '#/definitions/OBErrorResponse1'
securityDefinitions:
  Client Id:
    type: apiKey
    description: Application's Id
    name: Client-Id
    in: header
