openapi: 3.0.0
info:
    title: Accounts Information API OAuth2
    description: |-
      Start integrating your application with our Bank and give your client the options to: 

      1.  View their account list
      2.  View their account details    
      3.  View their account balances
      4.  View their account transactions

      This Sandbox API optionally simulates the user consent flow required for Account Information Services. Please refer to the Quick Getting Started guide below, that provides the necessary steps to start playing with the API.

      ## How To Get Started 


      1. **Login/Register** to the Developers Portal-NBG Technology HUB
      
      2. Go to **"APPS"** menu
      
      3. Choose your Organization and move to step 4. 
      
      In case you don't have, create an Organization by clicking on 
        **\"CREATE AN ORGANIZATION\"** button and follow the steps below :
        
          a. Type the title of your Organization
            
          b. Type a short description of your Organization (optional)
            
          c. Click **"SUBMIT"**
        
        Your organization is now created!
        
        4. Select the Organization of your preference and click on **"ADD AN APPLICATION"** button.
        
            i. Fill in the forms (title and short description)
            
            ii. Check and Store **\"Authorization Code\" and \"Client Credentials\"**
            
            iii. Enter the **OAuth Redirect and Post Logout URIs** (these are the URIs that will redirect the user upon logging in and logging out respectively)
        
            You can use the following  URL to easily test the API through the portal:
              
            *https://developer.nbg.gr/oauth2/redoc-callback*
            
            iv. Click **"SUBMIT"**
                    
            v. Store the APPs **"Client ID"** and **"Client Secret"**
        
        5. Go to **"API PRODUCTS"** and choose  **Account-Information API**
        
        6. Click **\"START USING THIS API\"**, choose your app and click
      
      **"SUBSCRIBE"**
      
      ### Sandbox Flow

      1. Get an **Access Token** using the **Authorization Code Flow** (with the credentials that you used to sign in as a developer) and the **API scopes** provided in the Authentication and Authorization (OAuth2) section below
      2. Create a **Sandbox**.
      3. **Optional** – **Signature validation**
      If you have already obtained an eIDAS certificate (Qualified Certificate for Seals - QSeal) that you would like to use, please set in all HTTP headers the following:
        1. **X-Certificate-Check: true**
        2. **TPP-Signature-Certificate** (X.509 certificate in .pem format)
        3. **Signature** (Detached JWS signature)
        
      For more information check the QSeal Certificates section below.

      4. **Optional** – Get the **customer’s consent**
      If you want to **enable the user consent validation** you must follow the consent flow as described below:
        1. Set the **X-Consent-Check HTTP** header to **true**
        2. Get an **Access Token** using the Client Credentials flow and the API scopes provided in the Authentication and Authorization (OAuth2) section below
        3. Generate a **consent_id** using the **generate consent endpoint** with access token from the previous step. 
    
        **Please note**: In the **/consents/request-access payload** the parameter **application** equals your **client-id** and the parameter **applicationId** equals the **consent application ID**. The **applicationId** can be obtained when **exporting the sandbox** subscribed for this API under the parameter name **consentApplicationIds**
        4. Request a user consent by visiting the Consent UI:
          1. **Replace** the necessary parameters: **consent_id, sandbox_id, redirect_uri** and visit the following URL: https://my.nbg.gr/sandbox.psd2.consent.v2.1/account.info/authorize?consent_id=CONSENT_ID_FROM_STEP_4&sandbox_id=SANDBOX_ID_FROM_STEP_6&redirect_uri=YOUR_HTTPS_REDIRECT_URI
          2. Use the credentials you signed in as a developer to give your consent
      5. Play with the API

      ### Production flow

      1. **Contact us** to provide your **production client keys**.
      2. Get an **Access Token** using the **Client Credentials** flow and the API scopes provided in the Authentication and Authorization (OAuth2) section below.
      3. Generate a **consent_id** using the generate **consent endpoint with access token** from the previous step. 
   
      **Please note**: In the **/consents/request-access payload** the parameter **application** equals your **client-id** and the parameter **applicationId** equals the **consent application ID**.

      4. Get an **Access Token** using the Authorization Code Flow (PSU should login with the NBG i-bank internet banking credentials) and the API scopes provided in the Authentication and Authorization (OAuth2) section below.
        1. You can skip the following step by passing in the authorization endpoint your **consent_id from Step 3** as https://my.nbg.gr/identity/connect/authorize?client_id=YOUR_CLIENT_ID&response_type=code&scope=YOUR_SCOPES&redirect_uri=YOUR_REDIRECT_URI&consent_id=CONSENT_ID_FROM_STEP_3
      5. Redirect the PSU to the following URL - https://my.nbg.gr/psd2.consent.v2.1/account.info/authorize?consent_id=YOUR_CONSENT_ID&redirect_uri=YOUR_HTTPS_REDIRECT_URI 
      6. You are **ready** to use your application in **production** mode!




      ## Authentication and Authorization (OAuth2) 

      This API version uses the OAuth2 protocol for redirection based on **authentication** and **authorization**, which means that a Bearer (access token) should be acquired. 

      An **access token** can be retrieved using the **client_id** and **client_secret** of the APP that you created and subscribed in this API, and your **own credentials** (username, password) that you use to sign in the NBG Technology HUB. 

      The scopes and endpoints are defined below:

      ### *SCOPES*

      For the ***Authorization*** Code:

      **Sandbox Scopes**: 

              openid profile role sandbox-account-info-api-v2-1

      **Production Scopes**: 

              openid profile ibank_profile role account-info-api-v2-1

      For the ***Client Credentials***:

      **Sandbox Scopes**: 

              sandbox-account-info-api-v2-1

      **Production Scopes**: 

              account-info-api-v2-1
              
      ### *ENDPOINTS*

      **Authorization Endpoint**: https://my.nbg.gr/identity/connect/authorize

      **Token  Endpoint**: https://my.nbg.gr/identity/connect/token

      See more [here](https://developer.nbg.gr/oauth-document)
      
      ## QSeal Certificates 
      
      This section provides an overview of the message signing process that TPPs should implement to consume the NBG PSD2 APIs that support QSeal certificates.
      
      You can download the NBG certificate to validate the API responses using the following link:
        
        - [NBG QSeal Certificate](https://files.nbg.gr/certificates/NBG%20QSeal%20production.cer)
        
      **Signing flow**
      
      
      QSeal Certificates provide a solution for non-repudiation that does not rely on TLS. NBG PSD2 APIs employ a JWS (JSON Web Signature) with detached content (as defined in [RFC 7515 - Appendix F](https://tools.ietf.org/html/rfc7515)) in the HTTP header \"Signature\". A TPP's private key should be used to sign the requests, while the NBG's private key is used to sign the response. Signers must sign the message using the RS256 algorithm.
      
      **JWS Construction**
      
      The TPP must construct the JWS using a private key with a corresponding QSeal certificate. The JWS is a string consisting of three base64URL encoded parts separated with dots in the form of \"Header.Payload.Signature\". Note that we accept detached JWSs, meaning that the Payload part should be ommited so that the \"Signature\" header should be in the form \"Header..Signature\".
      
      Below we describe how to construct the three parts.
      
      **Header (JOSE)**
      
      The JOSE Header (Javascript Object Signing and Encryption) is essentially the digital signature of the payload. An example with the only mandatory JOSE Header field \"alg\", which identifies the cryptographic algorithm you should use to secure the JWS, is shown below:
      
      {
        \"alg\": \"RS256\" 
      }
      
      **Payload**
      
      The payload is the body of your request in JSON format.
      
      **Signature**
      
      The signature is constructed using the serialized payload, the defined algorithm (RS256 in our case) and the TPP's private key. Please refer to OpenID for all libraries implementing the JWS spec depending on your programming environment: https://openid.net/developers/jwt/.
      
      **Please note:** 

      1. To help you, we have uploaded **postman collections** that **calculate the signature and certificate headers** in a pre-request script. 

      You can find the postman collections for the Account Information API [here](https://github.com/myNBGcode/PostmanCollections).
 
      2. Furthermore, we created a **windows form application** that constructs the **headers** as needed. It is implemented in C# and we published it on our Github account. Check out the code and the executable 
      [here](https://github.com/myNBGcode/NBG-request-signer).
      
      ## Python package and SDK
      You can also use the PSD2 Account Information API via our public python package 'nbg'. By hitting 'pip install nbg' you are good to go. For more information, the documentation, and the relevant repo visit [this](https://developer.nbg.gr/blog/Python-dev-you-said-We-raise-you-pip-install-nbg) post.

      ## Create your Sandbox 

      Sandboxes are self - contained testing environments that provide a simple way of testing the API without any real impact, meaning that no personal or financial data is used.

      You can create **your Sandbox** by invoking the **POST** /api/sandbox call by simply providing an \"id\" as your sandbox id and naming it almost anything you like. A sandbox with pre-populated data will be created, with a ready-to-go user with 'userId' the username that you use to log in.

      **_Important!_** Don't lose your sandbox_id, since you will need it for all the API calls. Sandbox endpoints are not included in the production version API.



      ## Important notes

      Request headers
      1. Each request **_MUST_** have a new GUID passed to request.header.ID
      2. Pass your client_id to request.header.application

      ## SMS Challenge (One Time Password)

      To successfully complete the transaction using the SMS OTP flow, pass the key-value pair **"tanNumber":"smsotp"** to the request. 
      If the request is valid, the response will be **SMSOTP.500** and an SMS with the OTP will be sent to the provided phone number. 

      To complete the transaction, repeat the request by replacing the value of **"tanNumber"** with the OTP you received.  You have **3** attempts to complete the transaction by using a wrong OTP and each time you will receive the **SMSOTP.800 error** code. 

      In addition there are the following error codes: 

       **SMSOTP.202** when the smsotp code isn't correctly matched or if the smsotp has been consumed before the request.

       **SMSOTP.402** when something is changed in the request between the time of the request and the time of the consumption of the smsotp or when the smsotp hasn't been sent to the user.

      If you surpass this threshold you will receive the **SMSOTP.400** error code, which means that your user is locked out and is not able to request OTPs until we unlock the account.

      In the sandbox environment, you can **change the mobile phone number** that receives the SMS OTP by updating the sandbox field **'mobilePhoneNumber'** which you will find in the "users" object. 


      The default mobile phone number is the one that you submitted when you signed up in the NBG Technology HUB.

      ## Generic Error Codes:
      **Format**

      ```json
      {
        "Message": "Error 1.1.3"
      }
      ```

      1. Error 1.1.0 - Only POST method is allowed
      2. Error 1.1.1, 2.1.2 - Header Error : Header is NULL
      3. Error 1.1.3 - Header Error : Application is NULL
      4. Error 1.2 - Model state is invalid
      5. Error C.0.0, C.0.1 - Action not allowed for CORPORATE users
      6. Error 2.1.1 - Request body is null
      7. Error 2.2.1 - UserId is null
      8. Error 2.2.3 - Inconsistent User ID
      9. Error 3.1.1 - header.ID/header.application must be valid GUIDs

      ## Feedback and Questions

      We would love to hear your feedback and answer your questions. Send us at [developer@nbg.gr](developer@nbg.gr)


      Check out our [Sandbox Postman Collection](https://github.com/NBG-Developer-Portal/Account-Information-API)

      ------------------------------------------------------------------------------------------ 

      Created by [**NBG**](https://www.nbg.gr/).

      ------------------------------------------------------------------------------------------ 
      ------------------------------------------------------------------------------------------
    contact:
        email: developer@nbg.gr
    version: "v2.1"
servers:
  - url: 'https://apis.nbg.gr/sandbox/account.info/oauth2/v2.1'
    description: Sandbox Server
  - url: 'https://services.nbg.gr/apis/account.info/v2.1'
    description: Production Server
paths:
    /consents/request-access:
        post:
            tags:
                - Consent
            summary: Generate consent.
            description: >
                Generates a consentId that must be used when the user visits the Consent UI to give his/her
                consent, using client credential authorisation flow. A default application is created at the
                sandbox default data (field 'consentApplicationIds').
                 
                 **Error List**   


                 **Code**: 102 - **Description**: You must fill all the required fields in the request body.
                 
                 
                 **Code**: CME-30004 - **Description**: Active consent template not found.        
                 
                 **Sandbox Specific Error List**   
                 
                 
                 **Code**: 001 - **Description**: Invalid sandboxId.
                 
                 
                 **Code**: 004 - **Description**: Cannot Update Sandbox.
                 
                 
                 **Code**: 006 - **Description**: Sandbox Not Found
                 
                 
                 **Code**: 007 - **Description**: Logged in User Not Found.
            operationId: Consents_ConsentsRequestAccess
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the client credentials flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: 6E6079FA-F66F-42FF-82B9-17A8C97B7BA9
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfRequestAccess'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfRequestAccess'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /consents/info:
        post:
            tags:
                - Consent
            summary: Get consent information.
            description: |
                Retrieves the consent information of a user's consent.

                **Error List**   


                **Code**: 102 - **Description**: You must fill all the required fields in the request body.  

                        
                **Code**: CE-30000 - **Description**: Consent Not Found.


                **Sandbox Specific Error List**   


                **Code**: 001 - **Description**: Invalid sandboxId.


                **Code**: 006 - **Description**: Sandbox Not Found


                **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Consents_ConsentsInfo
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: 6E6079FA-F66F-42FF-82B9-17A8C97B7BA9
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfInfo'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfInfo'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /consents/delete:
        post:
            tags:
                - Consent
            summary: Delete consent.
            description: >
                Deletes a user's consent.


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request
                body.       



                **Code**: CE-30000 - **Description**: Consent Not Found.



                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 004 - **Description**: Cannot Update Sandbox.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.  
            operationId: Consents_ConsentsDelete
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: 6E6079FA-F66F-42FF-82B9-17A8C97B7BA9
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfConsentDelete'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfBoolean'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /account/list:
        post:
            tags:
                - Account
            summary: List of accounts with details.
            description: >
                List of NBG domestic accounts in euro


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request
                body.       



                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.



                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error



                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.
            operationId: Account_AccountAccountsFull
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: 6E6079FA-F66F-42FF-82B9-17A8C97B7BA9
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        default: 87DD5171-746E-4C66-8981-C4765FC8C48E
                        type: string
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfGeneric'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfAccountsList'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /account/beneficiaries:
        post:
            tags:
                - Account
            summary: NBG account beneficiaries.
            description: >
                NBG account beneficiaries


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request
                body.       



                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.



                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error



                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Code**: 300 - **Description**: Account not found.
                                
                                
                                
                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Account_AccountBeneficiaries
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: 98527CBA-778C-482A-8673-58C93FC70CDC
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        default: 87DD5171-746E-4C66-8981-C4765FC8C48E
                        type: string
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfIbanBic'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseListOfString'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /account/details:
        post:
            tags:
                - Account
            summary: Account details.
            description: >
                Retrieves information of a specified account


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request
                body.       



                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.



                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error



                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Code**: 300 - **Description**: Account not found.
                                
                                
                
                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Account_AccountDetails
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: F304D057-417A-49A5-9B66-13EB109B631C
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        default: 87DD5171-746E-4C66-8981-C4765FC8C48E
                        type: string
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfBalance'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfAccountBalanceDetails'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /account/transactions:
        post:
            tags:
                - Account
            summary: Account transactions.
            description: >
                Retrieves transactions of a specified account      


                **Error List**   


                **Code**: 102 - **Description**: You must fill all the required fields in the request
                body.       


                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.


                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error



                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Code**: 300 - **Description**: Account not found.
                                
                                
                                
                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.       
            operationId: Account_AccountStatements
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: A92F3431-E9B8-4C04-8C0D-40B29EC3D6B3
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        default: 87DD5171-746E-4C66-8981-C4765FC8C48E
                        type: string
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfStatement'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfListOfTransaction'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /card/list:
        post:
            tags:
                - Card
            summary: User cards.
            description: |
                List of my credit and debit cards are returned. For more information about a card the /card/details action can be invoked.
                
                **Error List**   
                
       
                **Code**: 102 - **Description**: You must fill all the required fields in the request body.     
                  
                    
                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.
                
                
                **Code**: 106 - **Description**: Error access_denied: User does not have the specified Consent-Id
                    
                
                **Code**: 107 - **Description**: Error access_denied: Consent has expired.
                    
                
                **Code**: 108 - **Description**: Error server_error: Unknown Error
                
                
                **Code**: 200 - **Description**: Card type not found.
                    
                    
                **Sandbox Specific Error List**   
                    
                    
                **Code**: 001 - **Description**: Invalid sandboxId.

                    
                **Code**: 006 - **Description**: Sandbox Not Found
                    
                    
                **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Card_List
            parameters:
                - 
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        type: string
                        default: ''
                - 
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        type: string
                        default: Bearer
                - 
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: false
                    schema:
                        type: string
                        default: 'C6FA7003-3834-4E5E-AB71-8C6F82CFA1C4'      
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                - 
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        type: string
                        default: '87DD5171-746E-4C66-8981-C4765FC8C48E'     
                - 
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            responses:
              '200':
                description: OK
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ResponseOfCardList'
              default:
                description: Error Response
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ErrorResponse'                      
            requestBody:
                content:
                  application/json:
                    schema:      
                      $ref: '#/components/schemas/RequestOfCardList'           
    /card/details:
        post:
            tags:
                - Card
            summary: Card details.
            description: |
                    Information of my credit/debit card is returned. Field cardNumber can be acquired through /card/list action.
                
                    **Error List**   
                
                
                    **Code**: 102 - **Description**: You must fill all the required fields in the request body.       
                    
                    
                    **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.
                
                
                    **Code**: 106 - **Description**: Error access_denied: User does not have the specified Consent-Id
                    
                
                    **Code**: 107 - **Description**: Error access_denied: Consent has expired.
                    
                
                    **Code**: 108 - **Description**: Error server_error: Unknown Error
                    
                    
                    **Sandbox Specific Error List**   
                    
                    
                    **Code**: 001 - **Description**: Invalid sandboxId.

                    
                    **Code**: 006 - **Description**: Sandbox Not Found
                    
                    
                    **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Card_Details
            parameters:
                - 
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        type: string
                        default: ''
                - 
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        type: string
                        default: Bearer
                - 
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: false
                    schema:
                        type: string
                        default: 'C6FA7003-3834-4E5E-AB71-8C6F82CFA1C4'      
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                - 
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        type: string
                        default: '87DD5171-746E-4C66-8981-C4765FC8C48E'     
                - 
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            responses:
               '200':
                 description: OK
                 content:
                   application/json:
                    schema:
                      $ref: '#/components/schemas/ResponseOfCardDetails'
               default:
                 description: Error Response
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/ErrorResponse'                      
            requestBody:
                content:
                  application/json:
                    schema:      
                      $ref: '#/components/schemas/RequestOfCardDetails'   
    /card/transactions:
        post:
            tags:
                - Card
            summary: Card transactions.
            description: |
                    Transactions of my credit/debit card are returned. Field cardNumber can be acquired through /card/list action.
                
                    **Error List**   
                
                
                    **Code**: 102 - **Description**: You must fill all the required fields in the request body.       
                    
                    
                    **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.
                
                
                    **Code**: 106 - **Description**: Error access_denied: User does not have the specified Consent-Id
                    
                
                    **Code**: 107 - **Description**: Error access_denied: Consent has expired.
                    
                
                    **Code**: 108 - **Description**: Error server_error: Unknown Error
                    
                    
                    **Sandbox Specific Error List**   
                    
                    
                    **Code**: 001 - **Description**: Invalid sandboxId.

                    
                    **Code**: 006 - **Description**: Sandbox Not Found
                    
                    
                    **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Card_Transactions
            parameters:
                - 
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        type: string
                        default: ''
                - 
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        type: string
                        default: Bearer
                - 
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: false
                    schema:
                        type: string
                        default: 'C6FA7003-3834-4E5E-AB71-8C6F82CFA1C4'      
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                - 
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        type: string
                        default: '87DD5171-746E-4C66-8981-C4765FC8C48E'     
                - 
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            responses:
               '200':
                 description: OK
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/ResponseOfCardTransactions'
               default:
                 description: Error Response
                 content:
                   application/json:
                     schema:
                       $ref: '#/components/schemas/ErrorResponse'                      
            requestBody:
                content:
                  application/json:
                    schema:      
                       $ref: '#/components/schemas/RequestOfCardTransactions'           
    /foreign-currency-account/list:
        post:
            tags:
                - Foreign Currency Account
            summary: Foreign currency accounts.
            description: >
                List of my accounts in foreign currency e.g USD      


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request
                body.       



                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.



                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error



                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Exchange_ExchangeAccountsFull
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: C6FA7003-3834-4E5E-AB71-8C6F82CFA1C4
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        default: 87DD5171-746E-4C66-8981-C4765FC8C48E
                        type: string
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfGeneric'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfAccountsList'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /foreign-currency-account/beneficiaries:
        post:
            tags:
                - Foreign Currency Account
            summary: Foreign currency account beneficiaries.
            description: >
                Foreign currency account beneficiaries


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request
                body.       



                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.



                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error



                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Code**: 300 - **Description**: Account not found.



                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Exchange_ExchangeBeneficiaries
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: A74BBE34-E1FD-41A1-8AAD-6B50FCB5E4D0
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        default: 87DD5171-746E-4C66-8981-C4765FC8C48E
                        type: string
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfCoBeneficiary'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfListOfAccountBeneficiary'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /foreign-currency-account/details:
        post:
            tags:
                - Foreign Currency Account
            summary: Foreign currency account details.
            description: >
                Foreign currency account details


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request
                body.       



                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.



                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error
                


                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Code**: 300 - **Description**: Account not found.



                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Exchange_ExchangeDetails
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: 822A30F3-1F3D-40A0-AD21-D18517B99A8C
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        default: 87DD5171-746E-4C66-8981-C4765FC8C48E
                        type: string
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfBalance'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfAccountBalanceDetails'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /foreign-currency-account/transactions:
        post:
            tags:
                - Foreign Currency Account
            summary: Foreign currency account transactions.
            description: >
                Foreign currency account transactions


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request
                body.       



                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.



                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error



                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Code**: 300 - **Description**: Account not found.



                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.        
            operationId: Exchange_FetchForeignAccountTranscations
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: 56BCB978-D595-4D70-8CE5-97E23B38A34C
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    name: Consent-Id
                    in: header
                    description: Consent Identifier
                    required: false
                    schema:
                        default: 87DD5171-746E-4C66-8981-C4765FC8C48E
                        type: string
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfStatement'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfListOfTransaction'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /scheduled-payments/list:
        post:
            tags:
                - Scheduled Payments
            summary: Get Scheduled Payments.
            description: >
                Retrieves scheduled payments list for a specified account.


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request body.  



                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.



                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error



                **Code**: 109 - **Description**: Error access_denied: Not valid consent status, only
                'Authorized' is allowed
                


                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Code**: 300 - **Description**: Account not found.



                **Sandbox Specific Error List**    



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.             
            operationId: scheduled_payments
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: CD9B23FD-0B9E-4574-8695-AFB4596F8D14
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    $ref: '#/components/parameters/Consent-Id-Header-Param'
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfStatement'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfScheduledPayments'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /standing-orders/list:
        post:
            tags:
                - Standing Orders
            summary: Get Standing Orders.
            description: >
                Retrieves standing orders list for a specified account.


                **Error List**   



                **Code**: 102 - **Description**: You must fill all the required fields in the request body.  



                **Code**: 105 - **Description**: Error invalid_request: Header 'Consent-Id' is missing.



                **Code**: 106 - **Description**: Error access_denied: User does not have the specified
                Consent-Id



                **Code**: 107 - **Description**: Error access_denied: Consent has expired.



                **Code**: 108 - **Description**: Error server_error: Unknown Error



                **Code**: 109 - **Description**: Error access_denied: Not valid consent status, only
                'Authorized' is allowed



                **Code**: 115 - **Description**: User has not given permission for this action
                


                **Code**: 116 - **Description**: Request account is different from the given consent account
                
                
                
                **Code**: 300 - **Description**: Account not found.
                                
                          
                                
                **Sandbox Specific Error List**   



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 006 - **Description**: Sandbox Not Found



                **Code**: 007 - **Description**: Logged in User Not Found.             
            operationId: standing_orders
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: CD9B23FD-0B9E-4574-8695-AFB4596F8D14
                        type: string                        
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
                -
                    $ref: '#/components/parameters/Consent-Id-Header-Param'
                -
                    $ref: '#/components/parameters/X-Consent-Check-Header-Param'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfStatement'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfStandingOrders'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /sandbox:
        post:
            tags:
                - Sandbox
            summary: Create a sandbox.
            description: |-
                A Sandbox with default data is created. Simply call by providing an \"id\" as your sandbox id
                and naming it almost anything you like. 


                **Error List**



                **Code**: 001 - **Description**: Invalid sandboxId.



                **Code**: 002 - **Description**: Sandbox with the same sandboxId already exists!
                    
                    
                **Code**: 003 - **Description**: Cannot Create Sandbox.   
            operationId: Sandbox_CreateSandboxPsd2
            parameters:
                - name: Authorization
                  in: header
                  description: Authorization Bearer obtained using the authorization code flow (OAuth2).
                  required: true
                  schema:
                    default: Bearer
                    type: string
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfSandbox'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfSandbox'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    '/sandbox/{sandbox_id}':
        get:
            tags:
                - Sandbox
            summary: Export a sandbox.
            description: |
                Export a sandbox

                **Error List**


                **Code**: 001 - **Description**: Invalid sandboxId.


                **Code**: 006 - **Description**: Sandbox Not Found
            operationId: Sandbox_DownloadSandboxPsd2
            parameters:
                - name: sandbox_id
                  in: path
                  description: The unique name of your Sandbox
                  required: true
                  schema:
                    type: string
                - name: Authorization
                  in: header
                  description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                  required: true
                  schema:
                    default: Bearer
                    type: string  
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfSandbox'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
        put:
            tags:
                - Sandbox
            summary: Import a sandbox.
            description: |
                Import a sandbox      

                **Error List**


                **Code**: 001 - **Description**: Invalid sandboxId.


                **Code**: 004 - **Description**: Cannot Update Sandbox.


                **Code**: 006 - **Description**: Sandbox Not Found
            operationId: Sandbox_UpdateSandboxPsd2
            parameters:
                - name: sandbox_id
                  in: path
                  description: The unique name of your Sandbox
                  required: true
                  schema:
                    type: string
                - name: Authorization
                  in: header
                  description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                  required: true
                  schema:
                    default: Bearer
                    type: string
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestOfUpdateSandbox'
                required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfSandbox'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
        delete:
            tags:
                - Sandbox
            summary: Delete a sandbox.
            description: |
                Delete a sandbox      

                **Error List**


                **Code**: 001 - **Description**: Invalid sandboxId.


                **Code**: 005 - **Description**: Cannot Delete Sandbox.


                **Code**: 006 - **Description**: Sandbox Not Found         
            operationId: Sandbox_DeleteSandboxPsd2
            parameters:
                - name: sandbox_id
                  in: path
                  description: The unique name of your Sandbox
                  required: true
                  schema:
                    type: string
                - name: Authorization
                  in: header
                  description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                  required: true
                  schema:
                    default: Bearer
                    type: string
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfBoolean'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /user/current:
        post:
            tags:
                - User
            summary: Info about the logged in user (i.e. userId).
            description: |
                Get information of a specified user.
            operationId: User_GetCurrentUserPsd2
            parameters:
                -
                    name: sandbox_id
                    in: header
                    description: The unique name of your Sandbox
                    required: true
                    schema:
                        default: ''
                        type: string
                -
                    name: Authorization
                    in: header
                    description: Authorization Bearer obtained using the authorization code flow (OAuth2)
                    required: true
                    schema:
                        default: Bearer
                        type: string
                -
                    name: Request-Id
                    in: header
                    description: A guid that uniquely identifies your request
                    required: true
                    schema:
                        default: 2E73E397-E16F-46CD-A626-461CF7165F32
                        type: string
                - name: Signature
                  in: header
                  description: Signature (Detached JWS signature)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: TPP-Signature-Certificate
                  in: header
                  description: TPP-Signature-Certificate (X.509 certificate in .pem format)
                  required: true
                  schema:
                    type: string
                    default: ''
                - name: X-Certificate-Check
                  in: header
                  description: A Boolean to enable or disable the certificate validation
                  required: true
                  schema:
                    type: string
                    default: false
                - name: user-agent
                  in: header
                  description: Indicates the browser that the API is called from
                  schema:
                    type: string
                    default: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36'
                  required: true
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RequestEmptyPayload'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseOfGetCurrentUser'
                default:
                    description: Error Response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
components:
    schemas:
        ResponseOfStandingOrders:
            type: object
            properties:
                payload:
                    $ref: '#/components/schemas/StandingOrdersResponse'
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
        StandingOrdersResponse:
            type: object
            properties:
                standingOrders:
                    description: Standing Orders
                    type: array
                    items:
                        $ref: '#/components/schemas/StandingOrders'
        StandingOrders:
            type: object
            properties:
                serialNum:
                    description: The serial number of this entry
                    type: string
                    example: '0'
                orderNo:
                    description: Payment Order Number
                    type: string
                    example: '1234567'
                createdDate:
                    format: date-time
                    description: Date of this transaction (UTC)
                    type: string
                    example: '2018-02-08T12:37:26.959Z'
                creditAccount:
                    description: The NBG account number (e.g. 11 digits)
                    type: string
                    example: '67890123456'
                amount:
                    format: double
                    description: Amount of this transaction in the currency of the transaction
                    type: number
                    example: 1
                description:
                    description: Description of this transaction
                    type: string
                    example: TEST
                activeDate:
                    format: date-time
                    description: Activation Date (UTC)
                    type: string
                    example: '2018-02-08T12:37:26.959Z'
                totalPayments:
                    format: int32
                    description: Number of times it will be executed
                    type: number
                    example: 1
                period:
                    format: int32
                    description: |
                        Deferred Payment Period. 

                        1 for month

                        2 for 2 months

                        3 for 3 months

                        4 for 4 months

                        5 for 6 months

                        6 for year
                    type: number
                    example: 1
                revokeDate:
                    format: date-time
                    description: Revokation Date (UTC)
                    type: string
        ResponseOfScheduledPayments:
            type: object
            properties:
                payload:
                    $ref: '#/components/schemas/ScheduledPaymentsResponse'
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
        ScheduledPaymentsResponse:
            type: object
            properties:
                scheduledPayments:
                    description: Scheduled Payments
                    type: array
                    items:
                        $ref: '#/components/schemas/ScheduledPayments'
        ScheduledPayments:
            type: object
            properties:
                amount:
                    format: double
                    description: Amount of this transaction in the currency of the transaction
                    type: number
                    example: 1
                createdDate:
                    format: date-time
                    description: Date of this transaction (UTC)
                    type: string
                    example: '2018-02-08T12:37:26.959Z'
                creditAccount:
                    description: The NBG account number (e.g. 11 digits)
                    type: string
                    example: '67890123456'
                description:
                    description: Description of this transaction
                    type: string
                    example: TEST
                executionDate:
                    format: date-time
                    description: Execution Date (UTC)
                    type: string
                    example: '2018-02-08T12:37:26.959Z'
                name:
                    description: Name of this transaction
                    type: string
                    example: TEST
                rowsNumber:
                    format: int32
                    description: Row number
                    type: number
                    example: 1
                status:
                    description: Transaction Status
                    type: string
                    enum: 
                      - ToBeExecuted
                      - TotalSuccess
                      - TotalFailure
                      - CancelledByUser
                      - PartialSuccess
                    example: 'ToBeExecuted'
                totalAmount:
                    format: double
                    description: Total Amount
                    type: number
                    example: 1
                scheduleId:
                    description: Schedule Payment Identifier
                    type: string
                    example: '00021'
        ResponseOfCardTransactions:
            type: object
            properties:
              payload:
                description: Card list of transactions
                type: array
                items:
                  $ref: '#/components/schemas/CardTransaction'
              exception:
                $ref: '#/components/schemas/ResponseMessage'
              messages:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseMessage'
                example: null
              executionTime:
                format: double
                type: number
        CardTransaction:
          type: object
          properties:
            serialNo:
              description: List serial number
              type: string
              example: '1234567892134567'
            transactionDate:
              format: date-time
              description: Transaction's date and time
              type: string
              example: "2019-02-08T12:37:26.959Z"
            reason:
              description: Transaction's reason (e.g. Amazon Marketplace) 
              type: string
              example: "TEST"
            amount:
              format: double
              description: Transaction's amount
              type: number
              example: 1.00
            ledgerBalance:
              format: double
              description: Ledger balance
              type: number
              example: 10.00
            creditDebitFlag:
              description: If it is "Credit" or "Debit" transaction
              type: string
              enum: 
              - Credit
              - Debit
              example: "Credit"
        RequestOfCardTransactions:
          required:
            - header
            - payload
          type: object
          properties:
            header:
              $ref: '#/components/schemas/RequestHeader'
            payload:
              $ref: '#/components/schemas/CardTransactionsRequest'  
          example:
            header:
              ID: "f42f0cf7-2941-48a9-b299-e0b785207ea7"
              application: "f42f0cf7-2941-48a9-b299-e0b785207ea7"
            payload:
              userId: "User1"
              cardNumber: "1234567891234567"
              dateFrom: "2019-02-08T12:37:26.959Z"
              dateTo: "2019-02-08T12:37:26.959Z"
        CardTransactionsRequest:
          required:
            - cardNumber
            - dateFrom
            - dateTo
            - userId
          type: object
          properties:
            cardNumber:
              type: string
              description: Card Number
            dateFrom:
              format: date-time
              type: string
              description: Date From Timestamp (UTC)
            dateTo:
              format: date-time
              type: string
              description: Date To Timestamp (UTC)
            userId:
              type: string        
              description: The id of the user
        RequestOfCardDetails:
           required:
             - header
             - payload
           type: object
           properties:
             header:
               $ref: '#/components/schemas/RequestHeader'
             payload:
               $ref: '#/components/schemas/CardDetailsRequest'
           example:
             header:
               ID: "f42f0cf7-2941-48a9-b299-e0b785207ea7"
               application: "f42f0cf7-2941-48a9-b299-e0b785207ea7"
             payload:
               userId: "User1"
               cardNumber: "1234567891234567"
        CardDetailsRequest:
           required:
             - cardNumber
             - userId
             - cardType
           type: object
           properties:
             cardNumber:
               type: string
               description: Card Number
               example: "1234567891234567"
             userId:
               type: string  
               description: The id of the user
               example: "User1"
        DebitCardDetails:
          type: object
          properties:
            issueDate:
              format: date-time
              description: Issuance date
              type: string
              example: "2019-11-08T12:37:26.959Z"        
            holderName:
              description: Holder Name
              type: string
              example: "PANAGIOTIS PANAGIOTOU"
            cardLimits:
              $ref: '#/components/schemas/CardLimits'
        CardLimits:
          type: object
          properties:
           domesticWithdrawalLimit:
             format: double
             description: Domestic Withdrawal Limit
             type: number
             example: 900.0
           internationalWithdrawalLimit:
             format: double
             description: International lWithdrawal Limit
             type: number
             example: 900.0
           totalWithdrawalLimit:
             format: double
             description: Total Withdrawal Limit
             type: number
             example: 1500.0
           domesticEcommerceLimit:
             format: double
             description: Domestic E-commerce Limit
             type: number
             example: 1500.0
           internationalEcommerceLimit:
             format: double
             description: International Ecommerce Limit
             type: number
             example: 1500.0
           totalEcommerceLimit:
             format: double
             description: Total E-commerce Limit
             type: number
             example: 1500.0
           purchaseLimit:
             format: double
             description: Purchase Limit
             type: number
             example: 1500.0
           creditLimit:
             format: double
             description: Credit Limit
             type: number
             example: 5000.0             
        ResponseOfCardDetails:
          type: object
          properties:
            payload:
              $ref: '#/components/schemas/CardDetailsResponse'
            exception:
              $ref: '#/components/schemas/ResponseMessage'
            messages:
              type: array
              items:
                $ref: '#/components/schemas/ResponseMessage'
              example: null
            executionTime:
              format: double
              type: number
        CardDetailsResponse:
          type: object
          properties:
            alias:
              description: Card friendly name
              type: string
              example: "MyCard"
            number:
              description: Card number
              type: string
              example: "1234567891234567"
            productName:
              description: Card product name (e.g. VISA PREPAID)
              type: string
              example: "VISA"   
            expirationDate:
              description: Card expiration date
              type: string
              example: "11/2022"
            status:
              description: Credit Card Status
              type: string
              enum:
              - Active
              - Inactive
              - Pending issuance
              - Deactivated
              - Temporarily deactivated
              example: "Active"         
            creditCardDetails:
              $ref: '#/components/schemas/CreditCardDetails'    
            debitCardDetails:
              $ref: '#/components/schemas/DebitCardDetails'      
        ResponseOfCardList:
          type: object
          description: Response of user cards
          properties:
            payload:
              type: array
              items:
                $ref: '#/components/schemas/Card'
            exception:
              $ref: '#/components/schemas/ResponseMessage'
            messages:
              type: array
              items:
                $ref: '#/components/schemas/ResponseMessage'
              example: null
            executionTime:
              format: double
              type: number   
        Card:
            type: object
            description: User credit or debit card details
            properties:
                alias:
                    description: Card friendly name
                    type: string
                    example: "MyCard"
                number:
                    description: Card number
                    type: string
                    example: "1234567891234567"
                productName:
                    description: Card product name (e.g. VISA PREPAID)
                    type: string
                    example: "VISA PREPAID"
                type:
                    type: string
                    description: Card type to retrieve
                    enum:
                    - Credit
                    - Debit
                    - Prepaid
                    - Virtual
                    example: "Credit"
                status:
                    description: Credit Card Status
                    type: string
                    enum:
                    - Active
                    - Inactive
                    - Pending issuance
                    - Deactivated
                    - Temporarily deactivated
                    example: "Active"     
                creditBalance:
                    format: double
                    description: Credit balance
                    type: number    
                    example: 5.00
        CreditCardDetails:
           type: object
           properties:
             ledgerBalance:
               format: double
               description: Ledger Balance
               type: number
               example: 5.00
             creditBalance:
               format: double
               description: Credit Balance
               type: number
               example: 5000.00               
             creditLimit:
               format: double
               description: Credit Limit
               type: number
               example: 10.00
             futureDueAmount:
               format: double
               description: Amount to pay until paymentDate
               type: number
               example: 10.00         
             minimumPayment:
               format: double
               description: Minimum amount to pay until paymentDate
               type: number
               example: 10.00       
             paymentDate:
               format: date-time
               description: Payment Date
               type: string
               example: "2022-11-08T12:37:26.959Z"
             statementAmount:
               format: double
               description: Statement Amount
               type: number
               example: 50.00
             statementDate:
               format: date-time
               description: Statement Date
               type: string
               example: "2022-11-08T12:37:26.959Z"               
        RequestOfRequestAccess:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    required:
                        - applicationId
                    type: object
                    properties:
                        applicationId:
                            format: uuid
                            description: >-
                                The id of your application. A default application is created at the sandbox
                                default data (field 'consentApplicationIds').
                            type: string
            example:
                header:
                    ID: bf80bcea-7a8b-4a4a-aac3-0ea52f0494e2
                    application: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
                payload:
                    applicationId: 72F01708-BE1E-4567-926E-8C87D03CA551
        ResponseOfRequestAccess:
            type: object
            properties:
                payload:
                    type: object
                    properties:
                        consentId:
                            format: uuid
                            description: The id of the consent to be used for the user to visit the Consent UI
                            type: string
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
            example:
                payload:
                    consentId: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
                executionTime: 0
        RequestOfInfo:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    required:
                        - userId
                    type: object
                    properties:
                        userId:
                            description: The username of the logged in user
                            type: string
                        consentId:
                            format: uuid
                            description: The id of the user's consent
                            type: string
                        applicationId:
                            format: uuid
                            description: The id of your application/client
                            type: string
            example:
                header:
                    ID: f42f0cf7-2941-48a9-b299-e0b785207ea7
                    application: f42f0cf7-2941-48a9-b299-e0b785207ea7
                payload:
                    userId: 11fc37e4-af4b-4440-b002-fff2ecd570f1
                    consentId: 56e50b46-fb92-4d0f-9e5e-0a78f5e40fcb
                    applicationId: 72F01708-BE1E-4567-926E-8C87D03CA551
        ResponseOfInfo:
            type: object
            properties:
                payload:
                    type: object
                    properties:
                        consents:
                            type: array
                            items:
                                $ref: '#/components/schemas/ConsentModel'
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
        RequestOfConsentDelete:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    required:
                        - userId
                        - consentId
                        - tanNumber
                    type: object
                    properties:
                        userId:
                            description: The username of the logged in user
                            type: string
                            example: '123456'
                        consentId:
                            $ref: '#/components/schemas/ConsentId'
                        tanNumber:
                            description: One time password received via sms
                            type: string
                            example: smsotp
        ConsentModel:
            type: object
            properties:
                consentId:
                    $ref: '#/components/schemas/ConsentId'
                name:
                    $ref: '#/components/schemas/ConsentName'
                startDate:
                    $ref: '#/components/schemas/StartDate'
                endDate:
                    $ref: '#/components/schemas/EndDate'
                created:
                    format: date-time
                    description: Created date
                    type: string
                    example: '2019-01-01T09:12:18.362Z'
                updated:
                    format: date-time
                    description: Updated date
                    type: string
                    example: '2019-01-01T09:12:18.362Z'
                uses:
                    description: Number of uses
                    type: integer
                status:
                    $ref: '#/components/schemas/ConsentStatus'
                statusDate:
                    format: date-time
                    description: Status date
                    type: string
                    example: '2019-01-01T09:12:18.362Z'
                applicationId:
                    $ref: '#/components/schemas/ApplicationId'
                sub:
                    description: User's unique sub
                    type: string
                    example: 5e2a5ee2-8ecc-4df7-92c8-6900b9d30356
                preferredUsername:
                    description: Preferred username
                    type: string
                    example: john
                providerId:
                    description: Provider id
                    type: string
                    example: aacffa96-5ae8-470e-945e-9e13b6318416
        SandboxConsentModel:
            type: object
            properties:
                consentId:
                    $ref: '#/components/schemas/ConsentId'
                name:
                    $ref: '#/components/schemas/ConsentName'
                consentData:
                    $ref: '#/components/schemas/ConsentData'
                startDate:
                    $ref: '#/components/schemas/StartDate'
                endDate:
                    $ref: '#/components/schemas/EndDate'
                created:
                    format: date-time
                    description: Created date
                    type: string
                    example: '2019-01-01T09:12:18.362Z'
                updated:
                    format: date-time
                    description: Updated date
                    type: string
                    example: '2019-01-01T09:12:18.362Z'
                uses:
                    description: Number of uses
                    type: integer
                status:
                    $ref: '#/components/schemas/ConsentStatus'
                statusDate:
                    format: date-time
                    description: Status date
                    type: string
                    example: '2019-01-01T09:12:18.362Z'
                applicationId:
                    $ref: '#/components/schemas/ApplicationId'
                sub:
                    description: User's unique sub
                    type: string
                    example: 5e2a5ee2-8ecc-4df7-92c8-6900b9d30356
                preferredUsername:
                    description: Preferred username
                    type: string
                    example: john
                providerId:
                    description: Provider id
                    type: string
                    example: aacffa96-5ae8-470e-945e-9e13b6318416
        ConsentId:
            format: uuid
            description: Consent Id
            type: string
            example: 03D3A4F2-D26E-4365-B389-1AD5EE73A5B5
        ApplicationId:
            format: uuid
            description: Application Id
            type: string
            example: 72F01708-BE1E-4567-926E-8C87D03CA551
        ConsentName:
            description: Consent name
            type: string
            example: My Consent
        ConsentData:
            type: object
            properties:
                consentId:
                    $ref: '#/components/schemas/ConsentId'
                permissions:
                    description: Consent Permissions
                    type: array
                    items:
                        $ref: '#/components/schemas/Permission'
        StartDate:
            format: date-time
            description: Start date (UTC)
            type: string
            example: '2019-01-01T09:12:18.362Z'
        EndDate:
            format: date-time
            description: End date (UTC)
            type: string
            example: '2019-12-12T09:12:18.362Z'
        Permission:
            type: object
            properties:
                startDate:
                    $ref: '#/components/schemas/StartDate'
                endDate:
                    $ref: '#/components/schemas/EndDate'
                type:
                    $ref: '#/components/schemas/ConsentType'
                typeInfo:
                    $ref: '#/components/schemas/ConsentTypeInfo'
                actions:
                    $ref: '#/components/schemas/Actions'
        ConsentType:
            description: Consent type
            enum:
                - Account
                - Balances
                - Transactions
                - Beneficiaries
            type: string
            example: Account
        ConsentTypeInfo:
            type: object
            properties:
                iban:
                    description: Account IBAN
                    type: string
                    example: GR9601106780000067890123458
                accountNumber:
                    description: ''
                    type: string
                    example: '67890123456'
                name:
                    $ref: '#/components/schemas/ConsentName'
        Actions:
            description: Permission action allowed
            type: array
            items:
                type: string
            example:
                - view.account.info
        ConsentStatus:
            description: Consent status
            enum:
                - AwaitingAuthorization
                - Authorized
                - Rejected
                - Expired
                - RevokedByAdmin
                - Revoked
                - Unspecified
            type: string
            example: Authorized
        RequestOfSandbox:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    $ref: '#/components/schemas/SandboxRequest'
            example:
                header:
                    ID: e635360e-f1b8-4deb-810c-b75b055f4ba5
                    application: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
                payload:
                    sandboxId: MySandbox
        SandboxRequest:
            description: Sandbox Request Type
            required:
                - sandboxId
            type: object
            properties:
                sandboxId:
                    description: The unique name of your Sandbox
                    type: string
        RequestEmptyPayload:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
            example:
                header:
                    ID: bf80bcea-7a8b-4a4a-aac3-0ea52f0494e2
                    application: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
        RequestOfGeneric:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    $ref: '#/components/schemas/GenericRequest'
            example:
                header:
                    ID: bf80bcea-7a8b-4a4a-aac3-0ea52f0494e2
                    application: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
                payload:
                    userId: User1
        RequestOfCardList:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    $ref: '#/components/schemas/CardListRequest'
            example:
                header:
                    ID: "bf80bcea-7a8b-4a4a-aac3-0ea52f0494e2"
                    application: "598A4414-395A-43D6-A9C3-D53A15E6E9F6"
                payload:
                    userId: "User1"          
        CardListRequest:
            required:
                - userId
                - cardTypes
            type: object
            description: Get cards request type
            properties:
                userId:
                    type: string
                    description: The username of the logged in user          
        RequestHeader:
            required:
                - ID
                - application
            type: object
            properties:
                ID:
                    type: string
                    example: C10B1AB9-9E69-4B02-B468-DCCCEA11E3A3
                application:
                    type: string
                    example: EE2F69FB-F3A7-48BD-8582-DCAD5406D864
        GenericRequest:
            required:
                - userId
            type: object
            properties:
                userId:
                    description: The username of the logged in user
                    type: string
        ResponseOfAccountsList:
            type: object
            properties:
                payload:
                    type: array
                    items:
                        $ref: '#/components/schemas/AccountsList'
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
            example:
                payload:
                    -
                        serialNo: '1'
                        accountType:
                            code: '3000'
                            value: ΚΑΤΑΘΕΣΕΙΣ ΤΑΜΙΕΥΤΗΡΙΟΥ - ΑΤΟΜΙΚΟΣ ΛΟΓ/ΣΜΟΣ
                        overdraftLimit: 0
                        numberOfMandates: 0
                        account: '1234567890'
                        iban: GR2801100800000001234567890
                        currency: EUR
                        alias: alias
                        ledgerBalance: 100000.12
                        availableBalance: 100000.12
                        newMoneyBalance: 0
                        allowConnect: '1'
                        allowDebit: '1'
                        allowCredit: '11'
                        ledgerAccount: '430'
                        isOwnAccount: true
                executionTime: 0
        AccountsList:
            description: '[PSD2] AccountList'
            type: object
            properties:
                serialNo:
                    description: Just the serial number of this entry
                    type: string
                accountType:
                    $ref: '#/components/schemas/AccountType'
                overdraftLimit:
                    format: double
                    description: Overdraft limit
                    type: number
                numberOfMandates:
                    format: int32
                    description: Number of mandates
                    type: integer
                account:
                    description: The NBG account number (e.g. 11 digits)
                    type: string
                iban:
                    description: Account IBAN.
                    type: string
                currency:
                    description: 'Currency, 3-letter code , e.g. EUR'
                    type: string
                alias:
                    description: Friendly name
                    type: string
                ledgerBalance:
                    format: double
                    description: Ledger balance
                    type: number
                availableBalance:
                    format: double
                    description: Available balance
                    type: number
                newMoneyBalance:
                    format: double
                    description: Available balance for transfer abroad
                    type: number
                allowConnect:
                    description: Connection indicator
                    type: string
                allowDebit:
                    description: Account debit indicator
                    type: string
                allowCredit:
                    description: Account credit indicator
                    type: string
                ledgerAccount:
                    description: Special account
                    type: string
                isOwnAccount:
                    description: Whether the account belongs to the user
                    type: boolean
        ResponseMessage:
            type: object
            properties:
                id:
                    type: string
                code:
                    type: string
                desc:
                    type: string
                sev:
                    enum:
                        - Warning
                        - Error
                        - Info
                    type: string
                cat:
                    enum:
                        - Business
                        - Communication
                        - Technical
                        - Security
                    type: string
        AccountType:
            description: '[PSD2] Account Type'
            type: object
            properties:
                code:
                    description: The account type that describes the specified account
                    type: string
                value:
                    description: The account type description that corresponds to the specific code type
                    type: string
        RequestOfIbanBic:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    $ref: '#/components/schemas/IbanBicRequest'
            example:
                header:
                    ID: bf80bcea-7a8b-4a4a-aac3-0ea52f0494e2
                    application: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
                payload:
                    iban: GR5301106780000067890123456
                    userId: User1
        IbanBicRequest:
            required:
                - userId
                - iban
            type: object
            properties:
                iban:
                    description: Account IBAN
                    type: string
                userId:
                    description: The username of the logged in user
                    type: string
        ResponseListOfString:
            type: object
            properties:
                payload:
                    type: array
                    items:
                        type: string
                    example:
                        - NAME A
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
        RequestOfBalance:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    $ref: '#/components/schemas/BalanceRequest'
            example:
                header:
                    ID: bf80bcea-7a8b-4a4a-aac3-0ea52f0494e2
                    application: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
                payload:
                    account: '67890123456'
                    userId: User1
        BalanceRequest:
            required:
                - userId
                - account
            type: object
            properties:
                account:
                    description: The NBG account number (e.g. 11 digits)
                    type: string
                userId:
                    description: The username of the logged in user
                    type: string
        ResponseOfAccountBalanceDetails:
            type: object
            properties:
                payload:
                    $ref: '#/components/schemas/AccountBalanceDetails'
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
            example:
                payload:
                    account: '1234567890'
                    iban: GR2801100800000001234567890
                    accountType:
                        code: '3000'
                        value: ΚΑΤΑΘΕΣΕΙΣ ΤΑΜΙΕΥΤΗΡΙΟΥ - ΑΤΟΜΙΚΟΣ ΛΟΓ/ΣΜΟΣ
                    currency: EUR
                    alias: alias
                    ledgerBalance: 100000.12
                    availableBalance: 100000.12
                    createDate: '2019-02-08T12:37:26.959Z'
                    lastTransactionDate: '2019-01-25'
                    chequeReservation: 1
                    deptReservation: 1
                    overdraftLimit: 0
                    excessLimitAmount: 0
                    availableLimitAmount: 0
                    freeChequeAmnt: 0
                    expirationDate: '2029-02-08T12:37:26.959Z'
                    allowConnect: '1'
                    allowDebit: '1'
                    allowCredit: '11'
                    isOwnAccount: true
                    newMoneyBalance: 0
                    mandatesNumber: 0
                executionTime: 0
        AccountBalanceDetails:
            description: '[PSD2] Balance Details'
            type: object
            properties:
                account:
                    description: The NBG account number (e.g. 11 digits).
                    type: string
                iban:
                    description: Account IBAN.
                    type: string
                accountType:
                    $ref: '#/components/schemas/AccountType'
                currency:
                    description: 'Currency, 3-letter code , e.g. EUR'
                    type: string
                alias:
                    description: Friendly name
                    type: string
                ledgerBalance:
                    format: double
                    description: Ledger balance
                    type: number
                availableBalance:
                    format: double
                    description: Available balance
                    type: number
                createDate:
                    format: date-time
                    description: Account creation date (UTC)
                    type: string
                lastTransactionDate:
                    format: date-time
                    description: Last transaction date (UTC)
                    type: string
                chequeReservation:
                    format: double
                    description: Reservation from cheques
                    type: number
                deptReservation:
                    format: double
                    description: Other reservation
                    type: number
                overdraftLimit:
                    format: double
                    description: Overdraft limit
                    type: number
                excessLimitAmount:
                    format: double
                    description: Overdraft limit amount exceeded
                    type: number
                availableLimitAmount:
                    format: double
                    description: Available overdraft amount
                    type: number
                freeChequeAmnt:
                    format: double
                    description: Amount free from cheques
                    type: number
                expirationDate:
                    format: date-time
                    description: Account expiration date (UTC)
                    type: string
                allowConnect:
                    description: Connection indicator
                    type: string
                allowDebit:
                    description: Account debit indicator(if 1 debit is allowed)
                    type: string
                allowCredit:
                    description: "Account credit indicator (A two digits string XY where if X=1 then credit is allowed from\r\nthe user and if Υ=1 then credit is allowed from a third user)"
                    type: string
                isOwnAccount:
                    type: boolean
                newMoneyBalance:
                    format: double
                    description: Available balance for transfer abroad
                    type: number
                mandatesNumber:
                    format: int32
                    description: Number of mandates
                    type: integer
        RequestOfStatement:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    $ref: '#/components/schemas/StatementRequest'
            example:
                header:
                    ID: bf80bcea-7a8b-4a4a-aac3-0ea52f0494e2
                    application: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
                payload:
                    account: '67890123456'
                    dateFrom: '2018-02-08T12:37:26.959Z'
                    dateTo: '2019-11-08T12:37:26.959Z'
                    userId: User1
        StatementRequest:
            required:
                - userId
                - account
                - dateFrom
                - dateTo
            type: object
            properties:
                account:
                    description: The NBG account number (e.g. 11 digits).
                    type: string
                dateFrom:
                    format: date-time
                    description: From date to fetch transactions (UTC)
                    type: string
                dateTo:
                    format: date-time
                    description: To date to fetch transactions (UTC)
                    type: string
                userId:
                    description: The username of the logged in user
                    type: string
        ResponseOfListOfTransaction:
            type: object
            properties:
                payload:
                    type: array
                    items:
                        $ref: '#/components/schemas/Transaction'
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
            example:
                payload:
                    -
                        serialNum: '2'
                        date: '2019-02-08T12:37:26.959Z'
                        branch: '700'
                        trans: "68"
                        transDescription: "ΜΕΤΑΦΟΡΑ ΣΕ ΛΟΓΑΡΙΑΣΜΟ"
                        amount: -1
                        currency: EUR
                        amountEquivalent: -1
                        creditDebit: Debit
                        valeur: '2019-02-08T12:37:26.959Z'
                        description: Sample Transfer
                        accountingBalance: 999
                        reference: '28239237'
                        externalSystem: RNB
                        relatedAccount: GR2801100800000001234567890
                        relatedName: DIMITRIOS DIMITRIOU ANDREAS
                        timestamp: '2019-02-08T12:37:26.959Z'
                    -
                        serialNum: '1'
                        date: '2019-01-14T17:50:49+02:00'
                        branch: '700'
                        trans: "68"
                        transDescription: "ΜΕΤΑΦΟΡΑ ΣΕ ΛΟΓΑΡΙΑΣΜΟ"                        
                        amount: -10
                        currency: EUR
                        amountEquivalent: -10
                        creditDebit: Debit
                        valeur: '2019-01-16T00:00:00+02:00'
                        description: Sample Transfer
                        accountingBalance: 1000
                        reference: '55624813'
                        externalSystem: RNB
                        relatedAccount: GR2801100800000001234567890
                        relatedName: DIMITRIOS DIMITRIOU ANDREAS
                        timestamp: '2019-02-08T12:37:26.959Z'
                executionTime: 0
        Transaction:
            type: object
            properties:
                serialNum:
                    description: Just the serial number of this entry
                    type: string
                date:
                    format: date-time
                    description: Date of this transaction (UTC)
                    type: string
                branch:
                    description: Branch
                    type: string
                trans:
                    description: 'Code for transaction type, e.g. <code>"10"</code> for "Κατάθεση"'
                    type: string
                transDescription:
                    type: string
                    description: 'Description for transaction type, e.g. "Κατάθεση"'
                amount:
                    format: double
                    description: Amount of this transaction in the currency of the transaction
                    type: number
                currency:
                    description: The currency of the transaction
                    type: string
                amountEquivalent:
                    format: double
                    description: Amount of this transaction in the currency of the Account
                    type: number
                creditDebit:
                    description: <code>"Credit"</code> or <code>"Debit"</code>
                    type: string
                valeur:
                    format: date-time
                    description: Date when transaction amount debited or credited (UTC)
                    type: string
                description:
                    description: Reason of this transaction
                    type: string
                accountingBalance:
                    format: double
                    description: Accounting balance
                    type: number
                reference:
                    description: Transaction reference number (with the "externalSystem" combination is unique)
                    type: string
                externalSystem:
                    description: >-
                        If equals to "RNB" then the remittance is to NBG.If equals to "ROT" then the
                        remittance is to other bank
                    type: string
                relatedAccount:
                    description: "If it is a debit transaction then it is the credit account number.\r\nIf it is a credit transaction then it is the debit account number."
                    type: string
                relatedName:
                    description: Name of the counterparty
                    type: string
                timestamp:
                    description: Full date of this transaction (up to milliseconds)
                    type: string
        AccountFull:
            type: object
            properties:
                accountType:
                    description: 'Code for account type, e.g. <code>10</code> for "Ταμιευτήριο"'
                    type: string
                overdraftLimit:
                    format: double
                    description: Overdraft limit
                    type: number
                numberOfMandates:
                    format: int32
                    description: Number of mandates
                    type: integer
                serialNo:
                    description: Just the serial number of this entry
                    type: string
                account:
                    description: The NBG account number (e.g. 11 digits)
                    type: string
                iban:
                    description: Account IBAN.
                    type: string
                currency:
                    description: 'Currency, 3-letter code , e.g. <code>EUR</code>'
                    type: string
                alias:
                    description: Friendly name
                    type: string
                product:
                    description: Account product code
                    type: string
                ledgerBalance:
                    format: double
                    description: Ledger balance
                    type: number
                availableBalance:
                    format: double
                    description: Available balance
                    type: number
                newMoneyBalance:
                    format: double
                    description: Available balance for transfer abroad
                    type: number
                flag:
                    description: TBD
                    type: string
                allowConnect:
                    description: Connection indicator
                    type: string
                allowDebit:
                    description: Account debit indicator
                    type: string
                allowCredit:
                    description: Account credit indicator
                    type: string
                indicators:
                    description: Account other indicators
                    type: string
                ledgerAccount:
                    description: Special account
                    type: string
                isOwnAccount:
                    description: Whether the account belongs to the user
                    type: boolean
                features:
                    $ref: '#/components/schemas/Feature'
        Feature:
            type: object
            properties:
                statement:
                    description: Statements
                    type: boolean
                otherInfo:
                    description: Other information
                    type: boolean
                mandates:
                    description: Mandates
                    type: boolean
                cheques:
                    description: Cheques
                    type: boolean
                transfer:
                    description: Transfer
                    type: boolean
                rates:
                    description: Rates
                    type: boolean
                beneficiaries:
                    description: Cobeneficiaries
                    type: boolean
        BalanceDetails:
            type: object
            properties:
                account:
                    description: The NBG account number (e.g. 11 digits).
                    type: string
                iban:
                    description: Account IBAN.
                    type: string
                accountType:
                    description: 'Code for account type, e.g. <code>10</code> for "Ταμιευτήριο"'
                    type: string
                currency:
                    description: 'Currency, 3-letter code , e.g. <code>EUR</code>'
                    type: string
                alias:
                    description: Friendly name
                    type: string
                product:
                    description: Account product code
                    type: string
                ledgerBalance:
                    format: double
                    description: Ledger balance
                    type: number
                availableBalance:
                    format: double
                    description: Available balance
                    type: number
                createDate:
                    format: date-time
                    description: Account creation date (UTC)
                    type: string
                lastTransactionDate:
                    format: date-time
                    description: Last transaction date (UTC)
                    type: string
                interestRate:
                    format: double
                    description: Interest rate
                    type: number
                interestAccrued:
                    format: double
                    description: Accrued interest
                    type: number
                interestPeriod:
                    description: Interest period
                    type: string
                chequeReservation:
                    format: double
                    description: Reservation from cheques
                    type: number
                deptReservation:
                    format: double
                    description: Other reservation
                    type: number
                overdraftLimit:
                    format: double
                    description: Overdraft limit
                    type: number
                excessLimitAmount:
                    format: double
                    description: Overdraft limit amount exceeded
                    type: number
                availableLimitAmount:
                    format: double
                    description: Available overdraft amount
                    type: number
                freeChequeAmnt:
                    format: double
                    description: Amount free from cheques
                    type: number
                expirationDate:
                    format: date-time
                    description: Account expiration date (UTC)
                    type: string
                interestScale:
                    description: Interest rate scale
                    type: string
                irisAccount:
                    description: IRIS account number (e.g. 4370140994)
                    type: string
                irisBalance:
                    format: double
                    description: IRIS account balance
                    type: number
                accType:
                    description: Account type code (e.g."3003")
                    type: string
                allowConnect:
                    description: Connection indicator
                    type: string
                allowDebit:
                    description: Account debit indicator(if 1 debit is allowed)
                    type: string
                allowCredit:
                    description: >-
                        Account credit indicator (A two digits string XY where if X=1 then credit is allowed
                        from the user  and if Υ=1 then credit is allowed from a third user)
                    type: string
                indicators:
                    description: Other indicators
                    type: string
                ledgerAccount:
                    description: Special account
                    type: string
                isOwnAccount:
                    description: Whether the account belongs to the user
                    type: boolean
                features:
                    $ref: '#/components/schemas/Feature'
                newMoneyBalance:
                    format: double
                    description: Available balance for transfer abroad
                    type: number
                mandatesNumber:
                    format: int32
                    description: Number of mandates
                    type: integer
        RequestOfCoBeneficiary:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    $ref: '#/components/schemas/CoBeneficiaryRequest'
            example:
                header:
                    ID: bf80bcea-7a8b-4a4a-aac3-0ea52f0494e2
                    application: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
                payload:
                    account: '67890123456'
                    userId: User1
        CoBeneficiaryRequest:
            required:
                - userId
                - account
            type: object
            properties:
                account:
                    description: The NBG account number (e.g. 11 digits)
                    type: string
                userId:
                    description: The username of the logged in user
                    type: string
        AccountBeneficiary:
            description: ''
            type: object
            properties:
                name:
                    description: Cobeneficiary name
                    type: string
                order:
                    description: Cobeneficiary order in the list
                    type: string
        InterestScale:
            type: object
            properties:
                from:
                    format: double
                    description: Amount from (lower bound).
                    type: number
                to:
                    format: double
                    description: Amount to (upper bound).
                    type: number
                rate:
                    format: double
                    description: Relevant interest rate.
                    type: number
        ResponseOfBoolean:
            type: object
            properties:
                payload:
                    type: boolean
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
            example:
                executionTime: 0
                payload: true
        ResponseOfListOfAccountBeneficiary:
            type: object
            properties:
                payload:
                    type: array
                    items:
                        $ref: '#/components/schemas/AccountBeneficiary'
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
            example:
                payload:
                    -
                        name: DIMITRIOS DIMITRIOU
                        order: '1'
                    -
                        name: KONSTANTINOS PAPADOPOULOS
                        order: '2'
                executionTime: 0
        ResponseOfSandbox:
            type: object
            properties:
                payload:
                    $ref: '#/components/schemas/Sandbox'
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
        Sandbox:
            type: object
            properties:
                sanboxId:
                    type: string
                version:
                    format: int32
                    description: Sandbox's version
                    type: integer
                users:
                    description: Sandbox's list of users
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                consentApplicationIds:
                    description: List of applications
                    type: array
                    items:
                        $ref: '#/components/schemas/ApplicationId'
                consents:
                    description: List of consents
                    type: array
                    items:
                        $ref: '#/components/schemas/SandboxConsentModel'
        User:
            type: object
            properties:
                accounts:
                    type: array
                    items:
                        $ref: '#/components/schemas/BankAccount'
                userId:
                    description: The username of the logged in user
                    type: string
                mobilePhoneNumber:
                    description: Mobile phone number for SmsOtp
                    type: string
                    example: '6912345678'
        BankAccount:
            type: object
            properties:
                account:
                    $ref: '#/components/schemas/AccountFull'
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Transaction'
                deferred:
                    type: array
                    items:
                        $ref: '#/components/schemas/DeferredTransactionInfo'
                pending:
                    type: array
                    items:
                        $ref: '#/components/schemas/DeferredItem'
                beneficiaries:
                    type: array
                    items:
                        $ref: '#/components/schemas/AccountBeneficiary'
                details:
                    $ref: '#/components/schemas/BalanceDetails'
                rates:
                    type: array
                    items:
                        $ref: '#/components/schemas/InterestScale'
        DeferredTransactionInfo:
            type: object
            properties:
                trnNo:
                    type: string
                trnId:
                    type: string
                name:
                    type: string
                description:
                    type: string
                createdDate:
                    format: date-time
                    description: Created Date (UTC)
                    type: string
                executionDate:
                    format: date-time
                    description: Execution Date (UTC)
                    type: string
                cancellationDate:
                    format: date-time
                    description: Cancellation Date (UTC)
                    type: string
                frequency:
                    format: int32
                    type: integer
                totalPayments:
                    format: int32
                    type: integer
                amount:
                    format: double
                    type: number
                status:
                    type: string
                transId:
                    type: string
                channel:
                    type: string
                rowsNum:
                    format: int32
                    type: integer
                debitAccount:
                    type: string
                totalAmount:
                    format: double
                    type: number
                creditAccount:
                    type: string
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/DeferredDetails'
                historical:
                    type: array
                    items:
                        $ref: '#/components/schemas/DeferredHistoryExecution'
                history:
                    $ref: '#/components/schemas/DeferredHistory'
                future:
                    type: array
                    items:
                        $ref: '#/components/schemas/DeferredFutureExecution'
                master:
                    $ref: '#/components/schemas/DeferredHistoryMaster'
        DeferredItem:
            type: object
            properties:
                userId:
                    description: The username of the logged in user
                    type: string
                rowNumber:
                    format: int64
                    type: integer
                counter:
                    format: int32
                    type: integer
                pendingCounter:
                    format: int32
                    type: integer
                approvedCounter:
                    format: int32
                    type: integer
                rejectedCounter:
                    format: int32
                    type: integer
                cancelledCounter:
                    format: int32
                    type: integer
                id:
                    format: uuid
                    type: string
                    example: CB79B636-5E26-40AD-818E-83DB38D0E490
                serviceAudit:
                    format: uuid
                    type: string
                    example: 612706A9-063D-43FE-AB93-C95F5F235BA6
                initialTimestamp:
                    format: date-time
                    description: Initial Timestamp (UTC)
                    type: string
                actionUserId:
                    type: string
                initialUserId:
                    type: string
                initialUserAuthorizationLevel:
                    type: string
                initialUserNumberOfApprovals:
                    format: int32
                    type: integer
                currentAuthorizationLevel:
                    type: string
                currentNumberOfApprovals:
                    format: int32
                    type: integer
                serviceAction:
                    type: string
                debitIBAN:
                    type: string
                amount:
                    format: double
                    type: number
                summary:
                    type: string
                status:
                    type: string
                statusTimestamp:
                    format: date-time
                    description: Status Timestamp (UTC)
                    type: string
                statusUserId:
                    type: string
                statusVersion:
                    format: int32
                    type: integer
                isUserInvolved:
                    type: boolean
                creditIBAN:
                    type: string
                refNo:
                    type: string
                tanNumber:
                    type: string
                executionResult:
                    $ref: '#/components/schemas/Response'
                isSmsOtp:
                    type: boolean
                rejectReason:
                    type: string
        DeferredDetails:
            type: object
            properties:
                id:
                    type: string
                field:
                    type: string
                value:
                    type: string
        DeferredHistoryExecution:
            type: object
            properties:
                errorMessage:
                    type: string
                executionTime:
                    format: date-time
                    description: Execution Time (UTC)
                    type: string
                executionStatus:
                    type: string
                externalId:
                    type: string
        DeferredHistory:
            type: object
            properties:
                master:
                    $ref: '#/components/schemas/DeferredHistoryMaster'
                execution:
                    type: array
                    items:
                        $ref: '#/components/schemas/DeferredHistoryExecution'
        DeferredFutureExecution:
            type: object
            properties:
                executionTime:
                    format: date-time
                    description: Execution Time (UTC)
                    type: string
                executionStatus:
                    type: string
                id:
                    type: string
                scheduleId:
                    type: string
                externalId:
                    type: string
                errorMessage:
                    type: string
        DeferredHistoryMaster:
            type: object
            properties:
                originalTotalPayments:
                    type: string
                transactionName:
                    type: string
                deletionUserId:
                    type: string
                frequency:
                    type: string
                originalExecutionDate:
                    format: date-time
                    description: Original Execution Date (UTC)
                    type: string
                name:
                    type: string
                deletionDate:
                    format: date-time
                    description: Deletion date (UTC)
                    type: string
                totalPayments:
                    type: string
                status:
                    type: string
                executionDate:
                    format: date-time
                    description: Execution Date (UTC)
                    type: string
        Response:
            type: object
            properties:
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
        RequestOfUpdateSandbox:
            required:
                - header
                - payload
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/RequestHeader'
                payload:
                    $ref: '#/components/schemas/Sandbox'
            example:
                header:
                    ID: e635360e-f1b8-4deb-810c-b75b055f4ba5
                    application: 598A4414-395A-43D6-A9C3-D53A15E6E9F6
                payload:
                    sanboxId: MySandbox
                    version: 1
                    users: []
        ResponseOfGetCurrentUser:
            type: object
            properties:
                payload:
                    $ref: '#/components/schemas/GetCurrentUserResponse'
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
            example:
                payload:
                    userId: User1
                    smsOtpMobile: (697)****111
                executionTime: 0
        GetCurrentUserResponse:
            type: object
            properties:
                userId:
                    description: The username of the logged in user
                    type: string
                smsOtpMobile:
                    description: The masked smsotp phone number of the logged in user (ie. 693****234)
                    type: string
        ErrorResponse:
            type: object
            properties:
                payload:
                    type: object
                exception:
                    $ref: '#/components/schemas/ResponseMessage'
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseMessage'
                executionTime:
                    format: double
                    type: number
            example:
                executionTime: 0
                exception:
                    id: 02A7470B-0FDE-4EB4-A1E1-662BEDE4434B
                    sev: Error
                    desc: Incorrect Json Format
                    cat: Business
                    code: 20
    parameters:
        X-Consent-Check-Header-Param:
            name: X-Consent-Check
            in: header
            description: A Boolean to enable or disable the consent validation
            required: true
            schema:
                default: false
                type: boolean
        Consent-Id-Header-Param:
            name: Consent-Id
            in: header
            description: Consent Identifier
            required: false
            schema:
                format: uuid
                default: 87DD5171-746E-4C66-8981-C4765FC8C48E
                type: string
    securitySchemes:
        Client-Id:
            type: apiKey
            description: A guid that uniquely identifies your application
            name: Client-Id
            in: header
security:
    -
        Client-Id: []